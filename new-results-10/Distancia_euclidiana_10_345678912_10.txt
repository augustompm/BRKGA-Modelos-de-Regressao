|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 10 1
-10.00	8.00	-9.00	9.00	25.46
-1.00	-5.00	-1.00	4.00	6.40
-3.00	-7.00	4.00	5.00	4.12
8.00	-5.00	-5.00	4.00	15.81
3.00	-5.00	1.00	-8.00	12.04
-5.00	-7.00	10.00	0.00	10.20
1.00	10.00	-10.00	1.00	14.21
6.00	-3.00	4.00	-3.00	11.40
-7.00	5.00	-3.00	-6.00	12.37
0.00	-6.00	-4.00	-1.00	6.71
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=10
run_brkga:
best=inf
BEST SOLUTION! cost=10.2118 stackLen: 30 => V3  V0  V1  V3  1.000000  V1  a / a V2  / * * * * empty: 0 1 0 0 1 1 1 1 1 0 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 0 0 0 0 1 
restart = 0 	 best= 10.211812	stackLen: 30 => V3  V0  V1  V3  1.000000  V1  a / a V2  / * * * * empty: 0 1 0 0 1 1 1 1 1 0 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=6.34788 stackLen: 30 => V1  a r 1.000000  1.000000  / a 1.000000  i a / * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 0 0 1 0 1 0 0 1 
restart = 0 	 best= 6.347883	stackLen: 30 => V1  a r 1.000000  1.000000  / a 1.000000  i a / * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 0 0 1 0 1 0 0 1 
BEST SOLUTION! cost=2.9671 stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 0 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 1 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 2 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 3 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 4 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 5 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 6 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 7 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 8 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 9 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
restart = 10 	 best= 2.967104	stackLen: 30 => 1.000000  V1  V1  + 1.000000  V0  / - * a r empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=2.86961 stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 0 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 1 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 2 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 3 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 4 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 5 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 6 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 7 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 8 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 9 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 10 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
restart = 11 	 best= 2.869612	stackLen: 30 => 1.000000  1.000000  / V1  V1  + 1.000000  1.000000  1.000000  + + V0  V0  + / - * a r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=1.88583 stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 0 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 1 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 2 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 3 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 4 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 5 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 6 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 7 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 8 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 9 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 10 	 best= 1.885829	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  + 1.000000  1.000000  + 1.000000  1.000000  + + V0  V0  V0  - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=1.59261 stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 1.592613	stackLen: 30 => 1.000000  1.000000  / V1  / V1  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=1.50248 stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 12 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 13 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 14 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 15 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 16 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 17 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 18 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 19 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 20 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 21 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 22 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 23 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 24 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 25 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 26 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 27 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 28 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 29 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 30 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 31 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 32 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 33 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 34 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 35 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 36 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 37 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 38 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 39 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 40 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 41 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 42 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 43 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 44 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 45 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 46 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 47 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 48 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 49 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 50 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 51 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 52 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 53 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 54 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 55 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 56 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 57 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 58 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 59 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 60 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 61 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 62 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 63 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 64 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 65 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 66 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 67 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 68 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 69 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 70 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 71 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 72 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 73 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 74 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 75 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 76 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 77 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 78 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 79 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 80 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 81 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 82 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 83 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 84 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 85 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 86 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 87 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 88 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 89 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 90 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 91 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 92 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 93 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 94 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 95 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 96 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 97 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 98 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 99 	 best= 1.502483	stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
FINISHED BRKGP!
best=1.50248
stackLen: 30 => 1.000000  1.000000  / V1  / V0  V1  V1  + + 1.000000  1.000000  * 1.000000  1.000000  + + V0  V0  V0  V0  + - + * - * a r r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: \sqrt{\sqrt{{((((((v0 + v0) - v0) + v0) * ((1 + 1) + (1 * 1))) - ((v1 + v1) + v0)) * (v1/(1/1)))^2}}}
Tempo de execucao: 339.443 segundos
FIM
