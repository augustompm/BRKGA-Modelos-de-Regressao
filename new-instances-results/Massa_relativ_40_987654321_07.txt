Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm / s'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' c1 a v1 a / c0 - r v0 /'
SOLUTION IS: ' c1 a v1 a / c0 - r v0 /'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
const unit: 'm / s'
3.5) SETUP UNITS
UNITS: m ; s ; 
4) FINISHED READING PROBLEM
2 40 2
31.00	115980472.00	33.62
97.00	273349182.00	236.21
34.00	201195373.00	45.86
83.00	251134626.00	151.98
54.00	182964155.00	68.17
92.00	170574166.00	111.87
22.00	298738372.00	262.58
83.00	188566486.00	106.76
68.00	237298861.00	111.27
42.00	171932075.00	51.27
72.00	149614205.00	83.09
8.00	60195921.00	8.17
27.00	550184.00	27.00
29.00	278882363.00	79.04
16.00	89099325.00	16.76
67.00	29067160.00	67.32
73.00	208130428.00	101.43
42.00	77250162.00	43.47
85.00	222066286.00	126.53
86.00	208355236.00	119.61
20.00	236148391.00	32.46
56.00	267777641.00	124.54
53.00	97425433.00	56.04
61.00	29277141.00	61.29
87.00	52879024.00	88.39
64.00	108840873.00	68.69
62.00	132024174.00	69.06
87.00	255358777.00	166.07
87.00	138080568.00	98.02
27.00	78783701.00	27.98
12.00	80568790.00	12.46
47.00	84002390.00	48.96
54.00	147315356.00	62.00
45.00	141580001.00	51.05
42.00	80924135.00	43.62
65.00	175237723.00	80.11
37.00	213904270.00	52.81
62.00	90519794.00	65.04
78.00	39355024.00	78.68
18.00	34915907.00	18.12
1.0000	1.0000
300000000.0000	300000000.0000
isSquared? 0
varUnits: m m / s 
outUnit: m
training=40
run_brkga:
best=inf
BEST SOLUTION! cost=24.5594 stackLen: 30 => 1.000000  1.000000  V0  1.000000  1.000000  r / V0  * / V0  i * / / empty: 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 1 
restart = 0 	 best= 24.559427	stackLen: 30 => 1.000000  1.000000  V0  1.000000  1.000000  r / V0  * / V0  i * / / empty: 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 1 
restart = 1 	 best= 24.559427	stackLen: 30 => 1.000000  1.000000  V0  1.000000  1.000000  r / V0  * / V0  i * / / empty: 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=20.9474 stackLen: 30 => 1.000000  1.000000  * e 1.000000  * 1.000000  * r i V0  V0  V0  V0  + * / / empty: 0 0 0 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 1 0 0 0 0 1 
restart = 0 	 best= 20.947361	stackLen: 30 => 1.000000  1.000000  * e 1.000000  * 1.000000  * r i V0  V0  V0  V0  + * / / empty: 0 0 0 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 1 1 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=16.3426 stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 0 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 1 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 2 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 3 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 4 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 5 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 6 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 7 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 8 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
restart = 9 	 best= 16.342572	stackLen: 30 => 1.000000  300000000.000000  r V0  V1  1.000000  1.000000  300000000.000000  / / + r * / / empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 1 0 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 
BEST SOLUTION! cost=11.6205 stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
restart = 12 	 best= 11.620516	stackLen: 30 => 1.000000  1.000000  * V0  V1  300000000.000000  V1  / / i V1  * a a r 1.000000  V0  * * + / empty: 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=7.66701 stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 0 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 1 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 2 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 3 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 4 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 5 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 6 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 7 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 8 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 9 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 10 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 11 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 12 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 13 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 14 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 15 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 16 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 17 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 18 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 19 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 20 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 21 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 22 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 23 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 24 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 25 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 26 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 27 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 28 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 29 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 30 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 31 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 32 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 33 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 34 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 35 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 36 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 37 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 38 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 39 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 40 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 41 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 42 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 43 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 44 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 45 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 46 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 47 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 48 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 49 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 50 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 51 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 52 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 53 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 54 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 55 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 56 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 57 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 58 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 59 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 60 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 61 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 62 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 63 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 64 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 65 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 66 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 67 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 68 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 69 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 70 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 71 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 72 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 73 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 74 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 75 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 76 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 77 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 78 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 79 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 80 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 81 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 82 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 83 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 84 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 85 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 86 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 87 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 88 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 89 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 90 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 91 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 92 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 93 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 94 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 95 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 96 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 97 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 98 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 99 	 best= 7.667008	stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
FINISHED BRKGP!
best=7.66701
stackLen: 30 => 1.000000  1.000000  * 1.000000  * 1.000000  * V0  V1  V1  / 300000000.000000  V1  / a r a * a a r 1.000000  V0  V0  + * * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((v0 + v0) * 1) * \sqrt{{{({\sqrt{{(v1/3e+08)^2}}^2} * (v1/v1))^2}^2}}) + v0)/(1 * (1 * (1 * 1))))
Tempo de execucao: 523.277 segundos
FIM
