Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
out unit: 's'
has_solution='HAS_SOLUTION' => ' c2 c3 + c1 * c4 * r v0 v0 v0 * * r c5 c0 * * /'
SOLUTION IS: ' c2 c3 + c1 * c4 * r v0 v0 v0 * * r c5 c0 * * /'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
const unit: 'm^3 * kg^-1 * s^-2'
const unit: 'kg'
const unit: 'kg'
const unit: '*'
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; s ; kg ; 
4) FINISHED READING PROBLEM
1 10 6
384000.00	74.30
388000.00	75.50
363000.00	68.50
383000.00	74.10
375000.00	71.70
404000.00	80.50
400000.00	79.00
375000.00	71.90
403000.00	79.90
380000.00	73.30
3.1416	3.1416
0.6674	0.6674
59720.0000	59720.0000
734.0000	734.0000
10000000000.0000	10000000000.0000
2.0000	2.0000
isSquared? 0
varUnits: m 
outUnit: s
training=10
run_brkga:
best=inf
BEST SOLUTION! cost=10002 stackLen: 30 => V0  0.667408  * 2.000000  * 0.667408  / 2.000000  0.667408  3.141593  * * V0  V0  r * / * empty: 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
COST2 IS BETTER!!!74.8697
restart = 0 	 best= 74.869698	stackLen: 30 => V0  0.667408  * 2.000000  * 0.667408  / 2.000000  2.000000  + 0.667408  V0  * * V0  V0  r * / * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
restart = 1 	 best= 74.869698	stackLen: 30 => V0  0.667408  * 2.000000  * 0.667408  / 2.000000  2.000000  + 0.667408  V0  * * V0  V0  r * / * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=1.62913 stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 0 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 1 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 2 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 3 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 4 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 5 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 6 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 7 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 8 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 9 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 10 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 11 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 12 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 13 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 14 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 15 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 16 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 17 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 18 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 19 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 20 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 21 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 22 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 23 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 24 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 25 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 26 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 27 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 28 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
restart = 29 	 best= 1.629126	stackLen: 30 => V0  10000000000.000000  3.141593  + / i 2.000000  * a r 734.000000  V0  0.667408  / * * V0  / r empty: 0 1 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 1 0 1 0 
BEST SOLUTION! cost=0 stackLen: 30 => V0  10000000000.000000  3.141593  * / i 2.000000  * a r 734.000000  V0  V0  V0  + + 0.667408  / * * V0  / r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
restart = 0 	 best= 0.000000	stackLen: 30 => V0  10000000000.000000  3.141593  * / i 2.000000  * a r 734.000000  V0  V0  V0  + + 0.667408  / * * V0  / r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => V0  10000000000.000000  3.141593  * / i 2.000000  * a r 734.000000  V0  V0  V0  + + 0.667408  / * * V0  / r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
trueStackSize=23
printSolution2: \sqrt{(v0/(((0.667408/((v0 + v0) + v0)) * 734) * \sqrt{{(2 * (((3.14159 * 1e+10)/v0)))^2}}))}
Tempo de execucao: 218.909 segundos
FIM
