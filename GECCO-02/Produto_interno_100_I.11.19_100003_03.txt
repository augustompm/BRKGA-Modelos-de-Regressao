Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 11
individualLen:97
Debug: Iniciando leitura do arquivo...
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
Debug: nVars=6, tests=100, nConst=1
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
var[0] = -9 var[1] = -1 var[2] = -8 var[3] = -4 var[4] = 4 var[5] = 5 output = 61
var[0] = -2 var[1] = -10 var[2] = 3 var[3] = -9 var[4] = -8 var[5] = -10 output = 73
var[0] = -7 var[1] = -4 var[2] = -9 var[3] = -2 var[4] = 4 var[5] = -4 output = 30
var[0] = 7 var[1] = 2 var[2] = 9 var[3] = -5 var[4] = 8 var[5] = 4 output = 1
var[0] = 3 var[1] = -6 var[2] = 5 var[3] = -8 var[4] = -7 var[5] = -7 output = -9
var[0] = -10 var[1] = -7 var[2] = 6 var[3] = -9 var[4] = -10 var[5] = 7 output = -54
var[0] = 5 var[1] = -8 var[2] = 1 var[3] = 4 var[4] = -10 var[5] = 10 output = -136
var[0] = 2 var[1] = 6 var[2] = -7 var[3] = 3 var[4] = -3 var[5] = -3 output = 0
var[0] = 10 var[1] = -10 var[2] = 3 var[3] = 3 var[4] = 6 var[5] = -8 output = -139
var[0] = 0 var[1] = 1 var[2] = 8 var[3] = -10 var[4] = -4 var[5] = 2 output = -88
var[0] = -6 var[1] = 6 var[2] = -8 var[3] = -3 var[4] = -3 var[5] = 8 output = -36
var[0] = -3 var[1] = -5 var[2] = 5 var[3] = 9 var[4] = 8 var[5] = -8 output = -4
var[0] = 2 var[1] = -2 var[2] = 7 var[3] = 6 var[4] = -7 var[5] = -5 output = 73
var[0] = 7 var[1] = -4 var[2] = -9 var[3] = 1 var[4] = -2 var[5] = -8 output = -21
var[0] = 6 var[1] = -7 var[2] = -3 var[3] = -8 var[4] = -7 var[5] = 3 output = -39
var[0] = -7 var[1] = -9 var[2] = 6 var[3] = -10 var[4] = -3 var[5] = -4 output = 15
var[0] = 8 var[1] = 2 var[2] = 5 var[3] = -4 var[4] = 5 var[5] = 5 output = 21
var[0] = 9 var[1] = -8 var[2] = 2 var[3] = 8 var[4] = 4 var[5] = 4 output = -40
var[0] = 6 var[1] = 9 var[2] = 10 var[3] = 4 var[4] = -1 var[5] = 3 output = 91
var[0] = 6 var[1] = -8 var[2] = -9 var[3] = 3 var[4] = -8 var[5] = 8 output = -139
var[0] = 10 var[1] = 2 var[2] = 1 var[3] = -6 var[4] = -3 var[5] = 3 output = 5
var[0] = -3 var[1] = -9 var[2] = 2 var[3] = -6 var[4] = 0 var[5] = 0 output = 15
var[0] = 2 var[1] = 0 var[2] = -9 var[3] = 2 var[4] = -7 var[5] = -8 output = 38
var[0] = 10 var[1] = -1 var[2] = -3 var[3] = 8 var[4] = 8 var[5] = -7 output = -90
var[0] = 8 var[1] = 10 var[2] = -3 var[3] = 3 var[4] = -4 var[5] = -10 output = 111
var[0] = -9 var[1] = -1 var[2] = 3 var[3] = 2 var[4] = 4 var[5] = -1 output = 11
var[0] = -2 var[1] = 4 var[2] = -9 var[3] = -3 var[4] = -10 var[5] = 9 output = -71
var[0] = -1 var[1] = 2 var[2] = 1 var[3] = 9 var[4] = -5 var[5] = -3 output = 22
var[0] = -7 var[1] = -1 var[2] = 6 var[3] = -7 var[4] = 7 var[5] = -6 output = -77
var[0] = 9 var[1] = 10 var[2] = -7 var[3] = 5 var[4] = 8 var[5] = -9 output = -17
var[0] = -1 var[1] = -10 var[2] = -10 var[3] = -10 var[4] = 1 var[5] = 7 output = 117
var[0] = -9 var[1] = 3 var[2] = 2 var[3] = -7 var[4] = 10 var[5] = 10 output = 59
var[0] = 1 var[1] = -5 var[2] = 9 var[3] = 9 var[4] = -2 var[5] = 5 output = 66
var[0] = 10 var[1] = 7 var[2] = -1 var[3] = -2 var[4] = -7 var[5] = -6 output = 114
var[0] = 6 var[1] = -7 var[2] = 1 var[3] = 9 var[4] = -2 var[5] = -2 output = -29
var[0] = 10 var[1] = 9 var[2] = 7 var[3] = -7 var[4] = -2 var[5] = -7 output = 55
var[0] = 7 var[1] = -3 var[2] = -2 var[3] = 3 var[4] = 8 var[5] = 8 output = 37
var[0] = -2 var[1] = -8 var[2] = 7 var[3] = 9 var[4] = 2 var[5] = -5 output = 69
var[0] = 0 var[1] = -7 var[2] = 8 var[3] = 4 var[4] = -6 var[5] = 4 output = 8
var[0] = -9 var[1] = -1 var[2] = -1 var[3] = -2 var[4] = 3 var[5] = -1 output = 8
var[0] = -4 var[1] = -5 var[2] = -8 var[3] = -6 var[4] = -7 var[5] = -7 output = 117
var[0] = 1 var[1] = 0 var[2] = -7 var[3] = 6 var[4] = -2 var[5] = 9 output = -60
var[0] = -8 var[1] = 0 var[2] = -6 var[3] = -3 var[4] = -5 var[5] = -4 output = 38
var[0] = 9 var[1] = -1 var[2] = -3 var[3] = -1 var[4] = -2 var[5] = -10 output = 14
var[0] = -1 var[1] = -8 var[2] = -3 var[3] = 9 var[4] = -2 var[5] = -4 output = -11
var[0] = 6 var[1] = 10 var[2] = 1 var[3] = 3 var[4] = -7 var[5] = 5 output = 28
var[0] = 8 var[1] = 8 var[2] = 3 var[3] = -7 var[4] = -2 var[5] = -1 output = 45
var[0] = 6 var[1] = 7 var[2] = 4 var[3] = 5 var[4] = 3 var[5] = 2 output = 68
var[0] = 5 var[1] = 5 var[2] = 9 var[3] = -8 var[4] = -1 var[5] = 9 output = -56
var[0] = 0 var[1] = -6 var[2] = 9 var[3] = -5 var[4] = 2 var[5] = 5 output = -35
var[0] = 2 var[1] = -9 var[2] = -3 var[3] = 1 var[4] = -6 var[5] = -5 output = 9
var[0] = 3 var[1] = 6 var[2] = 4 var[3] = 4 var[4] = 9 var[5] = -8 output = -38
var[0] = -10 var[1] = 6 var[2] = -8 var[3] = 7 var[4] = -9 var[5] = 10 output = -206
var[0] = -3 var[1] = -6 var[2] = -8 var[3] = -10 var[4] = -4 var[5] = -3 output = 110
var[0] = 0 var[1] = 5 var[2] = -3 var[3] = -1 var[4] = -10 var[5] = 10 output = -97
var[0] = 4 var[1] = 6 var[2] = -9 var[3] = -3 var[4] = -9 var[5] = -6 output = 105
var[0] = 0 var[1] = 2 var[2] = 0 var[3] = -3 var[4] = 5 var[5] = 0 output = 0
var[0] = 7 var[1] = 9 var[2] = 0 var[3] = 6 var[4] = -5 var[5] = 8 output = 23
var[0] = 6 var[1] = -4 var[2] = 0 var[3] = -6 var[4] = 0 var[5] = 8 output = -24
var[0] = -6 var[1] = 1 var[2] = -2 var[3] = -10 var[4] = 4 var[5] = -2 output = 6
var[0] = 9 var[1] = -2 var[2] = 0 var[3] = 6 var[4] = 1 var[5] = -2 output = -20
var[0] = 6 var[1] = -4 var[2] = -3 var[3] = -10 var[4] = 10 var[5] = -7 output = -64
var[0] = 10 var[1] = -4 var[2] = 5 var[3] = 6 var[4] = -7 var[5] = -8 output = 46
var[0] = -7 var[1] = 6 var[2] = 8 var[3] = 5 var[4] = -7 var[5] = -7 output = 47
var[0] = 6 var[1] = 8 var[2] = 3 var[3] = 0 var[4] = 6 var[5] = 5 output = 78
var[0] = 7 var[1] = 3 var[2] = 4 var[3] = 1 var[4] = 0 var[5] = -2 output = 25
var[0] = -7 var[1] = 7 var[2] = 10 var[3] = 8 var[4] = -2 var[5] = -3 output = 37
var[0] = -6 var[1] = 7 var[2] = -2 var[3] = 6 var[4] = 0 var[5] = 8 output = -54
var[0] = 4 var[1] = 1 var[2] = 3 var[3] = 3 var[4] = 2 var[5] = 1 output = 15
var[0] = 9 var[1] = 4 var[2] = 4 var[3] = 5 var[4] = 5 var[5] = -2 output = 46
var[0] = -4 var[1] = 0 var[2] = -3 var[3] = -8 var[4] = -8 var[5] = 5 output = -16
var[0] = 9 var[1] = -9 var[2] = -9 var[3] = -9 var[4] = -10 var[5] = 3 output = -30
var[0] = 2 var[1] = -8 var[2] = 9 var[3] = 2 var[4] = 9 var[5] = -6 output = -52
var[0] = -6 var[1] = -9 var[2] = 2 var[3] = 10 var[4] = 9 var[5] = -6 output = 20
var[0] = -2 var[1] = 7 var[2] = -9 var[3] = 8 var[4] = 3 var[5] = 8 output = -62
var[0] = 4 var[1] = -8 var[2] = -1 var[3] = -3 var[4] = 5 var[5] = -5 output = -54
var[0] = 6 var[1] = -2 var[2] = 0 var[3] = -6 var[4] = -4 var[5] = 9 output = -48
var[0] = 3 var[1] = -4 var[2] = -5 var[3] = -8 var[4] = 2 var[5] = 4 output = 36
var[0] = -6 var[1] = -3 var[2] = 7 var[3] = 10 var[4] = 9 var[5] = -3 output = 61
var[0] = 4 var[1] = 3 var[2] = -1 var[3] = 8 var[4] = 10 var[5] = -10 output = -96
var[0] = 8 var[1] = 10 var[2] = -3 var[3] = -5 var[4] = 5 var[5] = 1 output = 100
var[0] = 9 var[1] = 1 var[2] = 4 var[3] = 2 var[4] = 7 var[5] = -2 output = 3
var[0] = 4 var[1] = -3 var[2] = -5 var[3] = 7 var[4] = -5 var[5] = 0 output = -47
var[0] = -5 var[1] = -9 var[2] = -10 var[3] = -4 var[4] = 1 var[5] = -1 output = 84
var[0] = 6 var[1] = 9 var[2] = -9 var[3] = 5 var[4] = 6 var[5] = 9 output = 63
var[0] = -4 var[1] = 7 var[2] = -5 var[3] = 8 var[4] = -5 var[5] = 1 output = -73
var[0] = 0 var[1] = 0 var[2] = -3 var[3] = 3 var[4] = 4 var[5] = -5 output = -29
var[0] = 3 var[1] = 0 var[2] = 7 var[3] = 2 var[4] = 2 var[5] = 10 output = 34
var[0] = 3 var[1] = -5 var[2] = -4 var[3] = 0 var[4] = 10 var[5] = -10 output = -115
var[0] = -6 var[1] = -4 var[2] = 5 var[3] = 10 var[4] = 10 var[5] = 5 output = 124
var[0] = -4 var[1] = -8 var[2] = -9 var[3] = -8 var[4] = -1 var[5] = 6 output = 98
var[0] = -10 var[1] = 2 var[2] = 6 var[3] = -9 var[4] = -1 var[5] = -5 output = -69
var[0] = -10 var[1] = 2 var[2] = -3 var[3] = -8 var[4] = 6 var[5] = -4 output = -20
var[0] = 3 var[1] = -3 var[2] = 4 var[3] = -2 var[4] = -6 var[5] = 0 output = -17
var[0] = -7 var[1] = 9 var[2] = 4 var[3] = -7 var[4] = 5 var[5] = -4 output = -111
var[0] = -1 var[1] = 9 var[2] = -5 var[3] = -7 var[4] = 5 var[5] = 10 output = 76
var[0] = 8 var[1] = 3 var[2] = 3 var[3] = -9 var[4] = 4 var[5] = 2 output = 5
var[0] = 0 var[1] = 2 var[2] = 4 var[3] = -3 var[4] = -2 var[5] = -6 output = 0
var[0] = -6 var[1] = 10 var[2] = -6 var[3] = 1 var[4] = 5 var[5] = 2 output = -56
var[0] = -5 var[1] = -9 var[2] = -8 var[3] = -6 var[4] = 9 var[5] = -3 output = 66
3) READING PROBLEM CONSTANTS
Lendo constante 1: '1 1 *'
Constante lida: 1 1 *
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
Leitura feita com sucesso
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
8.00	10.00	-3.00	-5.00	5.00	1.00	100.00
9.00	1.00	4.00	2.00	7.00	-2.00	3.00
4.00	-3.00	-5.00	7.00	-5.00	0.00	-47.00
-5.00	-9.00	-10.00	-4.00	1.00	-1.00	84.00
6.00	9.00	-9.00	5.00	6.00	9.00	63.00
-4.00	7.00	-5.00	8.00	-5.00	1.00	-73.00
0.00	0.00	-3.00	3.00	4.00	-5.00	-29.00
3.00	0.00	7.00	2.00	2.00	10.00	34.00
3.00	-5.00	-4.00	0.00	10.00	-10.00	-115.00
-6.00	-4.00	5.00	10.00	10.00	5.00	124.00
-4.00	-8.00	-9.00	-8.00	-1.00	6.00	98.00
-10.00	2.00	6.00	-9.00	-1.00	-5.00	-69.00
-10.00	2.00	-3.00	-8.00	6.00	-4.00	-20.00
3.00	-3.00	4.00	-2.00	-6.00	0.00	-17.00
-7.00	9.00	4.00	-7.00	5.00	-4.00	-111.00
-1.00	9.00	-5.00	-7.00	5.00	10.00	76.00
8.00	3.00	3.00	-9.00	4.00	2.00	5.00
0.00	2.00	4.00	-3.00	-2.00	-6.00	0.00
-6.00	10.00	-6.00	1.00	5.00	2.00	-56.00
-5.00	-9.00	-8.00	-6.00	9.00	-3.00	66.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=5
run_brkga:
best=inf
SELECTED: [48 28 7 38 97 39 50 82 11 3 ]
BEST SOLUTION! cost=21 stackLen: 10 => V3  V3  - V1  * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 21.000000	stackLen: 10 => V3  V3  - V1  * empty: 0 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=18.7 stackLen: 10 => V2  V3  V0  + * empty: 0 1 1 0 0 1 1 0 0 1 
iteration = 0 	 best= 18.700000	stackLen: 10 => V2  V3  V0  + * empty: 0 1 1 0 0 1 1 0 0 1 
iteration = 1 	 best= 18.700000	stackLen: 10 => V2  V3  V0  + * empty: 0 1 1 0 0 1 1 0 0 1 
iteration = 2 	 best= 18.700000	stackLen: 10 => V2  V3  V0  + * empty: 0 1 1 0 0 1 1 0 0 1 
iteration = 3 	 best= 18.700000	stackLen: 10 => V2  V3  V0  + * empty: 0 1 1 0 0 1 1 0 0 1 
BEST SOLUTION! cost=18.1 stackLen: 10 => V5  V4  - V0  * empty: 0 1 1 0 1 1 1 0 0 0 
iteration = 0 	 best= 18.100000	stackLen: 10 => V5  V4  - V0  * empty: 0 1 1 0 1 1 1 0 0 0 
iteration = 1 	 best= 18.100000	stackLen: 10 => V5  V4  - V0  * empty: 0 1 1 0 1 1 1 0 0 0 
iteration = 2 	 best= 18.100000	stackLen: 10 => V5  V4  - V0  * empty: 0 1 1 0 1 1 1 0 0 0 
BEST SOLUTION! cost=17.4 stackLen: 10 => V5  V2  V0  V2  - - * empty: 0 0 1 1 0 0 0 1 0 0 
iteration = 0 	 best= 17.400000	stackLen: 10 => V5  V2  V0  V2  - - * empty: 0 0 1 1 0 0 0 1 0 0 
iteration = 1 	 best= 17.400000	stackLen: 10 => V5  V2  V0  V2  - - * empty: 0 0 1 1 0 0 0 1 0 0 
iteration = 2 	 best= 17.400000	stackLen: 10 => V5  V2  V0  V2  - - * empty: 0 0 1 1 0 0 0 1 0 0 
iteration = 3 	 best= 17.400000	stackLen: 10 => V5  V2  V0  V2  - - * empty: 0 0 1 1 0 0 0 1 0 0 
BEST SOLUTION! cost=14.1668 stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 2 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 3 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 4 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 5 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 6 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 7 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 8 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 9 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 10 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
iteration = 11 	 best= 14.166777	stackLen: 10 => 1.00  e V3  V3  V2  - * / empty: 0 0 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=14.1 stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 0 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 1 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 2 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 3 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 4 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 5 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 6 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 7 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 8 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 9 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 10 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 11 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 12 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 13 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 14 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 15 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 16 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 17 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 18 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 19 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 20 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 21 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 22 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
iteration = 23 	 best= 14.100000	stackLen: 10 => V5  V3  V5  + + V5  - V0  * empty: 0 0 0 0 0 0 1 0 0 0 
BEST SOLUTION! cost=13.8 stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 13.800000	stackLen: 10 => V2  V3  + V5  + V4  - V0  * empty: 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [58 89 27 67 12 36 7 29 31 99 ]
BEST SOLUTION! cost=30.2 stackLen: 15 => V4  1.00  a V4  / * empty: 0 1 0 0 1 1 1 1 1 1 0 0 1 0 1 
iteration = 0 	 best= 30.200000	stackLen: 15 => V4  1.00  a V4  / * empty: 0 1 0 0 1 1 1 1 1 1 0 0 1 0 1 
BEST SOLUTION! cost=20.6 stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 6 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 7 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 8 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 9 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 10 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 11 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 12 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 13 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 14 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 15 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 16 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 17 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 18 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 19 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 20 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
iteration = 21 	 best= 20.600000	stackLen: 15 => V2  V3  V0  - 1.00  V3  / - * empty: 0 1 1 0 0 0 1 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=15.1 stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.100000	stackLen: 15 => V4  a 1.00  V5  V4  - 1.00  1.00  + V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=10.541 stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 50 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 51 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 52 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 53 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 54 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 55 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 56 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 57 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 58 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 59 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 60 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 61 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 62 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 63 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 64 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 65 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 66 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 67 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 68 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 69 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 70 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 71 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 72 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 73 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 74 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 75 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 76 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 77 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 78 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 79 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 80 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 81 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 82 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 83 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 84 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 85 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 86 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 87 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 88 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 89 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 90 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 91 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 92 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 93 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 94 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 95 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 96 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 97 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 98 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 99 	 best= 10.540977	stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [86 1 49 3 77 29 67 0 98 63 ]
BEST SOLUTION! cost=24.2134 stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 6 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 7 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 8 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 9 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 10 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 11 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 12 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 13 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 14 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 15 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 16 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 17 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 18 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 19 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 20 	 best= 24.213378	stackLen: 22 => V1  V2  1.00  e V0  V3  + / + * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=20.936 stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 50 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 51 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 52 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 53 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 54 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 55 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 56 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 57 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 58 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 59 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 60 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 61 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 62 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 63 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 64 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 65 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 66 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 67 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 68 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 69 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 70 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 71 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 72 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 73 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 74 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 75 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 76 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 77 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 78 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 79 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 80 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 81 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 82 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 83 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 84 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 85 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 86 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 87 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 88 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 89 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 90 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 91 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 92 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 93 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 94 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 95 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 96 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 97 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 98 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 99 	 best= 20.935979	stackLen: 22 => V1  V2  1.00  1.00  1.00  - + 1.00  1.00  * / e V0  V3  V4  V3  + + + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [5 44 84 48 43 94 26 51 45 85 ]
BEST SOLUTION! cost=35.5 stackLen: 30 => 1.00  V5  / 1.00  V4  V3  1.00  V4  * + - / * empty: 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 35.500000	stackLen: 30 => 1.00  V5  / 1.00  V4  V3  1.00  V4  * + - / * empty: 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 0 0 0 0 
BEST SOLUTION! cost=35.4 stackLen: 30 => V4  a i V4  i i / V4  a r * V2  a * empty: 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 
iteration = 0 	 best= 35.400000	stackLen: 30 => V4  a i V4  i i / V4  a r * V2  a * empty: 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 
iteration = 1 	 best= 35.400000	stackLen: 30 => V4  a i V4  i i / V4  a r * V2  a * empty: 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 
iteration = 2 	 best= 35.400000	stackLen: 30 => V4  a i V4  i i / V4  a r * V2  a * empty: 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 
iteration = 3 	 best= 35.400000	stackLen: 30 => V4  a i V4  i i / V4  a r * V2  a * empty: 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 
iteration = 4 	 best= 35.400000	stackLen: 30 => V4  a i V4  i i / V4  a r * V2  a * empty: 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 0 0 1 0 1 1 0 1 1 1 0 1 1 
BEST SOLUTION! cost=33.0452 stackLen: 30 => 1.00  V4  1.00  V5  * 1.00  e a V4  / + * * empty: 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 
iteration = 0 	 best= 33.045207	stackLen: 30 => 1.00  V4  1.00  V5  * 1.00  e a V4  / + * * empty: 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 
iteration = 1 	 best= 33.045207	stackLen: 30 => 1.00  V4  1.00  V5  * 1.00  e a V4  / + * * empty: 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 
iteration = 2 	 best= 33.045207	stackLen: 30 => 1.00  V4  1.00  V5  * 1.00  e a V4  / + * * empty: 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 
iteration = 3 	 best= 33.045207	stackLen: 30 => 1.00  V4  1.00  V5  * 1.00  e a V4  / + * * empty: 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 
iteration = 4 	 best= 33.045207	stackLen: 30 => 1.00  V4  1.00  V5  * 1.00  e a V4  / + * * empty: 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 
iteration = 5 	 best= 33.045207	stackLen: 30 => 1.00  V4  1.00  V5  * 1.00  e a V4  / + * * empty: 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 
BEST SOLUTION! cost=32.8028 stackLen: 30 => 1.00  e r 1.00  * r 1.00  r i V4  * / V5  1.00  * * empty: 0 1 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 32.802762	stackLen: 30 => 1.00  e r 1.00  * r 1.00  r i V4  * / V5  1.00  * * empty: 0 1 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 32.802762	stackLen: 30 => 1.00  e r 1.00  * r 1.00  r i V4  * / V5  1.00  * * empty: 0 1 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 32.802762	stackLen: 30 => 1.00  e r 1.00  * r 1.00  r i V4  * / V5  1.00  * * empty: 0 1 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 32.802762	stackLen: 30 => 1.00  e r 1.00  * r 1.00  r i V4  * / V5  1.00  * * empty: 0 1 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25.2229 stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 5 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 6 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 7 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 8 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 9 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 10 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 11 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 12 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 13 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 14 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 15 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 16 	 best= 25.222942	stackLen: 30 => V3  a V4  V2  * 1.00  e e r V5  V5  * / - - empty: 0 1 1 1 1 1 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=18.9 stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 0 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 1 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 2 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 3 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 4 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 5 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 6 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 7 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 8 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 9 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 10 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 11 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 12 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 13 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 14 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 15 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 16 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 17 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 18 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 19 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 20 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 21 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 22 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 23 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 24 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 25 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 26 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 27 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 28 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 29 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 30 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 31 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 32 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 33 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 34 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 35 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 36 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 37 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 38 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 39 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 40 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 41 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 42 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 43 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 44 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 45 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 46 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 47 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 48 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 49 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 50 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 51 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 52 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 53 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 54 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 55 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 56 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 57 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 58 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 59 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 60 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 61 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 62 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 63 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 64 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 65 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 66 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 67 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 68 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 69 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 70 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 71 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 72 	 best= 18.900000	stackLen: 30 => V0  1.00  V0  V2  i V3  V5  + a r - - / * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 
BEST SOLUTION! cost=18.6 stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 18.600000	stackLen: 30 => V0  V0  - V0  - 1.00  V2  V0  V4  V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.5 stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 18.500000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  + V2  V0  V2  V4  - V1  V5  - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=15.3 stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 15.300000	stackLen: 30 => V0  V0  V0  - - V0  - 1.00  1.00  1.00  + + V0  V2  V2  V2  - V1  V1  V0  - - + a r - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [41 31 55 12 86 5 1 52 23 73 ]
BEST SOLUTION! cost=36 stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 1 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 2 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 3 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 4 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 5 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 6 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 7 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 8 	 best= 36.000000	stackLen: 30 => V0  V3  - V3  + V2  1.00  1.00  r * * * empty: 0 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=32 stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 0 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 1 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 2 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 3 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 4 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 5 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 6 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 7 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 8 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 9 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 10 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 11 	 best= 32.000000	stackLen: 30 => 1.00  V2  a r / V4  - V5  * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
BEST SOLUTION! cost=26.4086 stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 11 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 12 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 13 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 14 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 15 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 16 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 17 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 18 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 19 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 20 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 21 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 22 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 23 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 24 	 best= 26.408571	stackLen: 30 => 1.00  1.00  V5  1.00  V0  1.00  e i r V3  / - V4  - / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=19.8278 stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 0 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 1 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 2 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 3 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 4 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 5 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 6 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 7 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 8 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 9 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 10 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 11 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 12 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 13 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 14 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 15 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 16 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 17 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 18 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 19 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 20 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 21 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 22 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 23 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 24 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 25 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 26 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 27 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 28 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 29 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 30 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 31 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 32 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 33 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 34 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 35 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 36 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 37 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 38 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 39 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 40 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 41 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 42 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 43 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 44 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 45 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 46 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 47 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 48 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 49 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 50 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 51 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 52 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 53 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 54 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 55 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
iteration = 56 	 best= 19.827837	stackLen: 30 => 1.00  1.00  V5  1.00  1.00  / V0  1.00  e i r V3  / - V4  - / * * V2  V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 
BEST SOLUTION! cost=17.9973 stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 17.997318	stackLen: 30 => 1.00  1.00  * 1.00  V5  1.00  1.00  a V0  1.00  e i i V2  V3  - / - V4  - / * * V2  V2  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.541
stackLen: 15 => V4  a 1.00  V5  V5  + V4  - 1.00  e V5  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=15
printSolution2: ((((V5/\exp(1)) * (V4 - (V5 + V5))) * 1) + {V4^2})
Tempo de execucao: 2065.19 segundos
FIM
