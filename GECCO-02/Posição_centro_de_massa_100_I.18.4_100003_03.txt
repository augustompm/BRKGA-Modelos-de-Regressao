Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 11
individualLen:97
Debug: Iniciando leitura do arquivo...
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
Debug: nVars=4, tests=100, nConst=1
var unit: 'kg'
var unit: 'kg'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' '
SOLUTION IS: ' '2) READING PROBLEM TESTS
var[0] = 38.08 var[1] = 4.11 var[2] = 6.42 var[3] = 0.52 output = 5.85
var[0] = 95.12 var[1] = 64 var[2] = 0.84 var[3] = 5.31 output = 2.64
var[0] = 73.47 var[1] = 32.12 var[2] = 1.62 var[3] = 5.41 output = 2.77
var[0] = 60.27 var[1] = 51.35 var[2] = 8.99 var[3] = 6.37 output = 7.78
var[0] = 16.45 var[1] = 90.85 var[2] = 6.06 var[3] = 7.26 output = 7.08
var[0] = 16.44 var[1] = 25.68 var[2] = 0.09 var[3] = 9.76 output = 5.99
var[0] = 6.75 var[1] = 41.63 var[2] = 1.01 var[3] = 5.16 output = 4.58
var[0] = 86.75 var[1] = 75.8 var[2] = 6.64 var[3] = 3.23 output = 5.05
var[0] = 60.51 var[1] = 23.65 var[2] = 0.05 var[3] = 7.95 output = 2.27
var[0] = 71.1 var[1] = 8.62 var[2] = 1.61 var[3] = 2.71 output = 1.73
var[0] = 3.04 var[1] = 29.69 var[2] = 5.49 var[3] = 4.39 output = 4.49
var[0] = 97.02 var[1] = 16.96 var[2] = 6.92 var[3] = 0.78 output = 6.01
var[0] = 83.41 var[1] = 93.04 var[2] = 6.52 var[3] = 0.25 output = 3.21
var[0] = 22.02 var[1] = 81 var[2] = 2.24 var[3] = 9.63 output = 8.05
var[0] = 19 var[1] = 63.71 var[2] = 7.12 var[3] = 8.36 output = 8.08
var[0] = 19.16 var[1] = 87.27 var[2] = 2.37 var[3] = 6.96 output = 6.13
var[0] = 31.12 var[1] = 80.56 var[2] = 3.25 var[3] = 4.09 output = 3.86
var[0] = 52.95 var[1] = 19.47 var[2] = 7.46 var[3] = 1.73 output = 5.92
var[0] = 43.76 var[1] = 89.36 var[2] = 6.5 var[3] = 1.56 output = 3.18
var[0] = 29.83 var[1] = 54.39 var[2] = 8.49 var[3] = 2.5 output = 4.62
var[0] = 61.57 var[1] = 80.94 var[2] = 6.58 var[3] = 5.49 output = 5.96
var[0] = 14.81 var[1] = 89.71 var[2] = 5.68 var[3] = 7.15 output = 6.94
var[0] = 29.92 var[1] = 32.48 var[2] = 0.94 var[3] = 6.6 output = 3.89
var[0] = 37.27 var[1] = 11.9 var[2] = 3.68 var[3] = 2.8 output = 3.47
var[0] = 46.15 var[1] = 23.57 var[2] = 2.65 var[3] = 9.55 output = 4.98
var[0] = 78.73 var[1] = 43.28 var[2] = 2.44 var[3] = 7.38 output = 4.19
var[0] = 20.77 var[1] = 81.98 var[2] = 9.73 var[3] = 5.54 output = 6.39
var[0] = 51.91 var[1] = 86.21 var[2] = 3.93 var[3] = 6.12 output = 5.3
var[0] = 59.65 var[1] = 1.69 var[2] = 8.92 var[3] = 4.2 output = 8.79
var[0] = 5.6 var[1] = 51.56 var[2] = 6.31 var[3] = 2.48 output = 2.86
var[0] = 61.15 var[1] = 42.32 var[2] = 7.95 var[3] = 3.56 output = 6.15
var[0] = 17.88 var[1] = 22.99 var[2] = 5.03 var[3] = 7.58 output = 6.46
var[0] = 7.44 var[1] = 12.87 var[2] = 5.77 var[3] = 0.14 output = 2.2
var[0] = 94.94 var[1] = 34.42 var[2] = 4.93 var[3] = 1.16 output = 3.93
var[0] = 96.6 var[1] = 94.35 var[2] = 1.95 var[3] = 0.46 output = 1.21
var[0] = 81.03 var[1] = 33 var[2] = 7.22 var[3] = 0.41 output = 5.25
var[0] = 31.16 var[1] = 52.36 var[2] = 2.81 var[3] = 8.55 output = 6.41
var[0] = 10.67 var[1] = 70.6 var[2] = 0.24 var[3] = 7.04 output = 6.15
var[0] = 68.74 var[1] = 37 var[2] = 6.45 var[3] = 4.74 output = 5.85
var[0] = 44.58 var[1] = 97.21 var[2] = 1.77 var[3] = 0.98 output = 1.23
var[0] = 13.08 var[1] = 96.28 var[2] = 9.4 var[3] = 4.92 output = 5.46
var[0] = 50.02 var[1] = 25.93 var[2] = 9.54 var[3] = 4.73 output = 7.9
var[0] = 4.4 var[1] = 50.23 var[2] = 9.15 var[3] = 1.73 output = 2.33
var[0] = 91.02 var[1] = 30.79 var[2] = 3.7 var[3] = 4.34 output = 3.86
var[0] = 26.62 var[1] = 29.2 var[2] = 0.15 var[3] = 3.99 output = 2.16
var[0] = 66.59 var[1] = 4.65 var[2] = 9.28 var[3] = 6.16 output = 9.08
var[0] = 31.86 var[1] = 61.35 var[2] = 4.28 var[3] = 6.35 output = 5.64
var[0] = 52.49 var[1] = 50.77 var[2] = 9.67 var[3] = 0.45 output = 5.14
var[0] = 55.12 var[1] = 6.1 var[2] = 9.64 var[3] = 3.75 output = 9.05
var[0] = 19.3 var[1] = 28.59 var[2] = 8.53 var[3] = 6.26 output = 7.17
var[0] = 96.99 var[1] = 90.92 var[2] = 2.94 var[3] = 5.03 output = 3.95
var[0] = 77.74 var[1] = 24.72 var[2] = 3.85 var[3] = 8.56 output = 4.99
var[0] = 94.01 var[1] = 15.34 var[2] = 8.51 var[3] = 6.59 output = 8.24
var[0] = 89.59 var[1] = 49.46 var[2] = 3.17 var[3] = 1.63 output = 2.62
var[0] = 60.19 var[1] = 98.58 var[2] = 1.69 var[3] = 0.71 output = 1.08
var[0] = 92.27 var[1] = 24.96 var[2] = 5.57 var[3] = 6.42 output = 5.75
var[0] = 9.76 var[1] = 67.54 var[2] = 9.36 var[3] = 0.27 output = 1.42
var[0] = 20.4 var[1] = 76.4 var[2] = 6.96 var[3] = 5.86 output = 6.09
var[0] = 5.48 var[1] = 24.53 var[2] = 5.7 var[3] = 9.4 output = 8.72
var[0] = 33.21 var[1] = 73.09 var[2] = 0.97 var[3] = 5.75 output = 4.26
var[0] = 39.48 var[1] = 37.41 var[2] = 6.15 var[3] = 3.88 output = 5.05
var[0] = 27.86 var[1] = 63.6 var[2] = 9.9 var[3] = 6.43 output = 7.49
var[0] = 83.05 var[1] = 63.72 var[2] = 1.4 var[3] = 4.58 output = 2.78
var[0] = 36.32 var[1] = 54.04 var[2] = 5.18 var[3] = 5.46 output = 5.35
var[0] = 28.81 var[1] = 9.94 var[2] = 8.77 var[3] = 9.41 output = 8.93
var[0] = 54.73 var[1] = 83.69 var[2] = 7.41 var[3] = 3.86 output = 5.26
var[0] = 14.95 var[1] = 32.76 var[2] = 6.97 var[3] = 9.61 output = 8.78
var[0] = 80.42 var[1] = 19.47 var[2] = 7.02 var[3] = 9.05 output = 7.42
var[0] = 8.38 var[1] = 5.04 var[2] = 3.59 var[3] = 1.96 output = 2.98
var[0] = 98.7 var[1] = 59.5 var[2] = 2.94 var[3] = 0.69 output = 2.09
var[0] = 77.45 var[1] = 68.08 var[2] = 8.09 var[3] = 1.01 output = 4.78
var[0] = 20.67 var[1] = 2.64 var[2] = 8.1 var[3] = 0.18 output = 7.2
var[0] = 1.55 var[1] = 51.7 var[2] = 8.67 var[3] = 0.94 output = 1.17
var[0] = 81.73 var[1] = 23.42 var[2] = 9.13 var[3] = 6.83 output = 8.62
var[0] = 70.98 var[1] = 64.87 var[2] = 5.11 var[3] = 0.71 output = 3.01
var[0] = 73.17 var[1] = 18.26 var[2] = 5.02 var[3] = 3.19 output = 4.65
var[0] = 77.36 var[1] = 69.4 var[2] = 7.98 var[3] = 8.45 output = 8.2
var[0] = 8.33 var[1] = 39.29 var[2] = 6.5 var[3] = 0.23 output = 1.33
var[0] = 36.49 var[1] = 93.74 var[2] = 7.02 var[3] = 8.14 output = 7.83
var[0] = 12.47 var[1] = 14.61 var[2] = 7.96 var[3] = 2.82 output = 5.19
var[0] = 86.45 var[1] = 34.77 var[2] = 8.9 var[3] = 1.18 output = 6.69
var[0] = 62.71 var[1] = 12.23 var[2] = 3.38 var[3] = 6.97 output = 3.97
var[0] = 33.76 var[1] = 92.54 var[2] = 3.76 var[3] = 6.29 output = 5.61
var[0] = 7.29 var[1] = 87.86 var[2] = 0.94 var[3] = 8.77 output = 8.17
var[0] = 31.79 var[1] = 26.54 var[2] = 5.78 var[3] = 7.35 output = 6.49
var[0] = 33.19 var[1] = 66.34 var[2] = 0.36 var[3] = 8.03 output = 5.47
var[0] = 73.23 var[1] = 81.9 var[2] = 4.66 var[3] = 2.82 output = 3.69
var[0] = 64.12 var[1] = 55.96 var[2] = 5.43 var[3] = 1.77 output = 3.72
var[0] = 88.83 var[1] = 53.44 var[2] = 2.87 var[3] = 7.51 output = 4.61
var[0] = 47.75 var[1] = 24.94 var[2] = 5.91 var[3] = 8.07 output = 6.65
var[0] = 12.84 var[1] = 10.22 var[2] = 0.31 var[3] = 9.91 output = 4.56
var[0] = 71.61 var[1] = 89.82 var[2] = 0.37 var[3] = 4.13 output = 2.46
var[0] = 76.32 var[1] = 90.14 var[2] = 8.23 var[3] = 3.72 output = 5.79
var[0] = 56.57 var[1] = 63.68 var[2] = 3.6 var[3] = 7.76 output = 5.8
var[0] = 77.33 var[1] = 34.56 var[2] = 1.27 var[3] = 3.41 output = 1.93
var[0] = 49.89 var[1] = 35.57 var[2] = 5.22 var[3] = 9.31 output = 6.92
var[0] = 52.75 var[1] = 72.87 var[2] = 7.7 var[3] = 8.58 output = 8.21
var[0] = 43.33 var[1] = 89.81 var[2] = 2.16 var[3] = 4.29 output = 3.6
var[0] = 3.52 var[1] = 88.82 var[2] = 6.23 var[3] = 7.51 output = 7.46
var[0] = 11.68 var[1] = 78.21 var[2] = 0.85 var[3] = 7.55 output = 6.68
3) READING PROBLEM CONSTANTS
Lendo constante 1: '1 1 *'
Constante lida: 1 1 *
const unit: '*'
3.5) SETUP UNITS
UNITS: kg ; m ; 
4) FINISHED READING PROBLEM
Leitura feita com sucesso
4 100 1
38.08	4.11	6.42	0.52	5.85
95.12	64.00	0.84	5.31	2.64
73.47	32.12	1.62	5.41	2.77
60.27	51.35	8.99	6.37	7.78
16.45	90.85	6.06	7.26	7.08
16.44	25.68	0.09	9.76	5.99
6.75	41.63	1.01	5.16	4.58
86.75	75.80	6.64	3.23	5.05
60.51	23.65	0.05	7.95	2.27
71.10	8.62	1.61	2.71	1.73
3.04	29.69	5.49	4.39	4.49
97.02	16.96	6.92	0.78	6.01
83.41	93.04	6.52	0.25	3.21
22.02	81.00	2.24	9.63	8.05
19.00	63.71	7.12	8.36	8.08
19.16	87.27	2.37	6.96	6.13
31.12	80.56	3.25	4.09	3.86
52.95	19.47	7.46	1.73	5.92
43.76	89.36	6.50	1.56	3.18
29.83	54.39	8.49	2.50	4.62
61.57	80.94	6.58	5.49	5.96
14.81	89.71	5.68	7.15	6.94
29.92	32.48	0.94	6.60	3.89
37.27	11.90	3.68	2.80	3.47
46.15	23.57	2.65	9.55	4.98
78.73	43.28	2.44	7.38	4.19
20.77	81.98	9.73	5.54	6.39
51.91	86.21	3.93	6.12	5.30
59.65	1.69	8.92	4.20	8.79
5.60	51.56	6.31	2.48	2.86
61.15	42.32	7.95	3.56	6.15
17.88	22.99	5.03	7.58	6.46
7.44	12.87	5.77	0.14	2.20
94.94	34.42	4.93	1.16	3.93
96.60	94.35	1.95	0.46	1.21
81.03	33.00	7.22	0.41	5.25
31.16	52.36	2.81	8.55	6.41
10.67	70.60	0.24	7.04	6.15
68.74	37.00	6.45	4.74	5.85
44.58	97.21	1.77	0.98	1.23
13.08	96.28	9.40	4.92	5.46
50.02	25.93	9.54	4.73	7.90
4.40	50.23	9.15	1.73	2.33
91.02	30.79	3.70	4.34	3.86
26.62	29.20	0.15	3.99	2.16
66.59	4.65	9.28	6.16	9.08
31.86	61.35	4.28	6.35	5.64
52.49	50.77	9.67	0.45	5.14
55.12	6.10	9.64	3.75	9.05
19.30	28.59	8.53	6.26	7.17
96.99	90.92	2.94	5.03	3.95
77.74	24.72	3.85	8.56	4.99
94.01	15.34	8.51	6.59	8.24
89.59	49.46	3.17	1.63	2.62
60.19	98.58	1.69	0.71	1.08
92.27	24.96	5.57	6.42	5.75
9.76	67.54	9.36	0.27	1.42
20.40	76.40	6.96	5.86	6.09
5.48	24.53	5.70	9.40	8.72
33.21	73.09	0.97	5.75	4.26
39.48	37.41	6.15	3.88	5.05
27.86	63.60	9.90	6.43	7.49
83.05	63.72	1.40	4.58	2.78
36.32	54.04	5.18	5.46	5.35
28.81	9.94	8.77	9.41	8.93
54.73	83.69	7.41	3.86	5.26
14.95	32.76	6.97	9.61	8.78
80.42	19.47	7.02	9.05	7.42
8.38	5.04	3.59	1.96	2.98
98.70	59.50	2.94	0.69	2.09
77.45	68.08	8.09	1.01	4.78
20.67	2.64	8.10	0.18	7.20
1.55	51.70	8.67	0.94	1.17
81.73	23.42	9.13	6.83	8.62
70.98	64.87	5.11	0.71	3.01
73.17	18.26	5.02	3.19	4.65
77.36	69.40	7.98	8.45	8.20
8.33	39.29	6.50	0.23	1.33
36.49	93.74	7.02	8.14	7.83
12.47	14.61	7.96	2.82	5.19
86.45	34.77	8.90	1.18	6.69
62.71	12.23	3.38	6.97	3.97
33.76	92.54	3.76	6.29	5.61
7.29	87.86	0.94	8.77	8.17
31.79	26.54	5.78	7.35	6.49
33.19	66.34	0.36	8.03	5.47
73.23	81.90	4.66	2.82	3.69
64.12	55.96	5.43	1.77	3.72
88.83	53.44	2.87	7.51	4.61
47.75	24.94	5.91	8.07	6.65
12.84	10.22	0.31	9.91	4.56
71.61	89.82	0.37	4.13	2.46
76.32	90.14	8.23	3.72	5.79
56.57	63.68	3.60	7.76	5.80
77.33	34.56	1.27	3.41	1.93
49.89	35.57	5.22	9.31	6.92
52.75	72.87	7.70	8.58	8.21
43.33	89.81	2.16	4.29	3.60
3.52	88.82	6.23	7.51	7.46
11.68	78.21	0.85	7.55	6.68
1.0000	1.0000
isSquared? 0
varUnits: kg kg m m 
outUnit: m
training=5
run_brkga:
best=inf
SELECTED: [48 28 7 38 97 39 50 82 11 3 ]
BEST SOLUTION! cost=0.987 stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 0.987000	stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 0.987000	stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 0.987000	stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 0.987000	stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 0.987000	stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 0.987000	stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 0.987000	stackLen: 10 => V2  empty: 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=0.963218 stackLen: 10 => 1.00  e V2  r * empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 0 	 best= 0.963218	stackLen: 10 => 1.00  e V2  r * empty: 0 0 0 1 0 1 1 0 0 1 
BEST SOLUTION! cost=0.818492 stackLen: 10 => 1.00  V0  V1  r / * e V2  / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 0.818492	stackLen: 10 => 1.00  V0  V1  r / * e V2  / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 0.818492	stackLen: 10 => 1.00  V0  V1  r / * e V2  / empty: 0 0 0 0 0 1 0 0 0 0 
BEST SOLUTION! cost=0.816917 stackLen: 10 => V2  V3  / r r r V2  * empty: 0 0 1 0 0 0 0 1 0 0 
COST2 IS BETTER!!!0.807186
iteration = 0 	 best= 0.807186	stackLen: 10 => V2  V3  V3  + / r r r V2  * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 0.807186	stackLen: 10 => V2  V3  V3  + / r r r V2  * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 0.807186	stackLen: 10 => V2  V3  V3  + / r r r V2  * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 0.807186	stackLen: 10 => V2  V3  V3  + / r r r V2  * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 0.807186	stackLen: 10 => V2  V3  V3  + / r r r V2  * empty: 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=0.680739 stackLen: 10 => V3  r V2  r V2  - + empty: 0 0 1 0 1 0 0 1 0 0 
COST2 IS BETTER!!!0.65305
iteration = 0 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 0.653050	stackLen: 10 => V3  V3  + r V2  r V2  - + empty: 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [61 46 27 98 72 55 84 75 43 60 ]
BEST SOLUTION! cost=0.751 stackLen: 15 => V1  V3  / V1  * empty: 0 1 0 0 1 1 1 1 1 1 1 0 1 0 1 
iteration = 0 	 best= 0.751000	stackLen: 15 => V1  V3  / V1  * empty: 0 1 0 0 1 1 1 1 1 1 1 0 1 0 1 
BEST SOLUTION! cost=0.483416 stackLen: 15 => V3  V2  / 1.00  * r V3  * empty: 0 0 1 1 0 0 1 1 0 1 0 0 1 0 1 
iteration = 0 	 best= 0.483416	stackLen: 15 => V3  V2  / 1.00  * r V3  * empty: 0 0 1 1 0 0 1 1 0 1 0 0 1 0 1 
iteration = 1 	 best= 0.483416	stackLen: 15 => V3  V2  / 1.00  * r V3  * empty: 0 0 1 1 0 0 1 1 0 1 0 0 1 0 1 
BEST SOLUTION! cost=0.434187 stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 0 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 1 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 2 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 3 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 4 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 5 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 6 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 7 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 8 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 9 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 10 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 11 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 12 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 13 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 14 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 15 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 16 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 17 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 18 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 19 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 20 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 21 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 22 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 23 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 24 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 25 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 26 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 27 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 28 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 29 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 30 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 31 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 32 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 33 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 34 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 35 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 36 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 37 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 38 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 39 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 40 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 41 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 42 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 43 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 44 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 45 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 46 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 47 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 48 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 49 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 50 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 51 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 52 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 53 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 54 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 55 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 56 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 57 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
iteration = 58 	 best= 0.434187	stackLen: 15 => V2  V3  / r r V3  / empty: 0 1 1 1 1 1 1 0 0 0 0 1 1 0 0 
BEST SOLUTION! cost=0.401594 stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.401594	stackLen: 15 => V3  V3  + V3  + V2  V3  + V2  + / r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0.342428 stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 0.342428	stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [4 37 57 58 74 2 51 9 24 70 ]
BEST SOLUTION! cost=1.14128 stackLen: 22 => 1.00  1.00  1.00  * + e r V1  V0  / r * r V3  / empty: 0 0 1 0 1 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 1.141277	stackLen: 22 => 1.00  1.00  1.00  * + e r V1  V0  / r * r V3  / empty: 0 0 1 0 1 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=1.13712 stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 0 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 1 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 2 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 3 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 4 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 5 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 6 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 7 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 8 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
iteration = 9 	 best= 1.137115	stackLen: 22 => V2  V2  V0  V2  V0  / / V3  / r / * empty: 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1 0 0 
BEST SOLUTION! cost=0.869376 stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 3 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 4 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 5 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 6 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 7 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 8 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 9 	 best= 0.869376	stackLen: 22 => 1.00  e V3  V2  V2  r + + / empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=0.704141 stackLen: 22 => 1.00  V3  V0  1.00  V0  r / / r * V2  r + / empty: 0 1 1 0 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 0 0 0 
iteration = 0 	 best= 0.704141	stackLen: 22 => 1.00  V3  V0  1.00  V0  r / / r * V2  r + / empty: 0 1 1 0 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 0 0 0 
iteration = 1 	 best= 0.704141	stackLen: 22 => 1.00  V3  V0  1.00  V0  r / / r * V2  r + / empty: 0 1 1 0 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 0 0 0 
BEST SOLUTION! cost=0.596633 stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 6 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 7 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 8 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 9 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 10 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 11 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 12 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 13 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 14 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 15 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 16 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 17 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 18 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 19 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
iteration = 20 	 best= 0.596633	stackLen: 22 => 1.00  V1  V0  1.00  e / r * - r V3  * V2  + r empty: 0 1 1 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=0.543286 stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 0.543286	stackLen: 22 => 1.00  1.00  V1  V0  V0  + 1.00  e / r * / r V3  * V2  V2  + + r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0.505042 stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.505042	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * / r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0.501687 stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 0.501687	stackLen: 22 => 1.00  V0  V1  V1  + V0  a / 1.00  e / * + r V3  * V2  V2  + + r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [90 96 22 25 29 37 43 83 79 65 ]
BEST SOLUTION! cost=0.969251 stackLen: 30 => V3  r V1  * V3  r V1  a r * V3  / V3  V0  / V1  V2  * / r * * r empty: 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 
iteration = 0 	 best= 0.969251	stackLen: 30 => V3  r V1  * V3  r V1  a r * V3  / V3  V0  / V1  V2  * / r * * r empty: 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 
BEST SOLUTION! cost=0.920199 stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 1 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 2 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 3 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 4 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 5 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 6 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 7 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 8 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 9 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 10 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 11 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 12 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 13 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
iteration = 14 	 best= 0.920199	stackLen: 30 => 1.00  V1  V2  V0  / r / r * V3  * 1.00  * r r V3  / empty: 0 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=0.702761 stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 0 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 1 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 2 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 3 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 4 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 5 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 6 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 7 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 8 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 9 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 10 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 11 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 12 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 13 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 14 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 15 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 16 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 17 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 18 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 19 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
iteration = 20 	 best= 0.702761	stackLen: 30 => V0  V3  * V3  i V2  * / r r V1  * r V3  * r empty: 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 
BEST SOLUTION! cost=0.670154 stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 15 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 16 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 17 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 18 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 19 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 20 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 21 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 22 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 23 	 best= 0.670154	stackLen: 30 => V0  V0  + V3  V3  / * V3  r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=0.667127 stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 15 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 16 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 17 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 18 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 19 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 20 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 21 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 22 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 23 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 24 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 25 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 26 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 27 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 28 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 29 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 30 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 31 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 32 	 best= 0.667127	stackLen: 30 => V0  V0  + V0  + V3  V3  / * V3  V3  + r V2  * / r r V1  * 1.00  1.00  * * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=0.66289 stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 50 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 51 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 52 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 53 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 54 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 55 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 56 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 57 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 58 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 59 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 60 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 61 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 62 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 63 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 64 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 65 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 66 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 67 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 68 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 69 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 70 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 71 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 72 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 73 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 74 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 75 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 76 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 77 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 78 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 79 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 80 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 81 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 82 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 83 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 84 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 85 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 86 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 87 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 88 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 89 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 90 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 91 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 92 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 93 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 94 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 95 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 96 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 97 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 98 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 99 	 best= 0.662890	stackLen: 30 => V0  V0  + V0  + V3  V3  / V2  V2  / + V3  / i V2  * / r r V1  * 1.00  * 1.00  * r V3  * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [45 56 89 48 25 3 26 78 47 7 ]
BEST SOLUTION! cost=0.994412 stackLen: 30 => V1  V0  V0  / V3  / V2  * r 1.00  / 1.00  / 1.00  * i V1  * / empty: 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 0.994412	stackLen: 30 => V1  V0  V0  / V3  / V2  * r 1.00  / 1.00  / 1.00  * i V1  * / empty: 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 0.994412	stackLen: 30 => V1  V0  V0  / V3  / V2  * r 1.00  / 1.00  / 1.00  * i V1  * / empty: 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 0.994412	stackLen: 30 => V1  V0  V0  / V3  / V2  * r 1.00  / 1.00  / 1.00  * i V1  * / empty: 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 0.994412	stackLen: 30 => V1  V0  V0  / V3  / V2  * r 1.00  / 1.00  / 1.00  * i V1  * / empty: 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 0.994412	stackLen: 30 => V1  V0  V0  / V3  / V2  * r 1.00  / 1.00  / 1.00  * i V1  * / empty: 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=0.907901 stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.907901	stackLen: 30 => 1.00  V3  r V2  r / r i V3  / r V3  V2  1.00  * r * / * empty: 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0.875583 stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 2 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 3 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 4 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 5 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 6 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 7 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 8 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 9 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 10 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 11 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 12 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 13 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 14 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 15 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 16 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 17 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 18 	 best= 0.875583	stackLen: 30 => V1  i r r r V3  V0  r r * V2  / 1.00  * r V2  / / empty: 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=0.836275 stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 0 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 1 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 2 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 3 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 4 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 5 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 6 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 7 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 8 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 9 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 10 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
iteration = 11 	 best= 0.836275	stackLen: 30 => V1  r V1  + V0  1.00  / V3  V1  * * / V2  V0  a r / * r V3  / empty: 0 0 0 0 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 
BEST SOLUTION! cost=0.679424 stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 0.679424	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V1  * / r V2  * r r V2  r / V3  * * * r empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0.669608 stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.669608	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V3  / V1  * / r V3  * r i V2  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0.664413 stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 0.664413	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / r V3  * r i V3  V2  + r / V3  * / * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0.60002 stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 0.600020	stackLen: 30 => V2  V0  V0  / i V2  V0  / V3  V2  / V1  / / i V3  + r i V3  V2  + r / V3  * * * r empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=0.342428
stackLen: 15 => V3  V3  + V2  + V2  V3  + V2  + / i V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=14
printSolution2: (V3 * (((V2 + (V3 + V2))/(V2 + (V3 + V3)))))
Tempo de execucao: 4875.65 segundos
FIM
