Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 11
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'km'
var unit: 's^-1'
out unit: 'km^-1'
has_solution='HAS_SOLUTION' => ' v1 c0 / a  c1 v0 / a  - r'
SOLUTION IS: ' v1 c0 / a  c1 v0 / a  - r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
const unit: 'km / s'
3.5) SETUP UNITS
UNITS: km ; s ; 
4) FINISHED READING PROBLEM
2 100 2
0.00	951000000000.00	3170000.00
0.00	603000000000.00	2010000.00
0.00	164000000000.00	532000.00
0.00	868000000000.00	2880000.00
0.00	711000000000.00	2370000.00
0.00	970000000000.00	3220000.00
0.00	220000000000.00	733000.00
0.00	192000000000.00	627000.00
0.00	530000000000.00	1760000.00
0.00	298000000000.00	992000.00
0.00	148000000000.00	491000.00
0.00	373000000000.00	1240000.00
0.00	787000000000.00	2620000.00
0.00	519000000000.00	1730000.00
0.00	56000000000.00	180000.00
0.00	179000000000.00	594000.00
0.00	949000000000.00	3160000.00
0.00	810000000000.00	2700000.00
0.00	107000000000.00	346000.00
0.00	446000000000.00	1490000.00
0.00	500000000000.00	1660000.00
0.00	910000000000.00	3020000.00
0.00	666000000000.00	2220000.00
0.00	525000000000.00	1750000.00
0.00	193000000000.00	641000.00
0.00	77700000000.00	259000.00
0.00	89600000000.00	299000.00
0.00	92300000000.00	308000.00
0.00	20400000000.00	65700.00
0.00	33200000000.00	108000.00
0.00	27900000000.00	92600.00
0.00	36300000000.00	121000.00
0.00	54700000000.00	182000.00
0.00	80400000000.00	268000.00
0.00	98700000000.00	328000.00
0.00	20700000000.00	68800.00
0.00	81700000000.00	271000.00
0.00	73200000000.00	244000.00
0.00	8330000000.00	27500.00
0.00	12500000000.00	40900.00
0.00	62700000000.00	209000.00
0.00	7290000000.00	23000.00
0.00	33200000000.00	110000.00
0.00	64100000000.00	214000.00
0.00	47700000000.00	159000.00
0.00	71600000000.00	238000.00
0.00	56600000000.00	189000.00
0.00	49900000000.00	166000.00
0.00	43300000000.00	144000.00
0.00	11700000000.00	29400.00
0.41	6400000.00	19.90
3.21	5130000.00	17.10
9.08	2570000.00	8.55
4.16	7580000.00	25.30
2.37	862000.00	2.55
2.97	1700000.00	5.55
9.30	8100000.00	27.00
6.37	8730000.00	29.10
8.06	1950000.00	6.48
8.94	5440000.00	18.10
8.09	8970000.00	29.90
3.25	1190000.00	3.85
2.36	4330000.00	14.40
8.20	8620000.00	28.70
4.23	2300000.00	7.63
1.29	3440000.00	11.20
9.43	3300000.00	11.00
5.24	7060000.00	23.50
3.70	9720000.00	32.40
9.63	2590000.00	8.64
5.02	3080000.00	10.20
2.92	465000.00	1.12
6.13	5080000.00	16.90
0.61	2860000.00	8.01
9.09	2470000.00	8.23
0.00	4900000000000.00	16300000.00
0.00	2420000000000.00	8070000.00
0.00	7620000000000.00	25400000.00
0.00	7280000000000.00	24300000.00
0.00	6320000000000.00	21100000.00
0.00	5360000000000.00	17900000.00
0.00	8350000000000.00	27800000.00
0.00	1870000000000.00	6220000.00
0.00	5910000000000.00	19700000.00
0.00	167000000000.00	556000.00
0.00	2270000000000.00	7550000.00
0.00	1740000000000.00	5810000.00
0.00	3870000000000.00	12900000.00
0.00	1380000000000.00	4590000.00
0.00	1140000000000.00	3790000.00
0.00	8770000000000.00	29200000.00
0.00	6600000000000.00	22000000.00
0.00	5550000000000.00	18500000.00
0.00	2420000000000.00	8060000.00
0.00	8970000000000.00	29900000.00
0.00	6330000000000.00	21100000.00
0.00	3490000000000.00	11600000.00
0.00	8970000000000.00	29900000.00
0.00	7800000000000.00	26000000.00
0.00	842000000000.00	2810000.00
3.1416	3.1416
300000.0000	300000.0000
isSquared? 0
varUnits: km s^-1 
outUnit: km^-1
training=5
run_brkga:
best=inf
SELECTED: [45 72 43 97 29 60 75 96 2 81 ]
BEST SOLUTION! cost=21833.3 stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 2 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 3 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 4 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 5 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 6 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 7 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 8 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 9 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 10 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 11 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
iteration = 12 	 best= 21833.336667	stackLen: 10 => 300000.00  r a V1  / empty: 0 1 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=21831.8 stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 0 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 1 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 2 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 3 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 4 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 5 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 6 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 7 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 8 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 9 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 10 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 11 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 12 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 13 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 14 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 15 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 16 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 17 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 18 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 19 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
iteration = 20 	 best= 21831.810924	stackLen: 10 => 300000.00  V1  r V1  - / empty: 0 0 0 1 0 1 1 0 0 1 
BEST SOLUTION! cost=21828.5 stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
COST2 IS BETTER!!!11828.5
iteration = 0 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 11828.543405	stackLen: 10 => 300000.00  V1  3.14  * 3.14  * r V1  - / empty: 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=10000 stackLen: 10 => 300000.00  3.14  V0  * 300000.00  / V1  - / empty: 0 0 0 0 0 0 0 0 0 1 
COST2 IS BETTER!!!0
iteration = 0 	 best= 0.000000	stackLen: 10 => 300000.00  3.14  V0  * 300000.00  / V1  - / empty: 0 0 0 0 0 0 0 0 0 1 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 10 => 300000.00  3.14  V0  * 300000.00  / V1  - / empty: 0 0 0 0 0 0 0 0 0 1 
trueStackSize=9
printSolution2: ((V1 - (300000/(V0 * 3.14159)))/300000)
Tempo de execucao: 159.237 segundos
FIM
