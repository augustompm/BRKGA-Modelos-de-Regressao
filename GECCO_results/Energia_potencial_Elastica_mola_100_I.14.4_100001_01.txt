Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 11
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'n / m'
var unit: 'm'
out unit: 'n * m'
has_solution='HAS_SOLUTION' => ' '
SOLUTION IS: ' '2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
const unit: '*'
3.5) SETUP UNITS
UNITS: n ; m ; 
4) FINISHED READING PROBLEM
2 100 2
380.79	0.03	0.17
951.21	0.32	48.70
734.67	0.16	9.40
602.67	0.26	20.37
164.46	0.45	16.65
164.43	0.13	1.39
67.50	0.21	1.49
867.51	0.38	62.63
605.10	0.12	4.36
710.99	0.05	0.89
30.38	0.15	0.34
970.21	0.09	3.93
834.12	0.47	92.13
220.22	0.41	18.51
190.01	0.32	9.73
191.57	0.44	18.54
311.20	0.40	24.90
529.51	0.10	2.65
437.63	0.45	44.31
298.32	0.27	10.87
615.73	0.41	51.75
148.10	0.45	14.99
299.22	0.17	4.32
372.70	0.06	0.67
461.51	0.12	3.32
787.32	0.22	19.05
207.68	0.41	17.46
519.09	0.43	47.99
596.49	0.01	0.03
55.99	0.26	1.89
611.47	0.21	13.48
178.82	0.12	1.29
74.40	0.07	0.18
949.40	0.18	15.38
965.98	0.47	106.70
810.31	0.17	11.71
311.57	0.26	10.53
106.70	0.35	6.54
687.39	0.19	12.41
445.75	0.49	53.51
130.82	0.48	15.07
500.23	0.13	4.23
44.04	0.25	1.38
910.23	0.16	11.65
266.19	0.15	3.00
665.90	0.03	0.30
318.59	0.31	15.31
524.87	0.26	17.74
551.24	0.04	0.44
193.01	0.15	2.17
969.89	0.46	102.60
777.38	0.13	6.57
940.10	0.08	3.01
895.88	0.25	28.00
601.92	0.49	72.26
922.66	0.13	7.80
97.61	0.34	5.64
204.02	0.38	14.73
54.78	0.13	0.46
332.08	0.37	22.73
394.79	0.19	7.13
278.64	0.32	14.27
830.45	0.32	42.52
363.19	0.27	13.24
288.13	0.05	0.36
547.27	0.42	48.27
149.51	0.17	2.16
804.18	0.10	4.02
83.81	0.03	0.04
987.02	0.30	44.42
774.52	0.34	44.77
206.73	0.02	0.04
15.47	0.26	0.52
817.31	0.12	5.88
709.79	0.33	38.65
731.72	0.10	3.66
773.56	0.35	47.38
83.30	0.20	1.67
364.88	0.47	40.30
124.71	0.08	0.40
864.47	0.18	14.00
627.07	0.07	1.54
337.59	0.46	35.72
72.92	0.44	7.06
317.87	0.14	3.12
331.93	0.33	18.07
732.31	0.41	61.55
641.18	0.28	25.13
888.34	0.27	32.38
477.49	0.13	4.04
128.40	0.06	0.23
716.11	0.45	72.51
763.18	0.45	77.27
565.66	0.32	28.96
773.26	0.18	12.53
498.86	0.18	8.08
527.51	0.37	36.11
433.27	0.45	43.87
35.16	0.44	3.40
116.81	0.39	8.88
1.0000	1.0000
2.0000	2.0000
isSquared? 0
varUnits: n / m m 
outUnit: n * m
training=5
run_brkga:
best=inf
SELECTED: [45 72 43 97 29 60 75 96 2 81 ]
BEST SOLUTION! cost=10000 stackLen: 10 => V1  2.00  V1  V0  * / * empty: 0 0 1 1 0 1 0 0 0 0 
COST2 IS BETTER!!!11.6067
iteration = 0 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 7 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 8 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 9 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 10 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 11 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 12 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 13 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 14 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 15 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 16 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 17 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 18 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 19 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 20 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 21 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 22 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 23 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 24 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 25 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 26 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 27 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 28 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 29 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 30 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 31 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 32 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 33 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 34 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 35 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 36 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 37 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 38 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 39 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 40 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 41 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 42 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 43 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 44 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 45 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 46 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 47 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 48 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 49 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 50 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 51 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 52 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 53 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 54 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 55 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 56 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 57 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 58 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 59 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 60 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 61 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 62 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 63 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 64 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 65 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 66 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 67 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 68 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 69 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 70 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 71 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 72 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 73 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 74 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 75 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 76 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 77 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 78 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 79 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 80 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 81 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 82 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 83 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 84 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 85 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 86 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 87 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 88 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 89 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 90 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 91 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 92 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 93 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 94 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 95 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 96 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 97 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 98 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 99 	 best= 11.606650	stackLen: 10 => V1  2.00  V1  V0  V0  + * / * empty: 0 0 1 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [90 61 88 64 16 84 35 81 14 2 ]
BEST SOLUTION! cost=10000 stackLen: 15 => V1  V0  * V1  2.00  1.00  / * * empty: 0 1 1 0 0 1 0 1 0 1 0 0 0 0 1 
COST2 IS BETTER!!!0
iteration = 0 	 best= 0.000000	stackLen: 15 => V1  V0  * V1  2.00  1.00  1.00  * / * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 15 => V1  V0  * V1  2.00  1.00  1.00  * / * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 
trueStackSize=11
printSolution2: ((((1 * 1)/2) * V1) * (V0 * V1))
Tempo de execucao: 173.938 segundos
FIM
