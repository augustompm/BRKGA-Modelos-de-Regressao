Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 61 50 16 88 13 97 0 23 73 59 
BEST SOLUTION! cost=30.8106 stackLen: 30 => 1.000000  1.000000  e r r / V4  V5  * / empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 30.810600	stackLen: 30 => 1.000000  1.000000  e r r / V4  V5  * / empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 1 0 0 1 0 0 1 
iteration = 1 	 best= 30.810600	stackLen: 30 => 1.000000  1.000000  e r r / V4  V5  * / empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 1 0 0 1 0 0 1 
iteration = 2 	 best= 30.810600	stackLen: 30 => 1.000000  1.000000  e r r / V4  V5  * / empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=29.9 stackLen: 30 => V4  a V4  / V4  * V1  / V0  * empty: 0 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 
iteration = 0 	 best= 29.900000	stackLen: 30 => V4  a V4  / V4  * V1  / V0  * empty: 0 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 
iteration = 1 	 best= 29.900000	stackLen: 30 => V4  a V4  / V4  * V1  / V0  * empty: 0 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 
iteration = 2 	 best= 29.900000	stackLen: 30 => V4  a V4  / V4  * V1  / V0  * empty: 0 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 
iteration = 3 	 best= 29.900000	stackLen: 30 => V4  a V4  / V4  * V1  / V0  * empty: 0 1 0 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 
BEST SOLUTION! cost=24.1938 stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 1 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 2 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 3 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 4 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 5 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 6 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 7 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 8 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 9 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 10 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 11 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 12 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 13 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 14 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 15 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 16 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 17 	 best= 24.193750	stackLen: 30 => V2  1.000000  * V1  V5  - V4  V0  - + a a r V4  a / V4  * * empty: 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=23.0067 stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.006667	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.8238 stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.823810	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V4  + V5  + V4  V0  - + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.001 stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.000972	stackLen: 30 => V1  1.000000  1.000000  * 1.000000  * 1.000000  * * V1  V5  + V2  + i V0  i + a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.2 stackLen: 30 => V1  1.000000  r * 1.000000  * 1.000000  * V1  V1  V1  + V0  + - V0  i - a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.200000	stackLen: 30 => V1  1.000000  r * 1.000000  * 1.000000  * V1  V1  V1  + V0  + - V0  i - a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.200000	stackLen: 30 => V1  1.000000  r * 1.000000  * 1.000000  * V1  V1  V1  + V0  + - V0  i - a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.200000	stackLen: 30 => V1  1.000000  r * 1.000000  * 1.000000  * V1  V1  V1  + V0  + - V0  i - a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.200000	stackLen: 30 => V1  1.000000  r * 1.000000  * 1.000000  * V1  V1  V1  + V0  + - V0  i - a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.200000	stackLen: 30 => V1  1.000000  r * 1.000000  * 1.000000  * V1  V1  V1  + V0  + - V0  i - a a r V4  a / r i V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.2678 stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 6 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 7 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 8 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 9 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 10 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 11 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 12 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 13 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 14 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 15 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 16 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 17 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 18 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 19 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 20 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
iteration = 21 	 best= 18.267757	stackLen: 30 => 1.000000  e r 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - * * / empty: 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=18.1978 stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 10 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 11 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 12 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 13 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 14 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 15 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 16 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 17 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 18 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 19 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 20 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 21 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 22 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 23 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 24 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 25 	 best= 18.197758	stackLen: 30 => 1.000000  e r 1.000000  1.000000  1.000000  + + / 1.000000  1.000000  V4  * V1  - / 1.000000  V5  V0  - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.156 stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.155997	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  * * 1.000000  / * V1  * a r e i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=16.55 stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.550000	stackLen: 30 => V1  i V5  V5  1.000000  1.000000  + i V5  / * 1.000000  / * V1  * a r i i i 1.000000  / i V4  * V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 46 32 5 93 31 72 99 91 64 19 
BEST SOLUTION! cost=44.1 stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  * 1.000000  V1  / / 1.000000  * V5  1.000000  V0  * + * * empty: 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 
iteration = 0 	 best= 44.100000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  * 1.000000  V1  / / 1.000000  * V5  1.000000  V0  * + * * empty: 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 
iteration = 1 	 best= 44.100000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  * 1.000000  V1  / / 1.000000  * V5  1.000000  V0  * + * * empty: 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 
iteration = 2 	 best= 44.100000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  * 1.000000  V1  / / 1.000000  * V5  1.000000  V0  * + * * empty: 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 
iteration = 3 	 best= 44.100000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  * 1.000000  V1  / / 1.000000  * V5  1.000000  V0  * + * * empty: 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 
iteration = 4 	 best= 44.100000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  * 1.000000  V1  / / 1.000000  * V5  1.000000  V0  * + * * empty: 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 
iteration = 5 	 best= 44.100000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  * 1.000000  V1  / / 1.000000  * V5  1.000000  V0  * + * * empty: 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 
BEST SOLUTION! cost=43.3 stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  1.000000  + * / V3  V1  - / 1.000000  1.000000  * V5  1.000000  V0  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 43.300000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  1.000000  + * / V3  V1  - / 1.000000  1.000000  * V5  1.000000  V0  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 43.300000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  1.000000  + * / V3  V1  - / 1.000000  1.000000  * V5  1.000000  V0  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 43.300000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  1.000000  + * / V3  V1  - / 1.000000  1.000000  * V5  1.000000  V0  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 43.300000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  1.000000  + * / V3  V1  - / 1.000000  1.000000  * V5  1.000000  V0  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 43.300000	stackLen: 30 => V2  a 1.000000  V2  / a 1.000000  1.000000  + * / V3  V1  - / 1.000000  1.000000  * V5  1.000000  V0  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=37.1241 stackLen: 30 => 1.000000  1.000000  e * V5  a * r V1  * empty: 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 37.124092	stackLen: 30 => 1.000000  1.000000  e * V5  a * r V1  * empty: 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 37.124092	stackLen: 30 => 1.000000  1.000000  e * V5  a * r V1  * empty: 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=35.3 stackLen: 30 => V0  1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 35.300000	stackLen: 30 => V0  1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 35.300000	stackLen: 30 => V0  1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 35.300000	stackLen: 30 => V0  1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 35.300000	stackLen: 30 => V0  1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 35.300000	stackLen: 30 => V0  1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 35.300000	stackLen: 30 => V0  1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=34.4 stackLen: 30 => V0  V0  + 1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 34.400000	stackLen: 30 => V0  V0  + 1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 34.400000	stackLen: 30 => V0  V0  + 1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 34.400000	stackLen: 30 => V0  V0  + 1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 34.400000	stackLen: 30 => V0  V0  + 1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 34.400000	stackLen: 30 => V0  V0  + 1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 34.400000	stackLen: 30 => V0  V0  + 1.000000  1.000000  * * a r V2  V4  - 1.000000  * + V1  * empty: 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=30.95 stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 30.950000	stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 30.950000	stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 30.950000	stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 30.950000	stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 30.950000	stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 30.950000	stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 30.950000	stackLen: 30 => V0  V0  + V0  + 1.000000  1.000000  + 1.000000  / * a r V2  V4  - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=26.95 stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 26.950000	stackLen: 30 => V0  V0  + V0  + V1  + 1.000000  1.000000  + 1.000000  / * a r V2  V1  V4  - - 1.000000  1.000000  1.000000  - + * + V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 99 97 12 89 3 46 81 66 23 60 
BEST SOLUTION! cost=26.1624 stackLen: 30 => V4  1.000000  r r V3  a / V3  / * V4  * V4  1.000000  V2  / - * empty: 0 1 0 0 0 1 1 1 1 0 0 1 1 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 26.162381	stackLen: 30 => V4  1.000000  r r V3  a / V3  / * V4  * V4  1.000000  V2  / - * empty: 0 1 0 0 0 1 1 1 1 0 0 1 1 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 26.162381	stackLen: 30 => V4  1.000000  r r V3  a / V3  / * V4  * V4  1.000000  V2  / - * empty: 0 1 0 0 0 1 1 1 1 0 0 1 1 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=24.5209 stackLen: 30 => 1.000000  1.000000  + r 1.000000  e / V3  / V4  V2  - * empty: 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 24.520910	stackLen: 30 => 1.000000  1.000000  + r 1.000000  e / V3  / V4  V2  - * empty: 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 24.520910	stackLen: 30 => 1.000000  1.000000  + r 1.000000  e / V3  / V4  V2  - * empty: 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
iteration = 2 	 best= 24.520910	stackLen: 30 => 1.000000  1.000000  + r 1.000000  e / V3  / V4  V2  - * empty: 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
iteration = 3 	 best= 24.520910	stackLen: 30 => 1.000000  1.000000  + r 1.000000  e / V3  / V4  V2  - * empty: 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
iteration = 4 	 best= 24.520910	stackLen: 30 => 1.000000  1.000000  + r 1.000000  e / V3  / V4  V2  - * empty: 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
iteration = 5 	 best= 24.520910	stackLen: 30 => 1.000000  1.000000  + r 1.000000  e / V3  / V4  V2  - * empty: 0 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=22.02 stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * * 1.000000  r 1.000000  e + V3  / V4  V4  + V4  + V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 0 	 best= 22.020016	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * * 1.000000  r 1.000000  e + V3  / V4  V4  + V4  + V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 1 	 best= 22.020016	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * * 1.000000  r 1.000000  e + V3  / V4  V4  + V4  + V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 2 	 best= 22.020016	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * * 1.000000  r 1.000000  e + V3  / V4  V4  + V4  + V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 3 	 best= 22.020016	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * * 1.000000  r 1.000000  e + V3  / V4  V4  + V4  + V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 4 	 best= 22.020016	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * * 1.000000  r 1.000000  e + V3  / V4  V4  + V4  + V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 5 	 best= 22.020016	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * * 1.000000  r 1.000000  e + V3  / V4  V4  + V4  + V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
BEST SOLUTION! cost=19.4757 stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.475697	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  e - V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19 stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.000000	stackLen: 30 => 1.000000  1.000000  1.000000  * / r r 1.000000  r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  V2  * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.7 stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  * a i r 1.000000  + i V3  / V4  V4  - V1  V0  + V4  + + 1.000000  1.000000  + V2  * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 85 76 23 69 13 22 92 42 7 18 
BEST SOLUTION! cost=41.2 stackLen: 30 => 1.000000  V4  V2  + V5  a 1.000000  * r V5  a / 1.000000  V2  / - - V4  * * empty: 0 0 0 0 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 41.200000	stackLen: 30 => 1.000000  V4  V2  + V5  a 1.000000  * r V5  a / 1.000000  V2  / - - V4  * * empty: 0 0 0 0 1 0 0 0 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=19.58 stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 1 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 2 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 3 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 4 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 5 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 6 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 7 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 8 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 9 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 10 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 11 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 12 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 13 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 14 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 15 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 16 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 17 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 18 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 19 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 20 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 21 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 22 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 23 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 24 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 25 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 26 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 27 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 28 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 29 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 30 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 31 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 32 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 33 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 34 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 35 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 36 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 37 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 38 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 39 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 40 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 41 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 42 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 43 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 44 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 45 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 46 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 47 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 48 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
iteration = 49 	 best= 19.580000	stackLen: 30 => V3  a V0  a * 1.000000  V5  * V4  + a / r V1  / empty: 0 0 1 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 80 50 38 63 33 96 75 10 43 36 
BEST SOLUTION! cost=34 stackLen: 30 => V3  V2  V3  1.000000  V5  V3  V1  + + * - + * empty: 0 1 1 0 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 34.000000	stackLen: 30 => V3  V2  V3  1.000000  V5  V3  V1  + + * - + * empty: 0 1 1 0 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=23.3532 stackLen: 30 => 1.000000  V2  V5  - a 1.000000  e a r * 1.000000  V0  * / V0  a 1.000000  V1  / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.353178	stackLen: 30 => 1.000000  V2  V5  - a 1.000000  e a r * 1.000000  V0  * / V0  a 1.000000  V1  / * * / empty: 0 1 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.1 stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 6 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 7 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 8 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 9 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 10 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 11 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 12 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 13 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 14 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 15 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 16 	 best= 21.100000	stackLen: 30 => 1.000000  V0  V3  1.000000  V4  a / r - * * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=21.0773 stackLen: 30 => 1.000000  1.000000  / V4  V0  - V3  1.000000  1.000000  1.000000  + / V4  a / r - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.077312	stackLen: 30 => 1.000000  1.000000  / V4  V0  - V3  1.000000  1.000000  1.000000  + / V4  a / r - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.8867 stackLen: 30 => V1  V5  V1  1.000000  * * V4  V5  a V0  / a * * * empty: 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 
iteration = 0 	 best= 20.886692	stackLen: 30 => V1  V5  V1  1.000000  * * V4  V5  a V0  / a * * * empty: 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 
iteration = 1 	 best= 20.886692	stackLen: 30 => V1  V5  V1  1.000000  * * V4  V5  a V0  / a * * * empty: 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 
iteration = 2 	 best= 20.886692	stackLen: 30 => V1  V5  V1  1.000000  * * V4  V5  a V0  / a * * * empty: 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 
iteration = 3 	 best= 20.886692	stackLen: 30 => V1  V5  V1  1.000000  * * V4  V5  a V0  / a * * * empty: 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 
iteration = 4 	 best= 20.886692	stackLen: 30 => V1  V5  V1  1.000000  * * V4  V5  a V0  / a * * * empty: 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 
iteration = 5 	 best= 20.886692	stackLen: 30 => V1  V5  V1  1.000000  * * V4  V5  a V0  / a * * * empty: 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 0 
BEST SOLUTION! cost=19.8622 stackLen: 30 => V1  V5  V1  1.000000  1.000000  + 1.000000  / * * V2  V4  V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.862193	stackLen: 30 => V1  V5  V1  1.000000  1.000000  + 1.000000  / * * V2  V4  V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.862193	stackLen: 30 => V1  V5  V1  1.000000  1.000000  + 1.000000  / * * V2  V4  V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.862193	stackLen: 30 => V1  V5  V1  1.000000  1.000000  + 1.000000  / * * V2  V4  V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 19.862193	stackLen: 30 => V1  V5  V1  1.000000  1.000000  + 1.000000  / * * V2  V4  V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 19.862193	stackLen: 30 => V1  V5  V1  1.000000  1.000000  + 1.000000  / * * V2  V4  V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 19.862193	stackLen: 30 => V1  V5  V1  1.000000  1.000000  + 1.000000  / * * V2  V4  V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.9706 stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.970572	stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14.9706
stackLen: 30 => V1  V5  V1  1.000000  1.000000  1.000000  / + 1.000000  1.000000  / / * * V3  V3  V4  - V4  + - V5  a V0  / a * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((({(v0/{v5^2})^2} * ((v4 + (v4 - v3)) - v3)) * ((((1/1)/((1/1) + 1)) * v1) * v5)) * v1)
Tempo de execucao: 1191.32 segundos
FIM
