Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 97 85 28 64 44 13 56 37 54 32 
BEST SOLUTION! cost=35.7 stackLen: 30 => V4  V4  1.000000  V4  a V5  / V4  * * * * empty: 0 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 35.700000	stackLen: 30 => V4  V4  1.000000  V4  a V5  / V4  * * * * empty: 0 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=34 stackLen: 30 => 1.000000  V1  1.000000  r * a r 1.000000  i V2  * * 1.000000  1.000000  / * * empty: 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 34.000000	stackLen: 30 => 1.000000  V1  1.000000  r * a r 1.000000  i V2  * * 1.000000  1.000000  / * * empty: 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 1 	 best= 34.000000	stackLen: 30 => 1.000000  V1  1.000000  r * a r 1.000000  i V2  * * 1.000000  1.000000  / * * empty: 0 0 0 1 0 0 0 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=30.9 stackLen: 30 => 1.000000  V3  V2  a r a 1.000000  * r * * empty: 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 30.900000	stackLen: 30 => 1.000000  V3  V2  a r a 1.000000  * r * * empty: 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 30.900000	stackLen: 30 => 1.000000  V3  V2  a r a 1.000000  * r * * empty: 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=27.8576 stackLen: 30 => 1.000000  1.000000  e r 1.000000  * - V3  V0  V2  - * * empty: 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 27.857608	stackLen: 30 => 1.000000  1.000000  e r 1.000000  * - V3  V0  V2  - * * empty: 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 27.857608	stackLen: 30 => 1.000000  1.000000  e r 1.000000  * - V3  V0  V2  - * * empty: 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 27.857608	stackLen: 30 => 1.000000  1.000000  e r 1.000000  * - V3  V0  V2  - * * empty: 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 27.857608	stackLen: 30 => 1.000000  1.000000  e r 1.000000  * - V3  V0  V2  - * * empty: 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 4 	 best= 27.857608	stackLen: 30 => 1.000000  1.000000  e r 1.000000  * - V3  V0  V2  - * * empty: 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 5 	 best= 27.857608	stackLen: 30 => 1.000000  1.000000  e r 1.000000  * - V3  V0  V2  - * * empty: 0 1 1 1 1 1 1 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=25.3 stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.300000	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.300000	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.300000	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.300000	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.300000	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 25.300000	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 25.300000	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  * e r 1.000000  * / V3  V0  V2  - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.9306 stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 0 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 1 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 2 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 3 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 4 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 5 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 6 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 7 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 8 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 9 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 10 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 11 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 12 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 13 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 14 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 15 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 16 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 17 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 18 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 19 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 20 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 21 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 22 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 23 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 24 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 25 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 26 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 27 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 28 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 29 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 30 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 31 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 32 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 33 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 34 	 best= 22.930644	stackLen: 30 => 1.000000  1.000000  1.000000  + + 1.000000  e - 1.000000  * e r 1.000000  * 1.000000  V3  V0  V2  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
BEST SOLUTION! cost=20.7472 stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 20.747156	stackLen: 30 => 1.000000  1.000000  * 1.000000  + 1.000000  e - 1.000000  V4  i i 1.000000  * / V1  i + V2  V2  + V0  - V2  + V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 67 93 7 75 92 53 15 87 43 37 
BEST SOLUTION! cost=23.1 stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
iteration = 0 	 best= 23.100000	stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
iteration = 1 	 best= 23.100000	stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
iteration = 2 	 best= 23.100000	stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
iteration = 3 	 best= 23.100000	stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
iteration = 4 	 best= 23.100000	stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
iteration = 5 	 best= 23.100000	stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
iteration = 6 	 best= 23.100000	stackLen: 30 => 1.000000  1.000000  * V2  V3  V0  - V4  - * / empty: 0 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 
BEST SOLUTION! cost=22.7 stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  * 1.000000  / 1.000000  * V2  V3  V4  - V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  * 1.000000  / 1.000000  * V2  V3  V4  - V2  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.0631 stackLen: 30 => 1.000000  V3  1.000000  * V4  V0  1.000000  e V1  V2  - / + + * * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.063139	stackLen: 30 => 1.000000  V3  1.000000  * V4  V0  1.000000  e V1  V2  - / + + * * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.063139	stackLen: 30 => 1.000000  V3  1.000000  * V4  V0  1.000000  e V1  V2  - / + + * * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.063139	stackLen: 30 => 1.000000  V3  1.000000  * V4  V0  1.000000  e V1  V2  - / + + * * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.063139	stackLen: 30 => 1.000000  V3  1.000000  * V4  V0  1.000000  e V1  V2  - / + + * * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.063139	stackLen: 30 => 1.000000  V3  1.000000  * V4  V0  1.000000  e V1  V2  - / + + * * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.063139	stackLen: 30 => 1.000000  V3  1.000000  * V4  V0  1.000000  e V1  V2  - / + + * * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.8511 stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V5  V2  V2  - - / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 15.851131	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V5  V2  V2  - - / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 15.851131	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V5  V2  V2  - - / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 15.851131	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V5  V2  V2  - - / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 15.851131	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V5  V2  V2  - - / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 15.851131	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V5  V2  V2  - - / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 15.851131	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V5  V2  V2  - - / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=14.4886 stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V2  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.488647	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V2  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.488647	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V2  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.488647	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V2  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.488647	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V2  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.488647	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V2  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.488647	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V2  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=13.7234 stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 13.723364	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * V2  V0  1.000000  1.000000  1.000000  + * e V0  V5  V5  + V4  - - V2  V3  - + / + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 16 28 74 77 8 42 21 25 0 7 
BEST SOLUTION! cost=34 stackLen: 30 => 1.000000  a V3  1.000000  * V2  * * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 34.000000	stackLen: 30 => 1.000000  a V3  1.000000  * V2  * * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=28.8291 stackLen: 30 => V3  1.000000  * V2  a V5  1.000000  V4  * * / * V0  * empty: 0 0 0 1 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 28.829130	stackLen: 30 => V3  1.000000  * V2  a V5  1.000000  V4  * * / * V0  * empty: 0 0 0 1 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 28.829130	stackLen: 30 => V3  1.000000  * V2  a V5  1.000000  V4  * * / * V0  * empty: 0 0 0 1 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=21.6 stackLen: 30 => 1.000000  V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 21.600000	stackLen: 30 => 1.000000  V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 21.600000	stackLen: 30 => 1.000000  V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 21.600000	stackLen: 30 => 1.000000  V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 3 	 best= 21.600000	stackLen: 30 => 1.000000  V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 4 	 best= 21.600000	stackLen: 30 => 1.000000  V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 5 	 best= 21.600000	stackLen: 30 => 1.000000  V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=17.2667 stackLen: 30 => 1.000000  1.000000  + 1.000000  + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.1 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + + V4  / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.525 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + V3  / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 14.525000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + V3  / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 14.525000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + V3  / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 14.525000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + V3  / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 14.525000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + V3  / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 14.525000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + V3  / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 14.525000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + V3  / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=13.4327 stackLen: 30 => 1.000000  a e 1.000000  1.000000  * V3  V3  V3  - + / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.432672	stackLen: 30 => 1.000000  a e 1.000000  1.000000  * V3  V3  V3  - + / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.432672	stackLen: 30 => 1.000000  a e 1.000000  1.000000  * V3  V3  V3  - + / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.432672	stackLen: 30 => 1.000000  a e 1.000000  1.000000  * V3  V3  V3  - + / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.432672	stackLen: 30 => 1.000000  a e 1.000000  1.000000  * V3  V3  V3  - + / V4  + V4  V4  + - / 1.000000  V1  / - 1.000000  * V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.2333 stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 0 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 1 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 2 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 3 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 4 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 5 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 6 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 7 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 8 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 9 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 10 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 11 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 12 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 13 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 14 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 15 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 16 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 17 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 18 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 19 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 20 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 21 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 22 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 23 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 24 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 25 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 26 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 27 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 28 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 29 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 30 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 31 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 32 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 33 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 34 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 35 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 36 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 37 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 38 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 39 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 40 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 41 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 42 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 43 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 44 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 45 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 46 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 47 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 48 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
iteration = 49 	 best= 12.233333	stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 74 59 82 4 69 52 3 76 77 46 
BEST SOLUTION! cost=40.9621 stackLen: 30 => V3  a V4  i / V1  V0  * 1.000000  V4  * 1.000000  * * * empty: 0 1 1 0 1 1 0 0 0 0 0 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 40.962100	stackLen: 30 => V3  a V4  i / V1  V0  * 1.000000  V4  * 1.000000  * * * empty: 0 1 1 0 1 1 0 0 0 0 0 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 40.962100	stackLen: 30 => V3  a V4  i / V1  V0  * 1.000000  V4  * 1.000000  * * * empty: 0 1 1 0 1 1 0 0 0 0 0 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 40.962100	stackLen: 30 => V3  a V4  i / V1  V0  * 1.000000  V4  * 1.000000  * * * empty: 0 1 1 0 1 1 0 0 0 0 0 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=40.2 stackLen: 30 => 1.000000  V2  1.000000  1.000000  / 1.000000  a * * * V3  * empty: 0 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 40.200000	stackLen: 30 => 1.000000  V2  1.000000  1.000000  / 1.000000  a * * * V3  * empty: 0 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=38.8991 stackLen: 30 => V3  a a V1  a 1.000000  V4  V0  a * * V3  * * / empty: 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 38.899127	stackLen: 30 => V3  a a V1  a 1.000000  V4  V0  a * * V3  * * / empty: 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=34.1096 stackLen: 30 => V3  a r 1.000000  V0  V1  - V0  * / / V5  * empty: 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 34.109643	stackLen: 30 => V3  a r 1.000000  V0  V1  - V0  * / / V5  * empty: 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 34.109643	stackLen: 30 => V3  a r 1.000000  V0  V1  - V0  * / / V5  * empty: 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 2 	 best= 34.109643	stackLen: 30 => V3  a r 1.000000  V0  V1  - V0  * / / V5  * empty: 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 3 	 best= 34.109643	stackLen: 30 => V3  a r 1.000000  V0  V1  - V0  * / / V5  * empty: 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 4 	 best= 34.109643	stackLen: 30 => V3  a r 1.000000  V0  V1  - V0  * / / V5  * empty: 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 5 	 best= 34.109643	stackLen: 30 => V3  a r 1.000000  V0  V1  - V0  * / / V5  * empty: 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 0 
BEST SOLUTION! cost=31.9164 stackLen: 30 => V3  a r 1.000000  1.000000  + V0  V0  + V1  - V0  * / / V5  * empty: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 31.916429	stackLen: 30 => V3  a r 1.000000  1.000000  + V0  V0  + V1  - V0  * / / V5  * empty: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 31.916429	stackLen: 30 => V3  a r 1.000000  1.000000  + V0  V0  + V1  - V0  * / / V5  * empty: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 31.916429	stackLen: 30 => V3  a r 1.000000  1.000000  + V0  V0  + V1  - V0  * / / V5  * empty: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 31.916429	stackLen: 30 => V3  a r 1.000000  1.000000  + V0  V0  + V1  - V0  * / / V5  * empty: 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=26.7 stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 1 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 2 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 3 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 4 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 5 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 6 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
iteration = 7 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i a r V1  / V4  - V0  V0  + + * V1  * empty: 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=25.5 stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 25.500000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * a / V5  V4  i - / V4  V4  - V0  - + * V1  * i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25.1 stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 25.100000	stackLen: 30 => 1.000000  a 1.000000  1.000000  i 1.000000  r 1.000000  1.000000  * i / V5  V4  i i V1  V1  + V0  V4  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.4 stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.400000	stackLen: 30 => 1.000000  a 1.000000  1.000000  r 1.000000  r 1.000000  1.000000  * a / V5  V4  i i V1  V1  + V1  V3  - - + * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 54 47 18 11 31 49 41 66 12 98 
BEST SOLUTION! cost=36.477 stackLen: 30 => V4  1.000000  e 1.000000  a / r r V3  * - V2  * empty: 0 1 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 1 1 0 0 0 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 36.476959	stackLen: 30 => V4  1.000000  e 1.000000  a / r r V3  * - V2  * empty: 0 1 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 1 1 0 0 0 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=34.1725 stackLen: 30 => 1.000000  e V0  V3  - i * i a V3  V2  V5  a V2  a - * * / empty: 0 0 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 34.172487	stackLen: 30 => 1.000000  e V0  V3  - i * i a V3  V2  V5  a V2  a - * * / empty: 0 0 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 34.172487	stackLen: 30 => 1.000000  e V0  V3  - i * i a V3  V2  V5  a V2  a - * * / empty: 0 0 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=33.5 stackLen: 30 => V3  V3  * V1  V3  1.000000  * a 1.000000  * V4  V1  1.000000  * + / * * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 33.500000	stackLen: 30 => V3  V3  * V1  V3  1.000000  * a 1.000000  * V4  V1  1.000000  * + / * * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 33.500000	stackLen: 30 => V3  V3  * V1  V3  1.000000  * a 1.000000  * V4  V1  1.000000  * + / * * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 33.500000	stackLen: 30 => V3  V3  * V1  V3  1.000000  * a 1.000000  * V4  V1  1.000000  * + / * * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 33.500000	stackLen: 30 => V3  V3  * V1  V3  1.000000  * a 1.000000  * V4  V1  1.000000  * + / * * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 33.500000	stackLen: 30 => V3  V3  * V1  V3  1.000000  * a 1.000000  * V4  V1  1.000000  * + / * * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=32.3 stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  i V2  V3  V0  + V1  + i * * / * empty: 0 0 0 1 1 1 0 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 32.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  i V2  V3  V0  + V1  + i * * / * empty: 0 0 0 1 1 1 0 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 32.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  i V2  V3  V0  + V1  + i * * / * empty: 0 0 0 1 1 1 0 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 32.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  i V2  V3  V0  + V1  + i * * / * empty: 0 0 0 1 1 1 0 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 32.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  i V2  V3  V0  + V1  + i * * / * empty: 0 0 0 1 1 1 0 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=21.1 stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 7 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 8 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
iteration = 9 	 best= 21.100000	stackLen: 30 => V5  V4  V2  V5  a 1.000000  V3  / / V5  * * + * empty: 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.8 stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  V3  V3  + V0  + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 14.800000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  V3  V3  + V0  + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 14.800000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  V3  V3  + V0  + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 14.800000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  V3  V3  + V0  + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 14.800000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  V3  V3  + V0  + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 14.800000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  V3  V3  + V0  + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 14.800000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  V3  V3  + V0  + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=13.9 stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 15 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 16 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 17 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 18 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 19 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 20 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 21 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 22 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 23 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 24 	 best= 13.900000	stackLen: 30 => V5  V4  V2  V2  + V5  V5  + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=13.8556 stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 13.855556	stackLen: 30 => V5  V4  V2  V2  + V5  V5  V5  + + a 1.000000  1.000000  * V3  V3  + V0  V0  + + / / V5  V5  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.2333
stackLen: 30 => V3  V5  i V0  1.000000  V3  a V4  / 1.000000  * / * V5  1.000000  * * i i - * empty: 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 1 1 0 0 
trueStackSize=21
printSolution2: ((((((1 * v5) * (((1 * (v4/{v3^2}))/1) * v0)))) - (v5)) * v3)
Tempo de execucao: 1201.99 segundos
FIM
