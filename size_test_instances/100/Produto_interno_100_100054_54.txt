Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 36 64 44 75 74 38 13 63 32 17 
BEST SOLUTION! cost=24 stackLen: 30 => 1.000000  i V1  V5  + / V0  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 24.000000	stackLen: 30 => 1.000000  i V1  V5  + / V0  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 24.000000	stackLen: 30 => 1.000000  i V1  V5  + / V0  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 24.000000	stackLen: 30 => 1.000000  i V1  V5  + / V0  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 24.000000	stackLen: 30 => 1.000000  i V1  V5  + / V0  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 24.000000	stackLen: 30 => 1.000000  i V1  V5  + / V0  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 24.000000	stackLen: 30 => 1.000000  i V1  V5  + / V0  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=17.3553 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 17.355278	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + r * 1.000000  1.000000  a / V2  / / V1  - V5  + / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.75 stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.750000	stackLen: 30 => 1.000000  1.000000  r 1.000000  + a r 1.000000  1.000000  i / V3  V2  V2  + - / / V1  - V5  + * V0  V0  V0  + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 93 46 79 88 60 73 67 43 55 85 
BEST SOLUTION! cost=35.7 stackLen: 30 => V1  1.000000  V4  * - i 1.000000  * 1.000000  i * V5  * empty: 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 0 1 0 0 1 
iteration = 0 	 best= 35.700000	stackLen: 30 => V1  1.000000  V4  * - i 1.000000  * 1.000000  i * V5  * empty: 0 1 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 0 1 0 0 1 
BEST SOLUTION! cost=29.0798 stackLen: 30 => V0  1.000000  V3  a V1  i / V1  * V3  a r V3  i V3  - / + * * V1  * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 29.079825	stackLen: 30 => V0  1.000000  V3  a V1  i / V1  * V3  a r V3  i V3  - / + * * V1  * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 29.079825	stackLen: 30 => V0  1.000000  V3  a V1  i / V1  * V3  a r V3  i V3  - / + * * V1  * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 29.079825	stackLen: 30 => V0  1.000000  V3  a V1  i / V1  * V3  a r V3  i V3  - / + * * V1  * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 29.079825	stackLen: 30 => V0  1.000000  V3  a V1  i / V1  * V3  a r V3  i V3  - / + * * V1  * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 29.079825	stackLen: 30 => V0  1.000000  V3  a V1  i / V1  * V3  a r V3  i V3  - / + * * V1  * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=21.5 stackLen: 30 => V4  1.000000  V0  a * r V0  + + V4  - V4  * empty: 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 1 0 1 1 
iteration = 0 	 best= 21.500000	stackLen: 30 => V4  1.000000  V0  a * r V0  + + V4  - V4  * empty: 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 1 0 1 1 
iteration = 1 	 best= 21.500000	stackLen: 30 => V4  1.000000  V0  a * r V0  + + V4  - V4  * empty: 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 1 0 1 1 
iteration = 2 	 best= 21.500000	stackLen: 30 => V4  1.000000  V0  a * r V0  + + V4  - V4  * empty: 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 1 0 1 1 
iteration = 3 	 best= 21.500000	stackLen: 30 => V4  1.000000  V0  a * r V0  + + V4  - V4  * empty: 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 1 0 1 1 
iteration = 4 	 best= 21.500000	stackLen: 30 => V4  1.000000  V0  a * r V0  + + V4  - V4  * empty: 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 1 0 1 1 
iteration = 5 	 best= 21.500000	stackLen: 30 => V4  1.000000  V0  a * r V0  + + V4  - V4  * empty: 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 0 1 0 1 1 
BEST SOLUTION! cost=18.805 stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 0 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 1 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 2 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 3 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 4 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 5 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 6 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 7 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 8 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 9 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 10 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 11 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 12 	 best= 18.805025	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  1.000000  1.000000  / / / V1  a * r V0  V0  + + + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
BEST SOLUTION! cost=18.7412 stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.741241	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  1.000000  + / / V1  V1  V1  + - a * r + V0  + V0  + V4  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 71 74 13 68 81 18 41 79 87 24 
BEST SOLUTION! cost=41.4181 stackLen: 30 => V3  a 1.000000  e / V3  a * 1.000000  e V0  V4  V5  + + / / V5  i + V4  * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 41.418058	stackLen: 30 => V3  a 1.000000  e / V3  a * 1.000000  e V0  V4  V5  + + / / V5  i + V4  * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=31 stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
iteration = 0 	 best= 31.000000	stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
iteration = 1 	 best= 31.000000	stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
iteration = 2 	 best= 31.000000	stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
iteration = 3 	 best= 31.000000	stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
iteration = 4 	 best= 31.000000	stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
iteration = 5 	 best= 31.000000	stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
iteration = 6 	 best= 31.000000	stackLen: 30 => V3  1.000000  V2  V3  - / 1.000000  i V2  a / r - * empty: 0 1 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 1 0 1 
BEST SOLUTION! cost=25.3 stackLen: 30 => V3  1.000000  1.000000  + V2  V2  + V2  + V3  V3  + - / 1.000000  i V2  a / r - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.300000	stackLen: 30 => V3  1.000000  1.000000  + V2  V2  + V2  + V3  V3  + - / 1.000000  i V2  a / r - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.300000	stackLen: 30 => V3  1.000000  1.000000  + V2  V2  + V2  + V3  V3  + - / 1.000000  i V2  a / r - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.300000	stackLen: 30 => V3  1.000000  1.000000  + V2  V2  + V2  + V3  V3  + - / 1.000000  i V2  a / r - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.300000	stackLen: 30 => V3  1.000000  1.000000  + V2  V2  + V2  + V3  V3  + - / 1.000000  i V2  a / r - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.300000	stackLen: 30 => V3  1.000000  1.000000  + V2  V2  + V2  + V3  V3  + - / 1.000000  i V2  a / r - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.7 stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 6 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 7 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
iteration = 8 	 best= 22.700000	stackLen: 30 => V4  V3  - 1.000000  V3  V5  V3  V2  V2  + + - + * * empty: 0 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=22.3 stackLen: 30 => V4  V3  - 1.000000  V3  V3  + V5  V5  + V3  V2  V2  + + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.300000	stackLen: 30 => V4  V3  - 1.000000  V3  V3  + V5  V5  + V3  V2  V2  + + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.300000	stackLen: 30 => V4  V3  - 1.000000  V3  V3  + V5  V5  + V3  V2  V2  + + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.300000	stackLen: 30 => V4  V3  - 1.000000  V3  V3  + V5  V5  + V3  V2  V2  + + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.300000	stackLen: 30 => V4  V3  - 1.000000  V3  V3  + V5  V5  + V3  V2  V2  + + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.300000	stackLen: 30 => V4  V3  - 1.000000  V3  V3  + V5  V5  + V3  V2  V2  + + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.300000	stackLen: 30 => V4  V3  - 1.000000  V3  V3  + V5  V5  + V3  V2  V2  + + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=19.2 stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.200000	stackLen: 30 => V4  V3  - 1.000000  V0  1.000000  1.000000  1.000000  1.000000  + * - V3  * + V5  V5  - V5  + V3  V2  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.4 stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.400000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + * * V2  / * V5  V5  - V5  - V3  V3  V2  + + - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 0 76 56 70 64 58 42 62 2 32 
BEST SOLUTION! cost=35.7 stackLen: 30 => V2  1.000000  * V3  - V2  V5  V0  V4  - + + 1.000000  * 1.000000  V5  / a r + * empty: 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 1 1 0 0 1 0 0 0 
iteration = 0 	 best= 35.700000	stackLen: 30 => V2  1.000000  * V3  - V2  V5  V0  V4  - + + 1.000000  * 1.000000  V5  / a r + * empty: 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 1 0 1 0 1 1 0 0 1 0 0 0 
BEST SOLUTION! cost=24.7652 stackLen: 30 => 1.000000  e r r r V2  a / empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 0 	 best= 24.765239	stackLen: 30 => 1.000000  e r r r V2  a / empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 1 	 best= 24.765239	stackLen: 30 => 1.000000  e r r r V2  a / empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 2 	 best= 24.765239	stackLen: 30 => 1.000000  e r r r V2  a / empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 3 	 best= 24.765239	stackLen: 30 => 1.000000  e r r r V2  a / empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 
BEST SOLUTION! cost=23.6 stackLen: 30 => V0  a r V2  + V1  V2  - - i V1  1.000000  V2  * - * empty: 0 1 0 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 23.600000	stackLen: 30 => V0  a r V2  + V1  V2  - - i V1  1.000000  V2  * - * empty: 0 1 0 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 23.600000	stackLen: 30 => V0  a r V2  + V1  V2  - - i V1  1.000000  V2  * - * empty: 0 1 0 0 0 1 0 1 0 1 0 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=23 stackLen: 30 => 1.000000  V3  * V1  - V1  * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 23.000000	stackLen: 30 => 1.000000  V3  * V1  - V1  * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 1 	 best= 23.000000	stackLen: 30 => 1.000000  V3  * V1  - V1  * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 2 	 best= 23.000000	stackLen: 30 => 1.000000  V3  * V1  - V1  * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 3 	 best= 23.000000	stackLen: 30 => 1.000000  V3  * V1  - V1  * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=19.1 stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 2 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 3 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 4 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 5 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 6 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
iteration = 7 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  a / V3  V2  V4  + - V5  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 1 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=16.6 stackLen: 30 => 1.000000  1.000000  1.000000  / a / V3  V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V3  V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V3  V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V3  V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V3  V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V3  V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V3  V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=14 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 77 31 44 20 79 46 1 49 89 59 
BEST SOLUTION! cost=25.1 stackLen: 30 => 1.000000  V2  a V4  V2  a a r 1.000000  / V5  * * * / empty: 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 25.100000	stackLen: 30 => 1.000000  V2  a V4  V2  a a r 1.000000  / V5  * * * / empty: 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 25.100000	stackLen: 30 => 1.000000  V2  a V4  V2  a a r 1.000000  / V5  * * * / empty: 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 25.100000	stackLen: 30 => 1.000000  V2  a V4  V2  a a r 1.000000  / V5  * * * / empty: 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=22.6 stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V5  - i / * * empty: 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 
iteration = 0 	 best= 22.600000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V5  - i / * * empty: 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 
iteration = 1 	 best= 22.600000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V5  - i / * * empty: 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 
iteration = 2 	 best= 22.600000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V5  - i / * * empty: 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 
iteration = 3 	 best= 22.600000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V5  - i / * * empty: 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 
iteration = 4 	 best= 22.600000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V5  - i / * * empty: 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 
iteration = 5 	 best= 22.600000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V5  - i / * * empty: 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 
BEST SOLUTION! cost=21.3 stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V2  + V5  - i / * * empty: 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.300000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V2  + V5  - i / * * empty: 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.300000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V2  + V5  - i / * * empty: 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.300000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V2  + V5  - i / * * empty: 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.300000	stackLen: 30 => 1.000000  i a V4  1.000000  i V2  V2  + V5  - i / * * empty: 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=21 stackLen: 30 => 1.000000  V4  a r V2  1.000000  * - * V3  * empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
iteration = 0 	 best= 21.000000	stackLen: 30 => 1.000000  V4  a r V2  1.000000  * - * V3  * empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
iteration = 1 	 best= 21.000000	stackLen: 30 => 1.000000  V4  a r V2  1.000000  * - * V3  * empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
iteration = 2 	 best= 21.000000	stackLen: 30 => 1.000000  V4  a r V2  1.000000  * - * V3  * empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
iteration = 3 	 best= 21.000000	stackLen: 30 => 1.000000  V4  a r V2  1.000000  * - * V3  * empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
iteration = 4 	 best= 21.000000	stackLen: 30 => 1.000000  V4  a r V2  1.000000  * - * V3  * empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
iteration = 5 	 best= 21.000000	stackLen: 30 => 1.000000  V4  a r V2  1.000000  * - * V3  * empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 0 1 
BEST SOLUTION! cost=19.3 stackLen: 30 => 1.000000  V4  V4  * r 1.000000  1.000000  + V2  / 1.000000  * - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.300000	stackLen: 30 => 1.000000  V4  V4  * r 1.000000  1.000000  + V2  / 1.000000  * - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.300000	stackLen: 30 => 1.000000  V4  V4  * r 1.000000  1.000000  + V2  / 1.000000  * - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.300000	stackLen: 30 => 1.000000  V4  V4  * r 1.000000  1.000000  + V2  / 1.000000  * - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.5 stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 3 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 4 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 5 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 6 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 7 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 8 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 9 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 10 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 11 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 12 	 best= 18.500000	stackLen: 30 => V4  i V1  1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 1 1 1 0 1 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=15 stackLen: 30 => V4  i 1.000000  1.000000  + V1  / 1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.000000	stackLen: 30 => V4  i 1.000000  1.000000  + V1  / 1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.000000	stackLen: 30 => V4  i 1.000000  1.000000  + V1  / 1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.000000	stackLen: 30 => V4  i 1.000000  1.000000  + V1  / 1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.000000	stackLen: 30 => V4  i 1.000000  1.000000  + V1  / 1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.000000	stackLen: 30 => V4  i 1.000000  1.000000  + V1  / 1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.000000	stackLen: 30 => V4  i 1.000000  1.000000  + V1  / 1.000000  1.000000  * V2  V2  V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.3667 stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 15 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 16 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 17 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 18 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 19 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 20 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 21 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 22 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 23 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 24 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 25 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 26 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 27 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 28 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 29 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 30 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 31 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 32 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 33 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 34 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 35 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 36 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 37 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 38 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 39 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 40 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 41 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 42 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 43 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 44 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 45 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 46 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 47 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 48 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 49 	 best= 14.366667	stackLen: 30 => V4  i 1.000000  1.000000  + 1.000000  + V1  V1  + / 1.000000  1.000000  * V2  V2  V2  - V2  - V5  - - / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14
stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / a / V1  V3  + V3  - V2  V4  + - V2  - / V5  1.000000  * i * V2  V3  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((v3 * v2) - (((1 * v5)) * ((v2 - ((v4 + v2) - (v3 - (v3 + v1))))/({((1/1)/1)^2}/1))))
Tempo de execucao: 973.836 segundos
FIM
