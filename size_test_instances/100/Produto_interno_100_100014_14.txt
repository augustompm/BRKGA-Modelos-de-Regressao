Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 0 36 98 31 48 56 76 69 53 23 
BEST SOLUTION! cost=47.7 stackLen: 30 => 1.000000  V0  / V4  1.000000  a V0  V4  a V5  / * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 0 
iteration = 0 	 best= 47.700000	stackLen: 30 => 1.000000  V0  / V4  1.000000  a V0  V4  a V5  / * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 0 
BEST SOLUTION! cost=38.6597 stackLen: 30 => 1.000000  i e 1.000000  / V1  * V2  a V1  V1  * V3  / * * empty: 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 38.659693	stackLen: 30 => 1.000000  i e 1.000000  / V1  * V2  a V1  V1  * V3  / * * empty: 0 0 1 1 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 0 1 1 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=32.7 stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * / 1.000000  1.000000  / * V0  * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 32.700000	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * / 1.000000  1.000000  / * V0  * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 32.700000	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * / 1.000000  1.000000  / * V0  * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
iteration = 2 	 best= 32.700000	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * / 1.000000  1.000000  / * V0  * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
iteration = 3 	 best= 32.700000	stackLen: 30 => 1.000000  V3  1.000000  1.000000  / * / 1.000000  1.000000  / * V0  * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=28.4 stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 1 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 2 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 3 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 4 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 5 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 6 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 7 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 8 	 best= 28.400000	stackLen: 30 => V4  1.000000  a V2  * - V3  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=26.2522 stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 26.252186	stackLen: 30 => V4  1.000000  1.000000  / 1.000000  1.000000  + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=26.0347 stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 26.034710	stackLen: 30 => V4  1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.2269 stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 18.226938	stackLen: 30 => V4  V4  V4  + - 1.000000  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / r r + * r V2  * - V3  V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=16.5233 stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.523318	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  * r r + r r V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=16.474 stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.474005	stackLen: 30 => V4  V4  V4  + - V4  V4  + - V5  * 1.000000  1.000000  1.000000  1.000000  + 1.000000  / a r + r i V2  * / V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 19 71 75 92 10 28 70 82 20 24 
BEST SOLUTION! cost=44.51 stackLen: 30 => V4  a a V5  * V4  a a a V4  / V3  V1  * a * * empty: 0 0 1 1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 0 
iteration = 0 	 best= 44.510025	stackLen: 30 => V4  a a V5  * V4  a a a V4  / V3  V1  * a * * empty: 0 0 1 1 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 0 1 0 1 0 0 0 
BEST SOLUTION! cost=22.5668 stackLen: 30 => V3  1.000000  V5  a / V5  / * e r e r V5  V4  * * empty: 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 1 
iteration = 0 	 best= 22.566830	stackLen: 30 => V3  1.000000  V5  a / V5  / * e r e r V5  V4  * * empty: 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 1 
iteration = 1 	 best= 22.566830	stackLen: 30 => V3  1.000000  V5  a / V5  / * e r e r V5  V4  * * empty: 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 1 
iteration = 2 	 best= 22.566830	stackLen: 30 => V3  1.000000  V5  a / V5  / * e r e r V5  V4  * * empty: 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 1 
iteration = 3 	 best= 22.566830	stackLen: 30 => V3  1.000000  V5  a / V5  / * e r e r V5  V4  * * empty: 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 1 
iteration = 4 	 best= 22.566830	stackLen: 30 => V3  1.000000  V5  a / V5  / * e r e r V5  V4  * * empty: 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 1 
iteration = 5 	 best= 22.566830	stackLen: 30 => V3  1.000000  V5  a / V5  / * e r e r V5  V4  * * empty: 0 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 0 0 1 
BEST SOLUTION! cost=21.5177 stackLen: 30 => V3  V3  + 1.000000  V5  a / V5  V5  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 21.517730	stackLen: 30 => V3  V3  + 1.000000  V5  a / V5  V5  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 21.517730	stackLen: 30 => V3  V3  + 1.000000  V5  a / V5  V5  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 21.517730	stackLen: 30 => V3  V3  + 1.000000  V5  a / V5  V5  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 21.517730	stackLen: 30 => V3  V3  + 1.000000  V5  a / V5  V5  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 21.517730	stackLen: 30 => V3  V3  + 1.000000  V5  a / V5  V5  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 21.517730	stackLen: 30 => V3  V3  + 1.000000  V5  a / V5  V5  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=15.9252 stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.925188	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V2  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=15.7814 stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V4  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.781352	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V4  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.781352	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V4  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.781352	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V4  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.781352	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V4  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.781352	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V4  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.781352	stackLen: 30 => V4  V3  + V3  + 1.000000  1.000000  / 1.000000  / V5  a / V4  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.0196 stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 14.019626	stackLen: 30 => V4  V3  + V3  + 1.000000  * 1.000000  1.000000  / V5  a / V1  V3  - V5  - / * e r r r V5  V5  + V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 31 15 59 95 11 17 10 9 1 27 
BEST SOLUTION! cost=22.2996 stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 0 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 1 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 2 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 3 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 4 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 5 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 6 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 7 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 8 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 9 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 10 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 11 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 12 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 13 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 14 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 15 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 16 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 17 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 18 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 19 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 20 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 21 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 22 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 23 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 24 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 25 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 26 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 27 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
iteration = 28 	 best= 22.299597	stackLen: 30 => 1.000000  V3  i / a 1.000000  * V4  a V4  * V1  * / empty: 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 
BEST SOLUTION! cost=21.5037 stackLen: 30 => 1.000000  V3  i / a 1.000000  1.000000  + 1.000000  / r / 1.000000  1.000000  1.000000  / V1  a V4  * V1  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 0 	 best= 21.503702	stackLen: 30 => 1.000000  V3  i / a 1.000000  1.000000  + 1.000000  / r / 1.000000  1.000000  1.000000  / V1  a V4  * V1  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 1 	 best= 21.503702	stackLen: 30 => 1.000000  V3  i / a 1.000000  1.000000  + 1.000000  / r / 1.000000  1.000000  1.000000  / V1  a V4  * V1  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 2 	 best= 21.503702	stackLen: 30 => 1.000000  V3  i / a 1.000000  1.000000  + 1.000000  / r / 1.000000  1.000000  1.000000  / V1  a V4  * V1  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
BEST SOLUTION! cost=15.6 stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 2 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 3 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 4 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 5 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 6 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 7 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 8 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 9 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 10 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 11 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 12 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 13 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 14 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 15 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 16 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
iteration = 17 	 best= 15.600000	stackLen: 30 => V4  V2  1.000000  * a r V1  + * empty: 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=15.3667 stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 15.366667	stackLen: 30 => V4  V2  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=11.925 stackLen: 30 => V4  V2  1.000000  1.000000  + 1.000000  1.000000  + + 1.000000  1.000000  V1  * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 11.925000	stackLen: 30 => V4  V2  1.000000  1.000000  + 1.000000  1.000000  + + 1.000000  1.000000  V1  * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 11.925000	stackLen: 30 => V4  V2  1.000000  1.000000  + 1.000000  1.000000  + + 1.000000  1.000000  V1  * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 11.925000	stackLen: 30 => V4  V2  1.000000  1.000000  + 1.000000  1.000000  + + 1.000000  1.000000  V1  * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 11.925000	stackLen: 30 => V4  V2  1.000000  1.000000  + 1.000000  1.000000  + + 1.000000  1.000000  V1  * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 11.925000	stackLen: 30 => V4  V2  1.000000  1.000000  + 1.000000  1.000000  + + 1.000000  1.000000  V1  * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 11.925000	stackLen: 30 => V4  V2  1.000000  1.000000  + 1.000000  1.000000  + + 1.000000  1.000000  V1  * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=11.845 stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 11.845000	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 11.845000	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 11.845000	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 11.845000	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 11.845000	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 11.845000	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 11.845000	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=11.3908 stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 11.390761	stackLen: 30 => V4  V2  1.000000  1.000000  + e 1.000000  + 1.000000  1.000000  1.000000  * V1  V1  + V1  V1  V2  - + + * * / + a r V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 17 28 66 56 5 76 52 38 19 59 
BEST SOLUTION! cost=34.4 stackLen: 30 => V5  i V1  a r - a V5  V4  - 1.000000  r V5  / * + empty: 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 34.400000	stackLen: 30 => V5  i V1  a r - a V5  V4  - 1.000000  r V5  / * + empty: 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 34.400000	stackLen: 30 => V5  i V1  a r - a V5  V4  - 1.000000  r V5  / * + empty: 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 34.400000	stackLen: 30 => V5  i V1  a r - a V5  V4  - 1.000000  r V5  / * + empty: 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 34.400000	stackLen: 30 => V5  i V1  a r - a V5  V4  - 1.000000  r V5  / * + empty: 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 34.400000	stackLen: 30 => V5  i V1  a r - a V5  V4  - 1.000000  r V5  / * + empty: 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=23.6 stackLen: 30 => V1  V5  - V1  1.000000  * + V2  - V5  * empty: 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 23.600000	stackLen: 30 => V1  V5  - V1  1.000000  * + V2  - V5  * empty: 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 23.600000	stackLen: 30 => V1  V5  - V1  1.000000  * + V2  - V5  * empty: 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=21.3 stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 4 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 5 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 6 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 7 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 8 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 9 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 10 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 11 	 best= 21.300000	stackLen: 30 => V5  V3  a V3  a 1.000000  V2  V4  + / * / * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=20.1 stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 20.100000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  + V2  V4  V4  + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=19.22 stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  1.000000  + 1.000000  + + V2  V4  V4  + V2  V4  + + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.220000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  1.000000  + 1.000000  + + V2  V4  V4  + V2  V4  + + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.220000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  1.000000  + 1.000000  + + V2  V4  V4  + V2  V4  + + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.220000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  1.000000  + 1.000000  + + V2  V4  V4  + V2  V4  + + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.220000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  1.000000  + 1.000000  + + V2  V4  V4  + V2  V4  + + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.220000	stackLen: 30 => V5  V5  + V3  a V3  a 1.000000  1.000000  + 1.000000  1.000000  + 1.000000  + + V2  V4  V4  + V2  V4  + + + / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.1 stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 6 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 7 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 8 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 9 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 10 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 11 	 best= 19.100000	stackLen: 30 => V4  1.000000  V2  V5  - / * empty: 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=18.8 stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 
iteration = 0 	 best= 18.800000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 
iteration = 1 	 best= 18.800000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 
iteration = 2 	 best= 18.800000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 
iteration = 3 	 best= 18.800000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 
iteration = 4 	 best= 18.800000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 
iteration = 5 	 best= 18.800000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 
BEST SOLUTION! cost=15.1 stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 0 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 1 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 2 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 3 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 4 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 5 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 6 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 7 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
iteration = 8 	 best= 15.100000	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  + V5  V2  V2  + - V5  V5  + - / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 
BEST SOLUTION! cost=14.2333 stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 14.233333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 14.233333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 14.233333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 14.233333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 14.233333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 14.233333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 14.233333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V2  V2  + - V5  V5  + V5  + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=10.7333 stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 10.733333	stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 88 53 13 8 36 15 80 92 55 63 
BEST SOLUTION! cost=46.7 stackLen: 30 => 1.000000  V3  V3  * r V3  V2  * 1.000000  V3  V1  - * * / * empty: 0 1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 46.700000	stackLen: 30 => 1.000000  V3  V3  * r V3  V2  * 1.000000  V3  V1  - * * / * empty: 0 1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=36.373 stackLen: 30 => V0  V0  * 1.000000  V4  V5  V3  * V2  * * / / empty: 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 36.373017	stackLen: 30 => V0  V0  * 1.000000  V4  V5  V3  * V2  * * / / empty: 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 36.373017	stackLen: 30 => V0  V0  * 1.000000  V4  V5  V3  * V2  * * / / empty: 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=35.175 stackLen: 30 => V5  1.000000  * V1  a V5  a V4  / * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 35.175000	stackLen: 30 => V5  1.000000  * V1  a V5  a V4  / * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=35 stackLen: 30 => 1.000000  V5  V0  1.000000  V4  / V1  + V1  - V2  - + * / empty: 0 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 35.000000	stackLen: 30 => 1.000000  V5  V0  1.000000  V4  / V1  + V1  - V2  - + * / empty: 0 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 35.000000	stackLen: 30 => 1.000000  V5  V0  1.000000  V4  / V1  + V1  - V2  - + * / empty: 0 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 2 	 best= 35.000000	stackLen: 30 => 1.000000  V5  V0  1.000000  V4  / V1  + V1  - V2  - + * / empty: 0 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 3 	 best= 35.000000	stackLen: 30 => 1.000000  V5  V0  1.000000  V4  / V1  + V1  - V2  - + * / empty: 0 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=30.142 stackLen: 30 => 1.000000  V1  * V4  * V1  * a r V5  a V3  V1  - / * empty: 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 30.141964	stackLen: 30 => 1.000000  V1  * V4  * V1  * a r V5  a V3  V1  - / * empty: 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 30.141964	stackLen: 30 => 1.000000  V1  * V4  * V1  * a r V5  a V3  V1  - / * empty: 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 30.141964	stackLen: 30 => 1.000000  V1  * V4  * V1  * a r V5  a V3  V1  - / * empty: 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 30.141964	stackLen: 30 => 1.000000  V1  * V4  * V1  * a r V5  a V3  V1  - / * empty: 0 1 1 1 0 0 1 1 0 0 1 0 0 1 0 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=28.5 stackLen: 30 => 1.000000  V1  * a r V5  - V4  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 
iteration = 0 	 best= 28.500000	stackLen: 30 => 1.000000  V1  * a r V5  - V4  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 
iteration = 1 	 best= 28.500000	stackLen: 30 => 1.000000  V1  * a r V5  - V4  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 
iteration = 2 	 best= 28.500000	stackLen: 30 => 1.000000  V1  * a r V5  - V4  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 
iteration = 3 	 best= 28.500000	stackLen: 30 => 1.000000  V1  * a r V5  - V4  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 
iteration = 4 	 best= 28.500000	stackLen: 30 => 1.000000  V1  * a r V5  - V4  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 
BEST SOLUTION! cost=23.8 stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 4 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 5 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 6 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 7 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 8 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 9 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 10 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 11 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 12 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 13 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 14 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 15 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 16 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 17 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 18 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 19 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 20 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 21 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 22 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 23 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 24 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 25 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 26 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 27 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 28 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 29 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 30 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 31 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 32 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 33 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 34 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 35 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 36 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 37 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 38 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 39 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 40 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 41 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 42 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 43 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 44 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 45 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 46 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 47 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 48 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
iteration = 49 	 best= 23.800000	stackLen: 30 => 1.000000  V5  V4  1.000000  * * V0  V1  * + * empty: 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.7333
stackLen: 30 => V4  1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  + + V5  V0  - V2  V2  V2  + + + V5  V5  V5  + + - / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((((((v5 + v5) + v5) - (((v2 + v2) + v2) + (v0 - v5)))/((1 + 1) + 1))/1) * 1) * 1) * v4)
Tempo de execucao: 1476.28 segundos
FIM
