Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 75 98 83 22 4 27 82 38 10 60 
BEST SOLUTION! cost=25.339 stackLen: 30 => 1.000000  1.000000  / V4  1.000000  1.000000  / e a r r 1.000000  V2  * / * / empty: 0 1 1 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 1 0 0 0 
iteration = 0 	 best= 25.339021	stackLen: 30 => 1.000000  1.000000  / V4  1.000000  1.000000  / e a r r 1.000000  V2  * / * / empty: 0 1 1 1 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 1 0 0 0 
BEST SOLUTION! cost=22.0258 stackLen: 30 => V3  a r 1.000000  / 1.000000  i / V5  1.000000  e r V5  / * / V3  * empty: 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 22.025797	stackLen: 30 => V3  a r 1.000000  / 1.000000  i / V5  1.000000  e r V5  / * / V3  * empty: 0 1 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=21.2 stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 21.200000	stackLen: 30 => 1.000000  V1  * 1.000000  V4  V0  V4  V4  V3  * a i i V3  a / * * * / * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 65 43 48 23 79 21 70 1 83 69 
BEST SOLUTION! cost=27.4 stackLen: 30 => V2  a i V4  a a i / r V2  * empty: 0 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 27.400000	stackLen: 30 => V2  a i V4  a a i / r V2  * empty: 0 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 1 
iteration = 1 	 best= 27.400000	stackLen: 30 => V2  a i V4  a a i / r V2  * empty: 0 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 1 
iteration = 2 	 best= 27.400000	stackLen: 30 => V2  a i V4  a a i / r V2  * empty: 0 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=22.9 stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 1 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 2 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 3 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 4 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 5 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 6 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 7 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 8 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 9 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 10 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 11 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 12 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 13 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 14 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 15 	 best= 22.900000	stackLen: 30 => 1.000000  V2  / V0  V2  a a r r V3  / * * empty: 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=21.9252 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.925236	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.925236	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.925236	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.925236	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.925236	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.925236	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.0793 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 10 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 11 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 12 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 13 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 14 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 15 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 16 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 17 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 18 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 19 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 20 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 21 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 22 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 23 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 24 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 25 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 26 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 27 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 28 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 29 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 30 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 31 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 32 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 33 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 34 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 35 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 36 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 37 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 38 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 39 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 40 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 41 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 42 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 43 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 44 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 45 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 46 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 47 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 48 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 49 	 best= 15.079283	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 63 71 90 29 14 82 9 27 50 45 
BEST SOLUTION! cost=28.661 stackLen: 30 => 1.000000  e V3  / 1.000000  1.000000  e r V2  * * * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 28.660979	stackLen: 30 => 1.000000  e V3  / 1.000000  1.000000  e r V2  * * * empty: 0 1 1 1 1 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=20.9 stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 2 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 3 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 4 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 5 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 6 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 7 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 8 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 9 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 10 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 11 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 12 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 13 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 14 	 best= 20.900000	stackLen: 30 => 1.000000  V1  1.000000  * * i V3  * V2  a r V1  a V1  / * * empty: 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=15.85 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.850000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  i - 1.000000  - / + V3  V1  V3  - + V1  * V2  a r V1  a V1  / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 52 77 24 85 18 90 55 60 16 86 
BEST SOLUTION! cost=42.0774 stackLen: 30 => V5  V0  a V1  * a r V0  V5  V5  a * * / * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 42.077361	stackLen: 30 => V5  V0  a V1  * a r V0  V5  V5  a * * / * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=40.3129 stackLen: 30 => 1.000000  1.000000  r e + r r V4  1.000000  V5  1.000000  e r * * 1.000000  * * * empty: 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 40.312935	stackLen: 30 => 1.000000  1.000000  r e + r r V4  1.000000  V5  1.000000  e r * * 1.000000  * * * empty: 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 40.312935	stackLen: 30 => 1.000000  1.000000  r e + r r V4  1.000000  V5  1.000000  e r * * 1.000000  * * * empty: 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 40.312935	stackLen: 30 => 1.000000  1.000000  r e + r r V4  1.000000  V5  1.000000  e r * * 1.000000  * * * empty: 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 40.312935	stackLen: 30 => 1.000000  1.000000  r e + r r V4  1.000000  V5  1.000000  e r * * 1.000000  * * * empty: 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=37.7 stackLen: 30 => V0  V4  i V0  a V3  / 1.000000  V0  * 1.000000  V2  / * i * - * empty: 0 0 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 
iteration = 0 	 best= 37.700000	stackLen: 30 => V0  V4  i V0  a V3  / 1.000000  V0  * 1.000000  V2  / * i * - * empty: 0 0 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 
iteration = 1 	 best= 37.700000	stackLen: 30 => V0  V4  i V0  a V3  / 1.000000  V0  * 1.000000  V2  / * i * - * empty: 0 0 0 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 
BEST SOLUTION! cost=32.5 stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 0 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 1 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 2 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 3 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 4 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 5 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 6 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 7 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 8 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 9 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 10 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 11 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 12 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
iteration = 13 	 best= 32.500000	stackLen: 30 => 1.000000  V1  / 1.000000  V0  V5  V2  - + 1.000000  * * * empty: 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 
BEST SOLUTION! cost=24.1 stackLen: 30 => 1.000000  1.000000  + V1  / 1.000000  1.000000  1.000000  * / V0  V5  V5  + V2  - + 1.000000  * * * V2  V5  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 24.100000	stackLen: 30 => 1.000000  1.000000  + V1  / 1.000000  1.000000  1.000000  * / V0  V5  V5  + V2  - + 1.000000  * * * V2  V5  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 24.100000	stackLen: 30 => 1.000000  1.000000  + V1  / 1.000000  1.000000  1.000000  * / V0  V5  V5  + V2  - + 1.000000  * * * V2  V5  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=21.8829 stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 21.882857	stackLen: 30 => V2  V3  1.000000  a V1  a r V1  V1  * V3  a r / V5  / / / + * empty: 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=20.9371 stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 0 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 1 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 2 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 3 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 4 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 5 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 6 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 7 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 8 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 9 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 10 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 11 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 12 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 13 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 14 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 15 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 16 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 17 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 18 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 19 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 20 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 21 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 22 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
iteration = 23 	 best= 20.937143	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
BEST SOLUTION! cost=20.3251 stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.325106	stackLen: 30 => V2  V3  1.000000  1.000000  + a V1  V2  + a r V1  V1  + V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=20.2419 stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 20.241873	stackLen: 30 => V2  V3  1.000000  1.000000  + r V1  V2  + a r V1  V1  - V1  + V1  * V3  a r / V5  / / / + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 18 6 33 66 65 38 27 3 42 56 
BEST SOLUTION! cost=36.9 stackLen: 30 => V3  a 1.000000  / a r i V0  a V3  V3  * * * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 36.900000	stackLen: 30 => V3  a 1.000000  / a r i V0  a V3  V3  * * * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=24.5 stackLen: 30 => 1.000000  V1  1.000000  * * 1.000000  1.000000  V4  V1  - / / * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 24.500000	stackLen: 30 => 1.000000  V1  1.000000  * * 1.000000  1.000000  V4  V1  - / / * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 24.500000	stackLen: 30 => 1.000000  V1  1.000000  * * 1.000000  1.000000  V4  V1  - / / * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 24.500000	stackLen: 30 => 1.000000  V1  1.000000  * * 1.000000  1.000000  V4  V1  - / / * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=21.3626 stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 6 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 7 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 8 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 9 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 10 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 11 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 12 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 13 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 14 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 15 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 16 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 17 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 18 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 19 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 20 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 21 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 22 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 23 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 24 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 25 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 26 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 27 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 28 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 29 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 30 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 31 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 32 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 33 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 34 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 35 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 36 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 37 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 38 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 39 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 40 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 41 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 42 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 43 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 44 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 45 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 46 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 47 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 48 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
iteration = 49 	 best= 21.362583	stackLen: 30 => V0  1.000000  * a 1.000000  e * r V1  1.000000  1.000000  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=15.0793
stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  + + * V2  * V0  V1  V2  V2  + + a r V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
trueStackSize=23
printSolution2: (((v3/\sqrt{{((v2 + v2) + v1)^2}}) * v0) * (v2 * (((1 + 1) + 1) * (1/1))))
Tempo de execucao: 964.391 segundos
FIM
