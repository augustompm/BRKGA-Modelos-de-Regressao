Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 58 10 66 8 76 13 21 96 57 59 
BEST SOLUTION! cost=24.9 stackLen: 30 => V3  1.000000  V5  1.000000  V1  * + / * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 24.900000	stackLen: 30 => V3  1.000000  V5  1.000000  V1  * + / * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 24.900000	stackLen: 30 => V3  1.000000  V5  1.000000  V1  * + / * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 24.900000	stackLen: 30 => V3  1.000000  V5  1.000000  V1  * + / * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=24.3 stackLen: 30 => 1.000000  V4  1.000000  r * * 1.000000  V0  / V3  i V5  - - * empty: 0 0 1 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 
iteration = 0 	 best= 24.300000	stackLen: 30 => 1.000000  V4  1.000000  r * * 1.000000  V0  / V3  i V5  - - * empty: 0 0 1 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 
iteration = 1 	 best= 24.300000	stackLen: 30 => 1.000000  V4  1.000000  r * * 1.000000  V0  / V3  i V5  - - * empty: 0 0 1 1 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 0 1 0 1 
BEST SOLUTION! cost=24 stackLen: 30 => 1.000000  1.000000  V0  * V1  i * * empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 
iteration = 0 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  V0  * V1  i * * empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 
iteration = 1 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  V0  * V1  i * * empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 
BEST SOLUTION! cost=21.1777 stackLen: 30 => V3  V1  + a V4  V1  - V4  V4  V0  1.000000  1.000000  / 1.000000  / * * * * / empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 21.177731	stackLen: 30 => V3  V1  + a V4  V1  - V4  V4  V0  1.000000  1.000000  / 1.000000  / * * * * / empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 21.177731	stackLen: 30 => V3  V1  + a V4  V1  - V4  V4  V0  1.000000  1.000000  / 1.000000  / * * * * / empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 21.177731	stackLen: 30 => V3  V1  + a V4  V1  - V4  V4  V0  1.000000  1.000000  / 1.000000  / * * * * / empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 21.177731	stackLen: 30 => V3  V1  + a V4  V1  - V4  V4  V0  1.000000  1.000000  / 1.000000  / * * * * / empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 4 	 best= 21.177731	stackLen: 30 => V3  V1  + a V4  V1  - V4  V4  V0  1.000000  1.000000  / 1.000000  / * * * * / empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 5 	 best= 21.177731	stackLen: 30 => V3  V1  + a V4  V1  - V4  V4  V0  1.000000  1.000000  / 1.000000  / * * * * / empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=19.794 stackLen: 30 => V3  V1  + a V4  V4  - V1  - V4  V4  V0  1.000000  1.000000  + 1.000000  / 1.000000  / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 19.794026	stackLen: 30 => V3  V1  + a V4  V4  - V1  - V4  V4  V0  1.000000  1.000000  + 1.000000  / 1.000000  / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 19.794026	stackLen: 30 => V3  V1  + a V4  V4  - V1  - V4  V4  V0  1.000000  1.000000  + 1.000000  / 1.000000  / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 19.794026	stackLen: 30 => V3  V1  + a V4  V4  - V1  - V4  V4  V0  1.000000  1.000000  + 1.000000  / 1.000000  / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 19.794026	stackLen: 30 => V3  V1  + a V4  V4  - V1  - V4  V4  V0  1.000000  1.000000  + 1.000000  / 1.000000  / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 19.794026	stackLen: 30 => V3  V1  + a V4  V4  - V1  - V4  V4  V0  1.000000  1.000000  + 1.000000  / 1.000000  / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 19.794026	stackLen: 30 => V3  V1  + a V4  V4  - V1  - V4  V4  V0  1.000000  1.000000  + 1.000000  / 1.000000  / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=18.4094 stackLen: 30 => V3  V1  + a V4  V2  - V4  - V1  - V4  V4  V0  1.000000  1.000000  r 1.000000  / 1.000000  1.000000  / / / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.409406	stackLen: 30 => V3  V1  + a V4  V2  - V4  - V1  - V4  V4  V0  1.000000  1.000000  r 1.000000  / 1.000000  1.000000  / / / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.409406	stackLen: 30 => V3  V1  + a V4  V2  - V4  - V1  - V4  V4  V0  1.000000  1.000000  r 1.000000  / 1.000000  1.000000  / / / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.409406	stackLen: 30 => V3  V1  + a V4  V2  - V4  - V1  - V4  V4  V0  1.000000  1.000000  r 1.000000  / 1.000000  1.000000  / / / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.409406	stackLen: 30 => V3  V1  + a V4  V2  - V4  - V1  - V4  V4  V0  1.000000  1.000000  r 1.000000  / 1.000000  1.000000  / / / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.409406	stackLen: 30 => V3  V1  + a V4  V2  - V4  - V1  - V4  V4  V0  1.000000  1.000000  r 1.000000  / 1.000000  1.000000  / / / * * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.7 stackLen: 30 => V4  V4  V2  i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 15.700000	stackLen: 30 => V4  V4  V2  i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 15.700000	stackLen: 30 => V4  V4  V2  i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 15.700000	stackLen: 30 => V4  V4  V2  i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 15.700000	stackLen: 30 => V4  V4  V2  i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 15.700000	stackLen: 30 => V4  V4  V2  i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 15.700000	stackLen: 30 => V4  V4  V2  i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 1 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=10.5 stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 15 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 16 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 17 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 18 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 19 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 20 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 21 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 22 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 23 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 24 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 25 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 26 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 27 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 28 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 29 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 30 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 31 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 32 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 33 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 34 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 35 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 36 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 37 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 38 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 39 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 40 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 41 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 42 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 43 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 44 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 45 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 46 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 47 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 48 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 49 	 best= 10.500000	stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 43 63 82 45 91 56 57 44 29 40 
BEST SOLUTION! cost=28 stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 0 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 1 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 2 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 3 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 4 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 5 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 6 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
iteration = 7 	 best= 28.000000	stackLen: 30 => V3  1.000000  1.000000  V2  * / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 1 
BEST SOLUTION! cost=26.7238 stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 26.723760	stackLen: 30 => V3  V3  + 1.000000  1.000000  1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.9757 stackLen: 30 => V3  V5  V5  V5  - - V3  - + 1.000000  1.000000  1.000000  - 1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 25.975736	stackLen: 30 => V3  V5  V5  V5  - - V3  - + 1.000000  1.000000  1.000000  - 1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 25.975736	stackLen: 30 => V3  V5  V5  V5  - - V3  - + 1.000000  1.000000  1.000000  - 1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 25.975736	stackLen: 30 => V3  V5  V5  V5  - - V3  - + 1.000000  1.000000  1.000000  - 1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 25.975736	stackLen: 30 => V3  V5  V5  V5  - - V3  - + 1.000000  1.000000  1.000000  - 1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 25.975736	stackLen: 30 => V3  V5  V5  V5  - - V3  - + 1.000000  1.000000  1.000000  - 1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 25.975736	stackLen: 30 => V3  V5  V5  V5  - - V3  - + 1.000000  1.000000  1.000000  - 1.000000  + + 1.000000  * r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=23.9839 stackLen: 30 => V1  V1  V3  V3  + V5  + - V5  V5  - - V3  - + 1.000000  1.000000  1.000000  1.000000  + + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.983870	stackLen: 30 => V1  V1  V3  V3  + V5  + - V5  V5  - - V3  - + 1.000000  1.000000  1.000000  1.000000  + + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.983870	stackLen: 30 => V1  V1  V3  V3  + V5  + - V5  V5  - - V3  - + 1.000000  1.000000  1.000000  1.000000  + + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 23.983870	stackLen: 30 => V1  V1  V3  V3  + V5  + - V5  V5  - - V3  - + 1.000000  1.000000  1.000000  1.000000  + + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 23.983870	stackLen: 30 => V1  V1  V3  V3  + V5  + - V5  V5  - - V3  - + 1.000000  1.000000  1.000000  1.000000  + + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 23.983870	stackLen: 30 => V1  V1  V3  V3  + V5  + - V5  V5  - - V3  - + 1.000000  1.000000  1.000000  1.000000  + + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 23.983870	stackLen: 30 => V1  V1  V3  V3  + V5  + - V5  V5  - - V3  - + 1.000000  1.000000  1.000000  1.000000  + + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=20.25 stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.250000	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  i 1.000000  1.000000  + + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20.0436 stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 20.043589	stackLen: 30 => V2  V1  V4  V3  + - + V3  V5  V5  - - V3  - + 1.000000  e 1.000000  1.000000  - + 1.000000  + r 1.000000  V2  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 69 97 48 98 57 71 93 51 92 88 
BEST SOLUTION! cost=32.9651 stackLen: 30 => V4  1.000000  V2  V3  a V2  i / V5  * * * * empty: 0 1 0 0 1 1 0 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 32.965090	stackLen: 30 => V4  1.000000  V2  V3  a V2  i / V5  * * * * empty: 0 1 0 0 1 1 0 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=28.9 stackLen: 30 => V3  a r V0  a V0  V3  a V4  V3  * - V2  V0  * * i * / / empty: 0 0 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.900000	stackLen: 30 => V3  a r V0  a V0  V3  a V4  V3  * - V2  V0  * * i * / / empty: 0 0 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.900000	stackLen: 30 => V3  a r V0  a V0  V3  a V4  V3  * - V2  V0  * * i * / / empty: 0 0 1 0 0 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.9 stackLen: 30 => 1.000000  V3  1.000000  V0  a r i 1.000000  / 1.000000  / * * * empty: 0 1 1 1 0 0 1 0 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 26.900000	stackLen: 30 => 1.000000  V3  1.000000  V0  a r i 1.000000  / 1.000000  / * * * empty: 0 1 1 1 0 0 1 0 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 26.900000	stackLen: 30 => 1.000000  V3  1.000000  V0  a r i 1.000000  / 1.000000  / * * * empty: 0 1 1 1 0 0 1 0 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 26.900000	stackLen: 30 => 1.000000  V3  1.000000  V0  a r i 1.000000  / 1.000000  / * * * empty: 0 1 1 1 0 0 1 0 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 26.900000	stackLen: 30 => 1.000000  V3  1.000000  V0  a r i 1.000000  / 1.000000  / * * * empty: 0 1 1 1 0 0 1 0 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=24.0202 stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 0 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 1 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 2 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 3 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 4 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 5 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 6 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 7 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 8 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
iteration = 9 	 best= 24.020209	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V1  * / empty: 0 1 1 1 0 1 1 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 1 
BEST SOLUTION! cost=23.6311 stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 
iteration = 0 	 best= 23.631124	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 
iteration = 1 	 best= 23.631124	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 
iteration = 2 	 best= 23.631124	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 
iteration = 3 	 best= 23.631124	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 
iteration = 4 	 best= 23.631124	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 
iteration = 5 	 best= 23.631124	stackLen: 30 => V0  a 1.000000  / a r V2  a * a a a e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 
BEST SOLUTION! cost=23.1709 stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 23.170883	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V0  V0  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.9624 stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 22.962407	stackLen: 30 => V0  a 1.000000  1.000000  / 1.000000  + / a r V2  a * a a r e V0  V4  V3  V1  - + + V1  * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 93 1 75 39 57 67 45 59 85 18 
BEST SOLUTION! cost=25.7 stackLen: 30 => 1.000000  V1  V0  a V0  / V0  V4  + * * * V0  * empty: 0 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 0 0 
iteration = 0 	 best= 25.700000	stackLen: 30 => 1.000000  V1  V0  a V0  / V0  V4  + * * * V0  * empty: 0 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 0 0 
iteration = 1 	 best= 25.700000	stackLen: 30 => 1.000000  V1  V0  a V0  / V0  V4  + * * * V0  * empty: 0 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 0 0 
iteration = 2 	 best= 25.700000	stackLen: 30 => 1.000000  V1  V0  a V0  / V0  V4  + * * * V0  * empty: 0 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 1 0 0 
BEST SOLUTION! cost=24.7 stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 24.700000	stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
iteration = 1 	 best= 24.700000	stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
iteration = 2 	 best= 24.700000	stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
iteration = 3 	 best= 24.700000	stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
iteration = 4 	 best= 24.700000	stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
iteration = 5 	 best= 24.700000	stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
iteration = 6 	 best= 24.700000	stackLen: 30 => V3  a 1.000000  V3  / / V3  a r V1  * * i 1.000000  * V2  * empty: 0 1 0 1 0 0 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 0 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=20.7902 stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  V3  a i r V5  V5  + V1  * * * i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 0 	 best= 20.790183	stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  V3  a i r V5  V5  + V1  * * * i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 1 	 best= 20.790183	stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  V3  a i r V5  V5  + V1  * * * i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 2 	 best= 20.790183	stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  V3  a i r V5  V5  + V1  * * * i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 3 	 best= 20.790183	stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  V3  a i r V5  V5  + V1  * * * i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 4 	 best= 20.790183	stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  V3  a i r V5  V5  + V1  * * * i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 5 	 best= 20.790183	stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  V3  a i r V5  V5  + V1  * * * i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
BEST SOLUTION! cost=20.5874 stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  1.000000  V5  / a i r V5  V5  + V1  * * / i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.587418	stackLen: 30 => V3  V3  + a 1.000000  1.000000  * e / 1.000000  1.000000  V5  / a i r V5  V5  + V1  * * / i 1.000000  * V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.9113 stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 11.911281	stackLen: 30 => V1  V4  + a V3  V3  * / 1.000000  1.000000  V5  V0  1.000000  * * * * / empty: 0 1 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 62 56 78 38 3 99 41 67 71 97 
BEST SOLUTION! cost=35.9 stackLen: 30 => V3  a r V4  V4  a 1.000000  1.000000  a - * * / empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 1 
iteration = 0 	 best= 35.900000	stackLen: 30 => V3  a r V4  V4  a 1.000000  1.000000  a - * * / empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 1 
BEST SOLUTION! cost=31.6362 stackLen: 30 => V4  1.000000  e i r 1.000000  1.000000  V5  * * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 31.636245	stackLen: 30 => V4  1.000000  e i r 1.000000  1.000000  V5  * * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=26.7 stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 26.700000	stackLen: 30 => V4  V2  a r + 1.000000  i V0  a r V4  1.000000  r * - * * empty: 0 0 0 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25.4 stackLen: 30 => V4  V2  a r + 1.000000  1.000000  1.000000  + / i V0  V0  - a r / V4  + 1.000000  1.000000  * a * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 25.400000	stackLen: 30 => V4  V2  a r + 1.000000  1.000000  1.000000  + / i V0  V0  - a r / V4  + 1.000000  1.000000  * a * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=22 stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 1 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 2 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 3 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 4 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 5 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 6 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 7 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 8 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 9 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 10 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 11 	 best= 22.000000	stackLen: 30 => 1.000000  1.000000  V5  * V3  V2  i V2  - - * * empty: 0 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=17.9 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V0  i V2  - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.6 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V0  i V0  V0  - V2  + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=15 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 15.000000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * / 1.000000  V5  * V3  V3  + V3  + V0  i V4  V2  - V2  V2  - + - - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.5
stackLen: 30 => V4  V4  V4  + V4  + V2  V5  + i V4  a r V1  V4  - V5  V3  V1  - + + - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
trueStackSize=26
printSolution2: (((((((v1 - v3) + v5) + (v4 - v1)) - \sqrt{{v4^2}}) - ((v5 + v2))) - (v4 + (v4 + v4))) * v4)
Tempo de execucao: 1185.03 segundos
FIM
