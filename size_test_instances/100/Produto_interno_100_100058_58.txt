Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 21 31 69 93 47 72 91 50 49 10 
BEST SOLUTION! cost=36.5902 stackLen: 30 => V4  V5  - V1  a V2  a / e V3  * V3  V3  + * V5  a V0  * / * empty: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 36.590165	stackLen: 30 => V4  V5  - V1  a V2  a / e V3  * V3  V3  + * V5  a V0  * / * empty: 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.519 stackLen: 30 => V1  a 1.000000  / V0  V1  V2  * 1.000000  V3  / * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 30.519048	stackLen: 30 => V1  a 1.000000  / V0  V1  V2  * 1.000000  V3  / * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 30.519048	stackLen: 30 => V1  a 1.000000  / V0  V1  V2  * 1.000000  V3  / * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 30.519048	stackLen: 30 => V1  a 1.000000  / V0  V1  V2  * 1.000000  V3  / * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 0 0 0 0 1 
iteration = 3 	 best= 30.519048	stackLen: 30 => V1  a 1.000000  / V0  V1  V2  * 1.000000  V3  / * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=24.5 stackLen: 30 => 1.000000  V0  a r V4  1.000000  * + 1.000000  V1  / * * empty: 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 24.500000	stackLen: 30 => 1.000000  V0  a r V4  1.000000  * + 1.000000  V1  / * * empty: 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=24.2 stackLen: 30 => V4  V5  V2  - i - V0  - V4  * empty: 0 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0 1 
iteration = 0 	 best= 24.200000	stackLen: 30 => V4  V5  V2  - i - V0  - V4  * empty: 0 1 0 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0 1 
BEST SOLUTION! cost=21.6 stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  * V4  V0  + - V1  * * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 0 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  * V4  V0  + - V1  * * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 1 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  * V4  V0  + - V1  * * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 2 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  * V4  V0  + - V1  * * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 3 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  * V4  V0  + - V1  * * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 4 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  * V4  V0  + - V1  * * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 5 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  * V4  V0  + - V1  * * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 
BEST SOLUTION! cost=19.15 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 19.150000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + V3  / / V4  V0  + - V1  * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.9667 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V3  V3  + / / V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.966667	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V3  V3  + / / V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.966667	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V3  V3  + / / V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.966667	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V3  V3  + / / V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.966667	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V3  V3  + / / V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.966667	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V3  V3  + / / V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.966667	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V3  V3  + / / V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.6333 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.633333	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.633333	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.633333	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.633333	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.633333	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.633333	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.633333	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.2303 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.230253	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  e i + V2  V3  V3  + V3  V3  V3  + + - + / * V4  V0  + - V1  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.4173 stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.417318	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a * V2  V5  V3  + V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.8739 stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.873929	stackLen: 30 => 1.000000  1.000000  V1  1.000000  1.000000  1.000000  e a - V4  1.000000  V1  * V3  V3  V3  + + - + / * V4  V0  + - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 6 12 25 98 74 36 33 37 54 46 
BEST SOLUTION! cost=46.5418 stackLen: 30 => V1  V3  a V5  V0  a r V2  * * / * empty: 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 46.541837	stackLen: 30 => V1  V3  a V5  V0  a r V2  * * / * empty: 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 1 	 best= 46.541837	stackLen: 30 => V1  V3  a V5  V0  a r V2  * * / * empty: 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 2 	 best= 46.541837	stackLen: 30 => V1  V3  a V5  V0  a r V2  * * / * empty: 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 3 	 best= 46.541837	stackLen: 30 => V1  V3  a V5  V0  a r V2  * * / * empty: 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=42.4 stackLen: 30 => V4  V5  * 1.000000  r 1.000000  / * empty: 0 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 
iteration = 0 	 best= 42.400000	stackLen: 30 => V4  V5  * 1.000000  r 1.000000  / * empty: 0 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 
iteration = 1 	 best= 42.400000	stackLen: 30 => V4  V5  * 1.000000  r 1.000000  / * empty: 0 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 
BEST SOLUTION! cost=40.7 stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 6 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 7 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 8 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 9 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 10 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 11 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 12 	 best= 40.700000	stackLen: 30 => V4  V4  a V5  V4  * a a r r V5  / * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=34.0493 stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 34.049323	stackLen: 30 => V4  V4  V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=28.2228 stackLen: 30 => V2  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 28.222753	stackLen: 30 => V2  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 28.222753	stackLen: 30 => V2  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 28.222753	stackLen: 30 => V2  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 28.222753	stackLen: 30 => V2  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 28.222753	stackLen: 30 => V2  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 28.222753	stackLen: 30 => V2  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=24.3981 stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 24.398112	stackLen: 30 => V3  V4  - V0  V4  V1  + - V4  + + V4  a V5  V5  + V5  V0  + + V4  * a a r r V5  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 29 77 84 11 15 17 52 60 26 89 
BEST SOLUTION! cost=39.1813 stackLen: 30 => V3  V3  * V2  a r * V1  a V1  / a i V5  V0  - * * empty: 0 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 39.181250	stackLen: 30 => V3  V3  * V2  a r * V1  a V1  / a i V5  V0  - * * empty: 0 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 1 0 0 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=30.7 stackLen: 30 => V0  V0  i i i V0  1.000000  V0  a / V5  V2  V4  V5  - - - / * * * empty: 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 30.700000	stackLen: 30 => V0  V0  i i i V0  1.000000  V0  a / V5  V2  V4  V5  - - - / * * * empty: 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 30.700000	stackLen: 30 => V0  V0  i i i V0  1.000000  V0  a / V5  V2  V4  V5  - - - / * * * empty: 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 30.700000	stackLen: 30 => V0  V0  i i i V0  1.000000  V0  a / V5  V2  V4  V5  - - - / * * * empty: 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 30.700000	stackLen: 30 => V0  V0  i i i V0  1.000000  V0  a / V5  V2  V4  V5  - - - / * * * empty: 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 30.700000	stackLen: 30 => V0  V0  i i i V0  1.000000  V0  a / V5  V2  V4  V5  - - - / * * * empty: 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 30.700000	stackLen: 30 => V0  V0  i i i V0  1.000000  V0  a / V5  V2  V4  V5  - - - / * * * empty: 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.5 stackLen: 30 => V0  V0  i i i V0  1.000000  1.000000  1.000000  1.000000  / + * V0  a * V2  V2  V4  1.000000  V5  * - - - / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 30.500000	stackLen: 30 => V0  V0  i i i V0  1.000000  1.000000  1.000000  1.000000  / + * V0  a * V2  V2  V4  1.000000  V5  * - - - / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 30.500000	stackLen: 30 => V0  V0  i i i V0  1.000000  1.000000  1.000000  1.000000  / + * V0  a * V2  V2  V4  1.000000  V5  * - - - / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 30.500000	stackLen: 30 => V0  V0  i i i V0  1.000000  1.000000  1.000000  1.000000  / + * V0  a * V2  V2  V4  1.000000  V5  * - - - / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.9972 stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 5 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 6 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 7 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 8 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 9 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 10 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 11 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 12 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 13 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 14 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 15 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 16 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 17 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 18 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 19 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 20 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 21 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 22 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 23 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 24 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 25 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 26 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 27 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 28 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 29 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 30 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 31 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 32 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 33 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 34 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 35 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 36 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 37 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 38 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 39 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 40 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 41 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 42 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 43 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 44 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 45 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 46 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 47 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 48 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
iteration = 49 	 best= 26.997242	stackLen: 30 => V5  a V0  V1  - 1.000000  * / V4  V2  * V3  V4  - * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 0 1 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 35 11 78 63 30 60 6 43 34 66 
BEST SOLUTION! cost=33.6 stackLen: 30 => V4  1.000000  V2  V4  + * - a a i 1.000000  * r empty: 0 1 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 
iteration = 0 	 best= 33.600000	stackLen: 30 => V4  1.000000  V2  V4  + * - a a i 1.000000  * r empty: 0 1 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 
iteration = 1 	 best= 33.600000	stackLen: 30 => V4  1.000000  V2  V4  + * - a a i 1.000000  * r empty: 0 1 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 
iteration = 2 	 best= 33.600000	stackLen: 30 => V4  1.000000  V2  V4  + * - a a i 1.000000  * r empty: 0 1 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 1 
BEST SOLUTION! cost=28.9563 stackLen: 30 => V4  V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  V2  / / / - * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 28.956317	stackLen: 30 => V4  V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  V2  / / / - * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 28.956317	stackLen: 30 => V4  V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  V2  / / / - * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 28.956317	stackLen: 30 => V4  V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  V2  / / / - * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 28.956317	stackLen: 30 => V4  V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  V2  / / / - * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 28.956317	stackLen: 30 => V4  V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  V2  / / / - * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 
iteration = 5 	 best= 28.956317	stackLen: 30 => V4  V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  V2  / / / - * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=28.5662 stackLen: 30 => V4  V4  + V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  + 1.000000  V2  / / / - * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 28.566210	stackLen: 30 => V4  V4  + V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  + 1.000000  V2  / / / - * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 28.566210	stackLen: 30 => V4  V4  + V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  + 1.000000  V2  / / / - * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 28.566210	stackLen: 30 => V4  V4  + V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  + 1.000000  V2  / / / - * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 28.566210	stackLen: 30 => V4  V4  + V5  + V1  1.000000  e 1.000000  - a 1.000000  1.000000  + 1.000000  V2  / / / - * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=26.7756 stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V2  - / / * empty: 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 26.775561	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V2  - / / * empty: 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 26.775561	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V2  - / / * empty: 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 26.775561	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V2  - / / * empty: 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 26.775561	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V2  - / / * empty: 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 4 	 best= 26.775561	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V2  - / / * empty: 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 5 	 best= 26.775561	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V2  - / / * empty: 0 0 0 0 0 1 0 1 1 1 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=24.7107 stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V4  + V2  - / / * empty: 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.710657	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V4  + V2  - / / * empty: 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.710657	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V4  + V2  - / / * empty: 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.710657	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V4  + V2  - / / * empty: 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.710657	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V4  + V2  - / / * empty: 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.710657	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V4  + V2  - / / * empty: 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.710657	stackLen: 30 => V5  V1  - 1.000000  e r a 1.000000  1.000000  * i V4  V4  + V2  - / / * empty: 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.2849 stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.284873	stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 50 38 5 11 63 19 18 27 13 3 
BEST SOLUTION! cost=26.9133 stackLen: 30 => V5  a V5  V2  V5  V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 26.913327	stackLen: 30 => V5  a V5  V2  V5  V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 26.913327	stackLen: 30 => V5  a V5  V2  V5  V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 26.913327	stackLen: 30 => V5  a V5  V2  V5  V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 26.913327	stackLen: 30 => V5  a V5  V2  V5  V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 4 	 best= 26.913327	stackLen: 30 => V5  a V5  V2  V5  V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
iteration = 5 	 best= 26.913327	stackLen: 30 => V5  a V5  V2  V5  V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=20.2337 stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 24 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 25 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 26 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 27 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 28 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 29 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 30 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 31 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
iteration = 32 	 best= 20.233744	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + i i 1.000000  r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=19.8522 stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 19.852162	stackLen: 30 => V5  a V5  V2  V5  V5  - V4  V2  - + 1.000000  e 1.000000  1.000000  * 1.000000  * i 1.000000  + / r e V0  / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14.2849
stackLen: 30 => V5  V1  V1  + - 1.000000  1.000000  * e r e 1.000000  1.000000  1.000000  - + 1.000000  V0  / * i V3  V4  - V2  - + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((v2 - (v4 - v3)) + (((v0/1) * ((1 - 1) + 1))))/\exp(\sqrt{\exp((1 * 1))})) * ((v1 + v1) - v5))
Tempo de execucao: 1123.68 segundos
FIM
