Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 100 1
1.00	8.00	-7.00	4.00	13.04
9.00	7.00	-1.00	-1.00	2.00
10.00	6.00	-2.00	-10.00	8.94
8.00	-5.00	7.00	7.00	13.00
-1.00	10.00	-1.00	-9.00	13.60
-9.00	0.00	5.00	-6.00	14.21
8.00	-4.00	-1.00	-1.00	12.00
-5.00	-6.00	3.00	5.00	2.24
-3.00	0.00	-9.00	-1.00	8.54
10.00	-3.00	3.00	5.00	13.15
4.00	0.00	-7.00	-8.00	4.12
3.00	1.00	-1.00	9.00	10.20
-1.00	4.00	-4.00	5.00	10.30
-9.00	-2.00	-3.00	-6.00	7.62
-2.00	5.00	3.00	-8.00	13.04
-10.00	-1.00	2.00	1.00	9.06
8.00	10.00	-8.00	-6.00	2.83
-1.00	7.00	-6.00	-9.00	8.54
4.00	10.00	-7.00	5.00	13.42
-9.00	6.00	-1.00	-8.00	16.55
-9.00	0.00	5.00	-7.00	15.00
-2.00	6.00	5.00	-9.00	16.12
7.00	5.00	3.00	1.00	2.83
9.00	7.00	-4.00	-5.00	2.24
4.00	3.00	-3.00	8.00	11.05
-1.00	4.00	-4.00	-2.00	5.39
-9.00	-9.00	8.00	1.00	7.00
-1.00	1.00	1.00	-1.00	2.83
-4.00	-6.00	5.00	2.00	3.61
-7.00	1.00	5.00	-5.00	12.81
1.00	-8.00	-2.00	4.00	10.82
-10.00	-3.00	5.00	-6.00	13.04
1.00	-9.00	3.00	10.00	12.21
-4.00	0.00	2.00	-4.00	7.21
0.00	10.00	-1.00	10.00	14.87
4.00	5.00	-9.00	-1.00	8.06
3.00	-6.00	10.00	-9.00	21.02
2.00	-4.00	5.00	5.00	6.00
4.00	5.00	-9.00	7.00	16.03
2.00	1.00	-5.00	-2.00	3.16
9.00	8.00	6.00	1.00	5.10
10.00	-6.00	4.00	-9.00	20.62
-8.00	6.00	8.00	3.00	14.87
7.00	-6.00	-1.00	-9.00	15.26
1.00	-9.00	-7.00	3.00	14.14
-9.00	1.00	-3.00	0.00	10.44
5.00	4.00	5.00	-1.00	6.08
9.00	-1.00	1.00	-5.00	11.66
-7.00	-3.00	2.00	-7.00	9.85
-1.00	6.00	1.00	0.00	7.07
-10.00	0.00	-4.00	3.00	12.21
2.00	-10.00	-4.00	7.00	16.28
9.00	0.00	9.00	-2.00	14.21
-6.00	2.00	2.00	6.00	8.94
3.00	-1.00	1.00	10.00	9.85
7.00	9.00	-2.00	-4.00	2.83
5.00	-1.00	-8.00	10.00	18.97
-7.00	3.00	-10.00	-9.00	10.05
-7.00	1.00	0.00	-9.00	12.04
-5.00	-10.00	-4.00	5.00	10.30
-5.00	1.00	-8.00	-8.00	6.00
9.00	2.00	1.00	2.00	7.07
-2.00	1.00	-7.00	4.00	11.40
7.00	1.00	-4.00	-10.00	8.49
4.00	-8.00	6.00	9.00	12.37
2.00	0.00	4.00	0.00	4.47
-4.00	6.00	-8.00	-4.00	10.77
8.00	7.00	-2.00	-6.00	4.12
-3.00	-9.00	3.00	-8.00	12.53
1.00	-2.00	7.00	-4.00	11.40
-3.00	-4.00	6.00	0.00	6.08
-2.00	-6.00	3.00	1.00	4.47
-3.00	-3.00	7.00	3.00	4.00
5.00	-8.00	10.00	0.00	16.40
10.00	-4.00	-10.00	-1.00	16.64
-9.00	-5.00	-7.00	6.00	13.60
7.00	-5.00	-6.00	-4.00	12.17
-3.00	4.00	2.00	9.00	9.90
7.00	3.00	8.00	-1.00	9.85
8.00	1.00	-5.00	6.00	13.04
0.00	-10.00	-4.00	6.00	14.14
8.00	10.00	-1.00	-6.00	5.39
3.00	2.00	-4.00	-5.00	1.41
8.00	-4.00	10.00	4.00	13.42
-4.00	1.00	0.00	2.00	5.39
-2.00	4.00	0.00	2.00	6.32
9.00	0.00	2.00	8.00	10.82
8.00	-5.00	8.00	-4.00	17.69
-7.00	9.00	0.00	-3.00	16.28
0.00	0.00	-10.00	-7.00	3.00
9.00	-3.00	2.00	-1.00	12.37
-9.00	6.00	-7.00	7.00	20.52
2.00	-5.00	7.00	4.00	7.62
3.00	7.00	8.00	8.00	4.00
5.00	-6.00	-2.00	4.00	12.53
-6.00	4.00	-5.00	-9.00	10.77
5.00	5.00	8.00	-8.00	16.00
-7.00	8.00	-10.00	8.00	23.43
4.00	-2.00	6.00	-3.00	10.82
6.00	1.00	4.00	-8.00	13.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 77 43 61 51 18 24 23 13 88 56 
BEST SOLUTION! cost=7.30798 stackLen: 30 => V3  V2  - 1.000000  1.000000  * V0  1.000000  V0  / - * - empty: 0 0 1 0 0 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 7.307982	stackLen: 30 => V3  V2  - 1.000000  1.000000  * V0  1.000000  V0  / - * - empty: 0 0 1 0 0 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=5.96077 stackLen: 30 => 1.000000  V3  a r 1.000000  1.000000  / * 1.000000  * / 1.000000  r * empty: 0 1 1 0 0 1 0 0 1 0 1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 5.960768	stackLen: 30 => 1.000000  V3  a r 1.000000  1.000000  / * 1.000000  * / 1.000000  r * empty: 0 1 1 0 0 1 0 0 1 0 1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 5.960768	stackLen: 30 => 1.000000  V3  a r 1.000000  1.000000  / * 1.000000  * / 1.000000  r * empty: 0 1 1 0 0 1 0 0 1 0 1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 5.960768	stackLen: 30 => 1.000000  V3  a r 1.000000  1.000000  / * 1.000000  * / 1.000000  r * empty: 0 1 1 0 0 1 0 0 1 0 1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=4.31406 stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 1 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 2 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 3 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 4 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 5 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 6 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 7 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 8 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 9 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 10 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 11 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 12 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 13 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 14 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 15 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 16 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 17 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 18 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 19 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 20 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 21 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 22 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 23 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 24 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
iteration = 25 	 best= 4.314057	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  e - * * empty: 0 0 1 0 1 1 1 0 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=4.30321 stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 4.303208	stackLen: 30 => V3  a r 1.000000  1.000000  1.000000  / 1.000000  + 1.000000  1.000000  + r * r i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=3.84075 stackLen: 30 => V2  V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 3.840749	stackLen: 30 => V2  V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 3.840749	stackLen: 30 => V2  V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 3.840749	stackLen: 30 => V2  V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 3.840749	stackLen: 30 => V2  V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 3.840749	stackLen: 30 => V2  V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 3.840749	stackLen: 30 => V2  V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=3.11867 stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 3.118669	stackLen: 30 => V2  V2  - V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r i * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=3.04182 stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 3.041823	stackLen: 30 => V2  V2  - V2  - V2  i V3  - a r 1.000000  1.000000  V1  V1  * / 1.000000  * 1.000000  1.000000  1.000000  - + r * r * + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 10 42 1 25 53 39 82 31 0 96 
BEST SOLUTION! cost=6.74429 stackLen: 30 => V0  1.000000  V3  V3  - / V0  - V2  - 1.000000  * a V1  V0  i * i / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 6.744293	stackLen: 30 => V0  1.000000  V3  V3  - / V0  - V2  - 1.000000  * a V1  V0  i * i / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=6.11435 stackLen: 30 => V1  1.000000  V0  V0  - V2  a V0  / * + * empty: 0 1 0 1 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1 1 0 1 
iteration = 0 	 best= 6.114348	stackLen: 30 => V1  1.000000  V0  V0  - V2  a V0  / * + * empty: 0 1 0 1 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1 1 0 1 
BEST SOLUTION! cost=4.55727 stackLen: 30 => V0  V0  1.000000  1.000000  / V2  * a r 1.000000  V0  a 1.000000  / / * * * empty: 0 1 1 0 0 0 1 1 0 0 1 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 4.557272	stackLen: 30 => V0  V0  1.000000  1.000000  / V2  * a r 1.000000  V0  a 1.000000  / / * * * empty: 0 1 1 0 0 0 1 1 0 0 1 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 4.557272	stackLen: 30 => V0  V0  1.000000  1.000000  / V2  * a r 1.000000  V0  a 1.000000  / / * * * empty: 0 1 1 0 0 0 1 1 0 0 1 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 4.557272	stackLen: 30 => V0  V0  1.000000  1.000000  / V2  * a r 1.000000  V0  a 1.000000  / / * * * empty: 0 1 1 0 0 0 1 1 0 0 1 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 4.557272	stackLen: 30 => V0  V0  1.000000  1.000000  / V2  * a r 1.000000  V0  a 1.000000  / / * * * empty: 0 1 1 0 0 0 1 1 0 0 1 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=3.59934 stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 1 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 2 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 3 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 4 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 5 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 6 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 7 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 8 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 9 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 10 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 11 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 12 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
iteration = 13 	 best= 3.599344	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  * a r 1.000000  1.000000  / * * empty: 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=2.55727 stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 
iteration = 0 	 best= 2.557272	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 
iteration = 1 	 best= 2.557272	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 
iteration = 2 	 best= 2.557272	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 
iteration = 3 	 best= 2.557272	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 
iteration = 4 	 best= 2.557272	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 
iteration = 5 	 best= 2.557272	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 
BEST SOLUTION! cost=2.49937 stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 2.499374	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 2.499374	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 2.499374	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 2.499374	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 2.499374	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 2.499374	stackLen: 30 => 1.000000  1.000000  + 1.000000  V2  V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=2.28189 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 2.281893	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  V2  V2  + V2  V2  + + V3  V3  + - a r 1.000000  i 1.000000  / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=2.00755 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 2.007545	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  a V2  * V2  + V2  V2  V2  + + + V3  V3  + - a r 1.000000  i * V3  + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 81 32 27 82 65 47 38 7 9 13 
BEST SOLUTION! cost=5.20044 stackLen: 30 => 1.000000  1.000000  1.000000  / / V1  V0  - / empty: 0 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 5.200441	stackLen: 30 => 1.000000  1.000000  1.000000  / / V1  V0  - / empty: 0 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=4.09335 stackLen: 30 => 1.000000  V1  * V1  1.000000  1.000000  r a V3  a * * r - + empty: 0 1 0 0 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 1 
iteration = 0 	 best= 4.093352	stackLen: 30 => 1.000000  V1  * V1  1.000000  1.000000  r a V3  a * * r - + empty: 0 1 0 0 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 1 
iteration = 1 	 best= 4.093352	stackLen: 30 => 1.000000  V1  * V1  1.000000  1.000000  r a V3  a * * r - + empty: 0 1 0 0 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 1 
iteration = 2 	 best= 4.093352	stackLen: 30 => 1.000000  V1  * V1  1.000000  1.000000  r a V3  a * * r - + empty: 0 1 0 0 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 1 
iteration = 3 	 best= 4.093352	stackLen: 30 => 1.000000  V1  * V1  1.000000  1.000000  r a V3  a * * r - + empty: 0 1 0 0 0 0 1 1 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 1 
BEST SOLUTION! cost=2.90044 stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 6 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 7 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 8 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 9 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 10 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 11 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 12 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 13 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 14 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 15 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 16 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 17 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 18 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 19 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 20 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 21 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 22 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 23 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 24 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 25 	 best= 2.900441	stackLen: 30 => V0  V0  a V3  V2  - a i r 1.000000  V0  * 1.000000  * * / * empty: 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=2.8753 stackLen: 30 => V0  V0  a V0  V0  - V0  V3  + - V2  - a i r 1.000000  1.000000  / V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 2.875301	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  + - V2  - a i r 1.000000  1.000000  / V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 2.875301	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  + - V2  - a i r 1.000000  1.000000  / V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 2.875301	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  + - V2  - a i r 1.000000  1.000000  / V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 2.875301	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  + - V2  - a i r 1.000000  1.000000  / V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 2.875301	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  + - V2  - a i r 1.000000  1.000000  / V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 2.875301	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  + - V2  - a i r 1.000000  1.000000  / V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=2.80044 stackLen: 30 => V0  V0  a V0  V0  - V0  V3  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 2.800441	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 2.800441	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 2.800441	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 2.800441	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 2.800441	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 2.800441	stackLen: 30 => V0  V0  a V0  V0  - V0  V3  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=2.51545 stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 2.515454	stackLen: 30 => V0  V0  a V0  V0  - V0  V2  V3  - + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=2.1809 stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 2.180902	stackLen: 30 => V0  V0  a V0  V0  - V0  1.000000  V2  / + - V1  - a i r 1.000000  1.000000  1.000000  / * V0  1.000000  * / * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 63 48 28 37 71 59 18 22 15 27 
BEST SOLUTION! cost=2.20431 stackLen: 30 => 1.000000  e 1.000000  * V3  1.000000  V1  * i * * a r r empty: 0 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 
iteration = 0 	 best= 2.204311	stackLen: 30 => 1.000000  e 1.000000  * V3  1.000000  V1  * i * * a r r empty: 0 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 
iteration = 1 	 best= 2.204311	stackLen: 30 => 1.000000  e 1.000000  * V3  1.000000  V1  * i * * a r r empty: 0 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 
iteration = 2 	 best= 2.204311	stackLen: 30 => 1.000000  e 1.000000  * V3  1.000000  V1  * i * * a r r empty: 0 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 
iteration = 3 	 best= 2.204311	stackLen: 30 => 1.000000  e 1.000000  * V3  1.000000  V1  * i * * a r r empty: 0 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 
iteration = 4 	 best= 2.204311	stackLen: 30 => 1.000000  e 1.000000  * V3  1.000000  V1  * i * * a r r empty: 0 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 
iteration = 5 	 best= 2.204311	stackLen: 30 => 1.000000  e 1.000000  * V3  1.000000  V1  * i * * a r r empty: 0 1 1 0 0 1 1 0 1 0 0 0 1 0 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 
BEST SOLUTION! cost=2.18746 stackLen: 30 => 1.000000  i i 1.000000  V3  1.000000  V1  V1  + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 0 	 best= 2.187461	stackLen: 30 => 1.000000  i i 1.000000  V3  1.000000  V1  V1  + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 1 	 best= 2.187461	stackLen: 30 => 1.000000  i i 1.000000  V3  1.000000  V1  V1  + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 2 	 best= 2.187461	stackLen: 30 => 1.000000  i i 1.000000  V3  1.000000  V1  V1  + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 3 	 best= 2.187461	stackLen: 30 => 1.000000  i i 1.000000  V3  1.000000  V1  V1  + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 4 	 best= 2.187461	stackLen: 30 => 1.000000  i i 1.000000  V3  1.000000  V1  V1  + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 5 	 best= 2.187461	stackLen: 30 => 1.000000  i i 1.000000  V3  1.000000  V1  V1  + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
BEST SOLUTION! cost=1.46364 stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 15 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 16 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 17 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 18 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 19 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 20 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 21 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 22 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 23 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 24 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 25 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 26 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 27 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 28 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 29 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 30 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 31 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 32 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 33 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 34 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 35 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 36 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 37 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 38 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 39 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 40 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 41 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 42 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 43 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 44 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 45 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 46 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 47 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 48 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 49 	 best= 1.463640	stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 25 27 86 26 3 97 80 55 11 47 
BEST SOLUTION! cost=5.96346 stackLen: 30 => V2  a 1.000000  V0  i / a r V2  a * / empty: 0 0 1 0 0 0 1 1 0 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 1 0 1 
iteration = 0 	 best= 5.963465	stackLen: 30 => V2  a 1.000000  V0  i / a r V2  a * / empty: 0 0 1 0 0 0 1 1 0 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 1 0 1 
BEST SOLUTION! cost=3.87668 stackLen: 30 => 1.000000  1.000000  r a a e V3  a / * r V3  / 1.000000  * V3  * empty: 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 0 1 0 1 
iteration = 0 	 best= 3.876677	stackLen: 30 => 1.000000  1.000000  r a a e V3  a / * r V3  / 1.000000  * V3  * empty: 0 1 1 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 0 0 1 0 1 
BEST SOLUTION! cost=3.76053 stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 0 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 1 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 2 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 3 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 4 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 5 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 6 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 7 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 8 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 9 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 10 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 11 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 12 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 13 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 14 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 15 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 16 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 17 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 18 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 19 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 20 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 21 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 22 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 23 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 24 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 25 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 26 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 27 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 28 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 29 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
iteration = 30 	 best= 3.760526	stackLen: 30 => V3  V3  + 1.000000  a * a r 1.000000  * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 0 
BEST SOLUTION! cost=3.21381 stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 3.213812	stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 3.213812	stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 3.213812	stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 3.213812	stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 3.213812	stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 3.213812	stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 3.213812	stackLen: 30 => V3  V3  V0  - V3  V3  + - + V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=3.0061 stackLen: 30 => V1  V3  V3  + V0  - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 3.006104	stackLen: 30 => V1  V3  V3  + V0  - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 3.006104	stackLen: 30 => V1  V3  V3  + V0  - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 3.006104	stackLen: 30 => V1  V3  V3  + V0  - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 3.006104	stackLen: 30 => V1  V3  V3  + V0  - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 3.006104	stackLen: 30 => V1  V3  V3  + V0  - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 3.006104	stackLen: 30 => V1  V3  V3  + V0  - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=2.9461 stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 18 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 19 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 20 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 21 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 22 	 best= 2.946104	stackLen: 30 => V1  V3  V3  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=2.93971 stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 2.939709	stackLen: 30 => V1  V3  V3  + V2  + V0  V0  + - V3  V3  + - - V3  * 1.000000  1.000000  - 1.000000  + r * r 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=1.46364
stackLen: 30 => 1.000000  i i 1.000000  1.000000  1.000000  / * V3  1.000000  V3  V1  V1  + + V1  + / i * * a i r r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
trueStackSize=26
printSolution2: (\sqrt{\sqrt{({(((((v1 + ((v1 + v1) + v3))/1)) * v3) * ((1/1) * 1))^2})}} * ((1)))
Tempo de execucao: 1313.8 segundos
FIM
