Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 37 50 71 0 99 38 52 67 10 40 
BEST SOLUTION! cost=28.7899 stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 28.789878	stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 28.789878	stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 28.789878	stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 28.789878	stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 28.789878	stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 28.789878	stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 28.789878	stackLen: 30 => V5  1.000000  V3  1.000000  V4  / 1.000000  e r V2  / + - / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=28.4776 stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 8 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 9 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 10 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 11 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 12 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 13 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 14 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 15 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 16 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 17 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 18 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 19 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 20 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 21 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 22 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 23 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 24 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 25 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 26 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 27 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 28 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 29 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 30 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 31 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 32 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 33 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 34 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 35 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 36 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 37 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 38 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 39 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 40 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 41 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 42 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 43 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 44 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 45 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 46 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 47 	 best= 28.477648	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V2  / + - / * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=24.9058 stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 24.905771	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 24.905771	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 24.905771	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 24.905771	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 24.905771	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 24.905771	stackLen: 30 => V5  1.000000  1.000000  * V3  1.000000  V4  / 1.000000  1.000000  1.000000  + + r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=24.6751 stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 24.675103	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  / V3  1.000000  V4  / 1.000000  e 1.000000  * i r V5  V2  - V2  V2  + V2  + - / + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 40 14 16 39 3 38 92 17 67 24 
BEST SOLUTION! cost=36.3 stackLen: 30 => V0  V2  - a r 1.000000  V1  / * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 1 1 0 1 
iteration = 0 	 best= 36.300000	stackLen: 30 => V0  V2  - a r 1.000000  V1  / * empty: 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 1 1 0 1 
BEST SOLUTION! cost=29.8 stackLen: 30 => V5  1.000000  1.000000  V0  / 1.000000  * 1.000000  V2  / 1.000000  V5  / - V5  - - / * empty: 0 0 1 1 1 0 0 0 1 0 1 0 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 29.800000	stackLen: 30 => V5  1.000000  1.000000  V0  / 1.000000  * 1.000000  V2  / 1.000000  V5  / - V5  - - / * empty: 0 0 1 1 1 0 0 0 1 0 1 0 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 29.800000	stackLen: 30 => V5  1.000000  1.000000  V0  / 1.000000  * 1.000000  V2  / 1.000000  V5  / - V5  - - / * empty: 0 0 1 1 1 0 0 0 1 0 1 0 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.8057 stackLen: 30 => V3  i 1.000000  V4  * + V5  1.000000  V3  a V0  / V1  1.000000  * * / * * empty: 0 0 1 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.805681	stackLen: 30 => V3  i 1.000000  V4  * + V5  1.000000  V3  a V0  / V1  1.000000  * * / * * empty: 0 0 1 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.805681	stackLen: 30 => V3  i 1.000000  V4  * + V5  1.000000  V3  a V0  / V1  1.000000  * * / * * empty: 0 0 1 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.805681	stackLen: 30 => V3  i 1.000000  V4  * + V5  1.000000  V3  a V0  / V1  1.000000  * * / * * empty: 0 0 1 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.805681	stackLen: 30 => V3  i 1.000000  V4  * + V5  1.000000  V3  a V0  / V1  1.000000  * * / * * empty: 0 0 1 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20.7 stackLen: 30 => 1.000000  V1  1.000000  1.000000  r r V0  V1  - 1.000000  V1  / - / * * / empty: 0 1 1 1 0 0 1 0 1 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.700000	stackLen: 30 => 1.000000  V1  1.000000  1.000000  r r V0  V1  - 1.000000  V1  / - / * * / empty: 0 1 1 1 0 0 1 0 1 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.700000	stackLen: 30 => 1.000000  V1  1.000000  1.000000  r r V0  V1  - 1.000000  V1  / - / * * / empty: 0 1 1 1 0 0 1 0 1 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.700000	stackLen: 30 => 1.000000  V1  1.000000  1.000000  r r V0  V1  - 1.000000  V1  / - / * * / empty: 0 1 1 1 0 0 1 0 1 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.700000	stackLen: 30 => 1.000000  V1  1.000000  1.000000  r r V0  V1  - 1.000000  V1  / - / * * / empty: 0 1 1 1 0 0 1 0 1 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.700000	stackLen: 30 => 1.000000  V1  1.000000  1.000000  r r V0  V1  - 1.000000  V1  / - / * * / empty: 0 1 1 1 0 0 1 0 1 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=16.3651 stackLen: 30 => 1.000000  1.000000  1.000000  e / r r - V5  * V0  - V1  * empty: 0 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 16.365081	stackLen: 30 => 1.000000  1.000000  1.000000  e / r r - V5  * V0  - V1  * empty: 0 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 16.365081	stackLen: 30 => 1.000000  1.000000  1.000000  e / r r - V5  * V0  - V1  * empty: 0 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 16.365081	stackLen: 30 => 1.000000  1.000000  1.000000  e / r r - V5  * V0  - V1  * empty: 0 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 16.365081	stackLen: 30 => 1.000000  1.000000  1.000000  e / r r - V5  * V0  - V1  * empty: 0 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 16.365081	stackLen: 30 => 1.000000  1.000000  1.000000  e / r r - V5  * V0  - V1  * empty: 0 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=15.7 stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.700000	stackLen: 30 => 1.000000  1.000000  / i 1.000000  r V5  1.000000  V0  a r V4  - / * / / empty: 0 1 1 0 0 1 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.4 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 10 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 11 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 12 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 13 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 14 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 15 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 16 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 17 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 18 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 19 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 20 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 21 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 22 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 23 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 24 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 25 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 26 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 27 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 28 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 29 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 30 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 31 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 32 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 33 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 34 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 35 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 36 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 37 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 38 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 39 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 40 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 41 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 42 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 43 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 44 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 45 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 46 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 47 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 48 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 49 	 best= 15.400000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  - i 1.000000  r V5  1.000000  V0  a r V2  - / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 33 40 5 16 74 63 43 54 81 55 
BEST SOLUTION! cost=50.3 stackLen: 30 => V1  1.000000  1.000000  / V2  1.000000  a * / * empty: 0 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 
iteration = 0 	 best= 50.300000	stackLen: 30 => V1  1.000000  1.000000  / V2  1.000000  a * / * empty: 0 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 
BEST SOLUTION! cost=42.8 stackLen: 30 => V3  a V3  a / 1.000000  / V3  * 1.000000  V2  i / * empty: 0 1 0 0 1 1 0 1 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 1 1 1 0 1 1 0 
iteration = 0 	 best= 42.800000	stackLen: 30 => V3  a V3  a / 1.000000  / V3  * 1.000000  V2  i / * empty: 0 1 0 0 1 1 0 1 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 1 1 1 0 1 1 0 
iteration = 1 	 best= 42.800000	stackLen: 30 => V3  a V3  a / 1.000000  / V3  * 1.000000  V2  i / * empty: 0 1 0 0 1 1 0 1 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 1 1 1 0 1 1 0 
BEST SOLUTION! cost=36.3 stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 0 	 best= 36.300000	stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 1 	 best= 36.300000	stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 2 	 best= 36.300000	stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 3 	 best= 36.300000	stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 4 	 best= 36.300000	stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 5 	 best= 36.300000	stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 6 	 best= 36.300000	stackLen: 30 => 1.000000  a r V5  i 1.000000  1.000000  / V4  / * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 
BEST SOLUTION! cost=34.4 stackLen: 30 => 1.000000  1.000000  a V5  i 1.000000  1.000000  1.000000  * / 1.000000  V1  * / V4  - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 34.400000	stackLen: 30 => 1.000000  1.000000  a V5  i 1.000000  1.000000  1.000000  * / 1.000000  V1  * / V4  - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 34.400000	stackLen: 30 => 1.000000  1.000000  a V5  i 1.000000  1.000000  1.000000  * / 1.000000  V1  * / V4  - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 34.400000	stackLen: 30 => 1.000000  1.000000  a V5  i 1.000000  1.000000  1.000000  * / 1.000000  V1  * / V4  - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 34.400000	stackLen: 30 => 1.000000  1.000000  a V5  i 1.000000  1.000000  1.000000  * / 1.000000  V1  * / V4  - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 34.400000	stackLen: 30 => 1.000000  1.000000  a V5  i 1.000000  1.000000  1.000000  * / 1.000000  V1  * / V4  - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=31 stackLen: 30 => V5  i V4  i V5  V2  - + + V5  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 0 
iteration = 0 	 best= 31.000000	stackLen: 30 => V5  i V4  i V5  V2  - + + V5  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 0 
iteration = 1 	 best= 31.000000	stackLen: 30 => V5  i V4  i V5  V2  - + + V5  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 0 
iteration = 2 	 best= 31.000000	stackLen: 30 => V5  i V4  i V5  V2  - + + V5  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 0 
BEST SOLUTION! cost=22.9 stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 0 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 1 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 2 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 3 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 4 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 5 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 6 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 7 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 8 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 9 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 10 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 11 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 12 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 13 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 14 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 15 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 16 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 17 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 18 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 19 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 20 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 21 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 22 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 23 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 24 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 25 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 26 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 27 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 28 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 29 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 30 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 31 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 32 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 33 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 34 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 35 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 36 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 37 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 38 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 39 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 40 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 41 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 42 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 43 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 44 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 45 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 46 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 47 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 48 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 49 	 best= 22.900000	stackLen: 30 => V5  V0  - V1  - V1  a r * V2  i 1.000000  V2  / * - empty: 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 69 10 14 79 15 6 27 99 64 73 
BEST SOLUTION! cost=40.9071 stackLen: 30 => V0  V5  V2  + - a r V2  / V4  * V2  * 1.000000  * empty: 0 1 1 0 1 0 0 0 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 40.907143	stackLen: 30 => V0  V5  V2  + - a r V2  / V4  * V2  * 1.000000  * empty: 0 1 1 0 1 0 0 0 1 1 0 0 1 1 0 0 1 0 1 1 0 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=33.5 stackLen: 30 => 1.000000  V4  / 1.000000  1.000000  V5  / * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 0 	 best= 33.500000	stackLen: 30 => 1.000000  V4  / 1.000000  1.000000  V5  / * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 1 	 best= 33.500000	stackLen: 30 => 1.000000  V4  / 1.000000  1.000000  V5  / * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 2 	 best= 33.500000	stackLen: 30 => 1.000000  V4  / 1.000000  1.000000  V5  / * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 3 	 best= 33.500000	stackLen: 30 => 1.000000  V4  / 1.000000  1.000000  V5  / * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 0 1 
BEST SOLUTION! cost=23.6042 stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  V4  V5  - / V1  - * - / * + empty: 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 23.604189	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  V4  V5  - / V1  - * - / * + empty: 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 23.604189	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  V4  V5  - / V1  - * - / * + empty: 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 23.604189	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  V4  V5  - / V1  - * - / * + empty: 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 23.604189	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  V4  V5  - / V1  - * - / * + empty: 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 23.604189	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  V4  V5  - / V1  - * - / * + empty: 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 23.604189	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  V4  V5  - / V1  - * - / * + empty: 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=21.0993 stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 21.099302	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 21.099302	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 21.099302	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 21.099302	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 21.099302	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 21.099302	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 21.099302	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=21.0872 stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  1.000000  + + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 21.087247	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  1.000000  + + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 21.087247	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  1.000000  + + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 21.087247	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  1.000000  + + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 21.087247	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  1.000000  + + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 21.087247	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  1.000000  + + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 21.087247	stackLen: 30 => V0  V1  * V5  1.000000  e V3  1.000000  1.000000  1.000000  + + 1.000000  1.000000  * V4  V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=19.6311 stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 19.631091	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  1.000000  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - / V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=16.7866 stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 16.786622	stackLen: 30 => V0  V1  * V0  V5  + 1.000000  e V3  1.000000  V2  1.000000  1.000000  + 1.000000  V5  / / V4  - V5  - - V5  - * - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 14 12 3 8 7 42 27 43 16 82 
BEST SOLUTION! cost=32.2095 stackLen: 30 => V2  a r V5  V4  a 1.000000  V1  * a - * / empty: 0 1 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 32.209524	stackLen: 30 => V2  a r V5  V4  a 1.000000  V1  * a - * / empty: 0 1 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=28.6491 stackLen: 30 => 1.000000  e r r V1  V0  a r i * * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 28.649106	stackLen: 30 => 1.000000  e r r V1  V0  a r i * * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 28.649106	stackLen: 30 => 1.000000  e r r V1  V0  a r i * * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=26 stackLen: 30 => 1.000000  V3  V0  + / V2  V1  + * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 26.000000	stackLen: 30 => 1.000000  V3  V0  + / V2  V1  + * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 0 0 1 
iteration = 1 	 best= 26.000000	stackLen: 30 => 1.000000  V3  V0  + / V2  V1  + * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=23.4 stackLen: 30 => V5  1.000000  1.000000  / 1.000000  V1  V4  - / * * empty: 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 23.400000	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  V1  V4  - / * * empty: 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 23.400000	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  V1  V4  - / * * empty: 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 23.400000	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  V1  V4  - / * * empty: 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 23.400000	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  V1  V4  - / * * empty: 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 23.400000	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  V1  V4  - / * * empty: 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 23.400000	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  V1  V4  - / * * empty: 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=19.5 stackLen: 30 => V5  1.000000  1.000000  1.000000  / * 1.000000  V2  1.000000  V1  V4  V4  + - * - / / * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 0 	 best= 19.500000	stackLen: 30 => V5  1.000000  1.000000  1.000000  / * 1.000000  V2  1.000000  V1  V4  V4  + - * - / / * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 1 	 best= 19.500000	stackLen: 30 => V5  1.000000  1.000000  1.000000  / * 1.000000  V2  1.000000  V1  V4  V4  + - * - / / * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 2 	 best= 19.500000	stackLen: 30 => V5  1.000000  1.000000  1.000000  / * 1.000000  V2  1.000000  V1  V4  V4  + - * - / / * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 3 	 best= 19.500000	stackLen: 30 => V5  1.000000  1.000000  1.000000  / * 1.000000  V2  1.000000  V1  V4  V4  + - * - / / * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 4 	 best= 19.500000	stackLen: 30 => V5  1.000000  1.000000  1.000000  / * 1.000000  V2  1.000000  V1  V4  V4  + - * - / / * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 5 	 best= 19.500000	stackLen: 30 => V5  1.000000  1.000000  1.000000  / * 1.000000  V2  1.000000  V1  V4  V4  + - * - / / * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
BEST SOLUTION! cost=11.6 stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V3  V2  - V2  + 1.000000  V1  V4  V4  V4  V4  + + + - * - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V3  V2  - V2  + 1.000000  V1  V4  V4  V4  V4  + + + - * - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V3  V2  - V2  + 1.000000  V1  V4  V4  V4  V4  + + + - * - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=10.4 stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 1 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 2 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 3 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 4 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 5 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 6 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 7 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 8 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 9 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 10 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 11 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 12 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 13 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 14 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 15 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 16 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 17 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 18 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 19 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 20 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 21 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 22 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 23 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 24 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 25 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 26 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 27 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 28 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 29 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 30 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 31 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 32 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 33 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 34 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 35 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 36 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 37 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 38 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 39 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 40 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 41 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 42 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 43 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 44 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 45 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 46 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 47 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 48 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 49 	 best= 10.400000	stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.4
stackLen: 30 => V2  a r V4  / V3  V0  + 1.000000  V1  / - * V2  * empty: 0 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 
trueStackSize=15
printSolution2: (v2 * (((v1/1) - (v0 + v3)) * (v4/\sqrt{{v2^2}})))
Tempo de execucao: 1229.52 segundos
FIM
