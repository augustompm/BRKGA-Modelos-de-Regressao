Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 36 27 72 83 76 97 55 10 15 7 
BEST SOLUTION! cost=32.9 stackLen: 30 => V5  V0  V2  - V3  a r V3  1.000000  1.000000  1.000000  - / * - + * empty: 0 1 0 0 1 0 0 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 32.900000	stackLen: 30 => V5  V0  V2  - V3  a r V3  1.000000  1.000000  1.000000  - / * - + * empty: 0 1 0 0 1 0 0 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 32.900000	stackLen: 30 => V5  V0  V2  - V3  a r V3  1.000000  1.000000  1.000000  - / * - + * empty: 0 1 0 0 1 0 0 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=19 stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 3 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 4 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 5 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 6 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 7 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
iteration = 8 	 best= 19.000000	stackLen: 30 => 1.000000  V3  * V5  V3  a V3  / * * V4  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=14.2 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 0 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 1 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 2 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 3 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 4 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 5 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 6 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 7 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 8 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 9 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 10 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 11 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 12 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 13 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 14 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 15 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 16 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 17 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 18 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 19 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 20 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 21 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 22 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 23 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 24 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 25 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 26 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 27 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 28 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 29 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
iteration = 30 	 best= 14.200000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / / empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 
BEST SOLUTION! cost=13.7805 stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 0 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 1 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 2 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 3 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 4 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 5 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 6 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 7 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 8 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 9 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 10 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 11 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 12 	 best= 13.780465	stackLen: 30 => 1.000000  1.000000  1.000000  - 1.000000  1.000000  / 1.000000  e - + / V3  V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
BEST SOLUTION! cost=13.409 stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 13.409028	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  / 1.000000  e / + / V3  V3  + V0  V5  V5  + - V3  a V3  / * * V4  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 47 74 23 41 68 49 53 38 52 92 
BEST SOLUTION! cost=14.8 stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 14.800000	stackLen: 30 => 1.000000  V4  * V5  i * V2  a i i V3  V2  V2  a i * * / + empty: 0 1 1 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=12.6 stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 12.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  * V5  V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=11.8 stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 28 68 35 22 48 52 60 0 93 18 
BEST SOLUTION! cost=35.344 stackLen: 30 => 1.000000  e r V3  V2  - V4  * V1  V5  a V3  V4  - / * * * empty: 0 0 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 35.344030	stackLen: 30 => 1.000000  e r V3  V2  - V4  * V1  V5  a V3  V4  - / * * * empty: 0 0 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=31.1423 stackLen: 30 => V4  V1  - V3  a V4  V2  V1  * 1.000000  1.000000  e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 31.142269	stackLen: 30 => V4  V1  - V3  a V4  V2  V1  * 1.000000  1.000000  e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 31.142269	stackLen: 30 => V4  V1  - V3  a V4  V2  V1  * 1.000000  1.000000  e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 
iteration = 2 	 best= 31.142269	stackLen: 30 => V4  V1  - V3  a V4  V2  V1  * 1.000000  1.000000  e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 
iteration = 3 	 best= 31.142269	stackLen: 30 => V4  V1  - V3  a V4  V2  V1  * 1.000000  1.000000  e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 
iteration = 4 	 best= 31.142269	stackLen: 30 => V4  V1  - V3  a V4  V2  V1  * 1.000000  1.000000  e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 
iteration = 5 	 best= 31.142269	stackLen: 30 => V4  V1  - V3  a V4  V2  V1  * 1.000000  1.000000  e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=29.5952 stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 24 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 25 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 26 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 27 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 28 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 29 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 30 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 31 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 32 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 33 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 34 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 35 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 36 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 37 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 38 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 39 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 40 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 41 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 42 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 43 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 44 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 45 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 46 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 47 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 48 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 49 	 best= 29.595247	stackLen: 30 => V4  V1  - V3  V3  + a V4  V2  V1  * 1.000000  1.000000  1.000000  + e 1.000000  - 1.000000  * * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 9 23 7 49 76 18 98 71 3 25 
BEST SOLUTION! cost=27.6 stackLen: 30 => V3  1.000000  * V5  * 1.000000  1.000000  / * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 
iteration = 0 	 best= 27.600000	stackLen: 30 => V3  1.000000  * V5  * 1.000000  1.000000  / * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 
iteration = 1 	 best= 27.600000	stackLen: 30 => V3  1.000000  * V5  * 1.000000  1.000000  / * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 
iteration = 2 	 best= 27.600000	stackLen: 30 => V3  1.000000  * V5  * 1.000000  1.000000  / * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 0 1 1 
BEST SOLUTION! cost=20.546 stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.545976	stackLen: 30 => 1.000000  e V5  / V3  1.000000  V1  V3  V3  V0  + + + / + * empty: 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20.5 stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  - e V5  / 1.000000  1.000000  1.000000  + V1  V3  V3  V0  + + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.3106 stackLen: 30 => 1.000000  1.000000  1.000000  * - e V5  / 1.000000  e 1.000000  + V1  V1  V3  + + V3  V3  V3  + V0  V0  + + + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.310639	stackLen: 30 => 1.000000  1.000000  1.000000  * - e V5  / 1.000000  e 1.000000  + V1  V1  V3  + + V3  V3  V3  + V0  V0  + + + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.310639	stackLen: 30 => 1.000000  1.000000  1.000000  * - e V5  / 1.000000  e 1.000000  + V1  V1  V3  + + V3  V3  V3  + V0  V0  + + + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.310639	stackLen: 30 => 1.000000  1.000000  1.000000  * - e V5  / 1.000000  e 1.000000  + V1  V1  V3  + + V3  V3  V3  + V0  V0  + + + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.310639	stackLen: 30 => 1.000000  1.000000  1.000000  * - e V5  / 1.000000  e 1.000000  + V1  V1  V3  + + V3  V3  V3  + V0  V0  + + + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.9925 stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 11 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 12 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 13 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 14 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 15 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 16 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 17 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 18 	 best= 19.992472	stackLen: 30 => V4  a V3  1.000000  e V3  / a V4  V2  - i * * / empty: 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=19.4552 stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 0 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 1 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 2 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 3 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 4 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 5 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 6 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 7 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 8 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
iteration = 9 	 best= 19.455164	stackLen: 30 => V4  V4  + a 1.000000  1.000000  + V3  1.000000  1.000000  / a r V3  / a V4  V2  - i * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 
BEST SOLUTION! cost=19.0714 stackLen: 30 => V4  V4  + V4  + a 1.000000  1.000000  * V3  1.000000  1.000000  1.000000  / / a r V3  / a V5  V4  - V2  - i * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.071396	stackLen: 30 => V4  V4  + V4  + a 1.000000  1.000000  * V3  1.000000  1.000000  1.000000  / / a r V3  / a V5  V4  - V2  - i * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=17.2 stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 11 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 12 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 13 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 14 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 15 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 16 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 17 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 18 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 19 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 20 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 21 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 22 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 23 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 24 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 25 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 26 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 27 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 28 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 29 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 30 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 31 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 32 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 33 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 34 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 35 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 36 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 37 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 38 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 39 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 40 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 41 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 42 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 43 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 44 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 45 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 46 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 47 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 48 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 49 	 best= 17.200000	stackLen: 30 => V3  i V4  a 1.000000  V4  a V4  V2  - / / * * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 33 3 32 15 34 57 63 60 25 89 
BEST SOLUTION! cost=28.9148 stackLen: 30 => 1.000000  1.000000  e 1.000000  * i + V0  V5  V1  i + - / V3  * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.914804	stackLen: 30 => 1.000000  1.000000  e 1.000000  * i + V0  V5  V1  i + - / V3  * empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25.7 stackLen: 30 => V4  1.000000  V4  a / r V5  / V4  a r 1.000000  * V4  / V5  * * * empty: 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 25.700000	stackLen: 30 => V4  1.000000  V4  a / r V5  / V4  a r 1.000000  * V4  / V5  * * * empty: 0 1 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=24.1606 stackLen: 30 => 1.000000  1.000000  e V3  V2  + / V0  V2  - * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 24.160603	stackLen: 30 => 1.000000  1.000000  e V3  V2  + / V0  V2  - * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=23.3524 stackLen: 30 => V4  i 1.000000  e 1.000000  V0  * / i 1.000000  * V1  i V5  - - 1.000000  * * empty: 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 23.352370	stackLen: 30 => V4  i 1.000000  e 1.000000  V0  * / i 1.000000  * V1  i V5  - - 1.000000  * * empty: 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 23.352370	stackLen: 30 => V4  i 1.000000  e 1.000000  V0  * / i 1.000000  * V1  i V5  - - 1.000000  * * empty: 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 23.352370	stackLen: 30 => V4  i 1.000000  e 1.000000  V0  * / i 1.000000  * V1  i V5  - - 1.000000  * * empty: 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 23.352370	stackLen: 30 => V4  i 1.000000  e 1.000000  V0  * / i 1.000000  * V1  i V5  - - 1.000000  * * empty: 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 4 	 best= 23.352370	stackLen: 30 => V4  i 1.000000  e 1.000000  V0  * / i 1.000000  * V1  i V5  - - 1.000000  * * empty: 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 5 	 best= 23.352370	stackLen: 30 => V4  i 1.000000  e 1.000000  V0  * / i 1.000000  * V1  i V5  - - 1.000000  * * empty: 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=21.9585 stackLen: 30 => V4  i 1.000000  1.000000  - e e 1.000000  V0  * / i 1.000000  V1  * V1  * r V5  - - 1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 21.958545	stackLen: 30 => V4  i 1.000000  1.000000  - e e 1.000000  V0  * / i 1.000000  V1  * V1  * r V5  - - 1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 21.958545	stackLen: 30 => V4  i 1.000000  1.000000  - e e 1.000000  V0  * / i 1.000000  V1  * V1  * r V5  - - 1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 21.958545	stackLen: 30 => V4  i 1.000000  1.000000  - e e 1.000000  V0  * / i 1.000000  V1  * V1  * r V5  - - 1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 21.958545	stackLen: 30 => V4  i 1.000000  1.000000  - e e 1.000000  V0  * / i 1.000000  V1  * V1  * r V5  - - 1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 21.958545	stackLen: 30 => V4  i 1.000000  1.000000  - e e 1.000000  V0  * / i 1.000000  V1  * V1  * r V5  - - 1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=17.3 stackLen: 30 => V1  1.000000  r V4  / V3  + - 1.000000  * V5  * empty: 0 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 17.300000	stackLen: 30 => V1  1.000000  r V4  / V3  + - 1.000000  * V5  * empty: 0 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 17.300000	stackLen: 30 => V1  1.000000  r V4  / V3  + - 1.000000  * V5  * empty: 0 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 17.300000	stackLen: 30 => V1  1.000000  r V4  / V3  + - 1.000000  * V5  * empty: 0 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 17.300000	stackLen: 30 => V1  1.000000  r V4  / V3  + - 1.000000  * V5  * empty: 0 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 17.300000	stackLen: 30 => V1  1.000000  r V4  / V3  + - 1.000000  * V5  * empty: 0 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 17.300000	stackLen: 30 => V1  1.000000  r V4  / V3  + - 1.000000  * V5  * empty: 0 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=16.5795 stackLen: 30 => V1  1.000000  1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 16.579542	stackLen: 30 => V1  1.000000  1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 16.579542	stackLen: 30 => V1  1.000000  1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 16.579542	stackLen: 30 => V1  1.000000  1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 16.579542	stackLen: 30 => V1  1.000000  1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 16.579542	stackLen: 30 => V1  1.000000  1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 16.579542	stackLen: 30 => V1  1.000000  1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.8577 stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 15.857738	stackLen: 30 => V1  1.000000  1.000000  + 1.000000  / 1.000000  + r V4  / V3  + - 1.000000  * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=11.8
stackLen: 30 => 1.000000  1.000000  - 1.000000  - V4  / V4  V0  - V5  + V1  + i * V2  a i i V3  V2  V2  a i * * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((({v2^2}) * v2) * v3)/(({v2^2}))) + (((v1 + (v5 + (v0 - v4)))) * (v4/(1 - (1 - 1)))))
Tempo de execucao: 1172.31 segundos
FIM
