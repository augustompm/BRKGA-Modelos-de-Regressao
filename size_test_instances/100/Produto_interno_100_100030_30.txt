Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 79 68 16 92 30 84 18 95 37 49 
BEST SOLUTION! cost=27.7 stackLen: 30 => V2  1.000000  r V3  i / * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
iteration = 0 	 best= 27.700000	stackLen: 30 => V2  1.000000  r V3  i / * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
iteration = 1 	 best= 27.700000	stackLen: 30 => V2  1.000000  r V3  i / * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
iteration = 2 	 best= 27.700000	stackLen: 30 => V2  1.000000  r V3  i / * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
BEST SOLUTION! cost=24.5 stackLen: 30 => V3  V2  a 1.000000  V2  V1  * a r / V2  * / * empty: 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 24.500000	stackLen: 30 => V3  V2  a 1.000000  V2  V1  * a r / V2  * / * empty: 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 24.500000	stackLen: 30 => V3  V2  a 1.000000  V2  V1  * a r / V2  * / * empty: 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 24.500000	stackLen: 30 => V3  V2  a 1.000000  V2  V1  * a r / V2  * / * empty: 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 24.500000	stackLen: 30 => V3  V2  a 1.000000  V2  V1  * a r / V2  * / * empty: 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 24.500000	stackLen: 30 => V3  V2  a 1.000000  V2  V1  * a r / V2  * / * empty: 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=20.8 stackLen: 30 => 1.000000  V2  1.000000  V0  1.000000  a 1.000000  V3  / / + * * / empty: 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 20.800000	stackLen: 30 => 1.000000  V2  1.000000  V0  1.000000  a 1.000000  V3  / / + * * / empty: 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 
iteration = 1 	 best= 20.800000	stackLen: 30 => 1.000000  V2  1.000000  V0  1.000000  a 1.000000  V3  / / + * * / empty: 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 
iteration = 2 	 best= 20.800000	stackLen: 30 => 1.000000  V2  1.000000  V0  1.000000  a 1.000000  V3  / / + * * / empty: 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 
iteration = 3 	 best= 20.800000	stackLen: 30 => 1.000000  V2  1.000000  V0  1.000000  a 1.000000  V3  / / + * * / empty: 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 
iteration = 4 	 best= 20.800000	stackLen: 30 => 1.000000  V2  1.000000  V0  1.000000  a 1.000000  V3  / / + * * / empty: 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=19.3 stackLen: 30 => V5  V2  V4  + V5  a r V1  / * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 
iteration = 0 	 best= 19.300000	stackLen: 30 => V5  V2  V4  + V5  a r V1  / * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 
iteration = 1 	 best= 19.300000	stackLen: 30 => V5  V2  V4  + V5  a r V1  / * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 
iteration = 2 	 best= 19.300000	stackLen: 30 => V5  V2  V4  + V5  a r V1  / * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 
iteration = 3 	 best= 19.300000	stackLen: 30 => V5  V2  V4  + V5  a r V1  / * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 
iteration = 4 	 best= 19.300000	stackLen: 30 => V5  V2  V4  + V5  a r V1  / * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 
iteration = 5 	 best= 19.300000	stackLen: 30 => V5  V2  V4  + V5  a r V1  / * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 
BEST SOLUTION! cost=17.25 stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.250000	stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.250000	stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.250000	stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.250000	stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.250000	stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.250000	stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 17.250000	stackLen: 30 => V5  V2  V2  + V4  + V5  V5  + a r V1  / * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.9333 stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V5  V5  V5  + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 16.933333	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V5  V5  V5  + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 16.933333	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V5  V5  V5  + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 16.933333	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V5  V5  V5  + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 16.933333	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V5  V5  V5  + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 16.933333	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V5  V5  V5  + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 16.933333	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V5  V5  V5  + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.8576 stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V4  V4  + V5  V4  V5  - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 16.857598	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V4  V4  + V5  V4  V5  - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 16.857598	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V4  V4  + V5  V4  V5  - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 16.857598	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V4  V4  + V5  V4  V5  - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 16.857598	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V4  V4  + V5  V4  V5  - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 16.857598	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V4  V4  + V5  V4  V5  - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 16.857598	stackLen: 30 => V5  V2  V2  V2  + + V4  V4  + + V4  V4  + V5  V4  V5  - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=13.2035 stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.203506	stackLen: 30 => V5  V2  V3  V2  + + V4  V4  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=13.0925 stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.092541	stackLen: 30 => V5  V2  V3  V3  + + V4  V0  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.6707 stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.670678	stackLen: 30 => V5  V2  V3  V3  + + V4  V1  + + V4  V4  + V4  V4  V5  V5  + - V5  + + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.5559 stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 11.555909	stackLen: 30 => V5  V2  V3  V4  + + V4  V1  + + V4  V4  + V4  V5  V5  + - V5  V5  - + + a r V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 89 51 34 52 83 47 62 0 17 80 
BEST SOLUTION! cost=38.9 stackLen: 30 => 1.000000  1.000000  1.000000  / V5  / V3  V4  - * / empty: 0 0 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 38.900000	stackLen: 30 => 1.000000  1.000000  1.000000  / V5  / V3  V4  - * / empty: 0 0 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 
iteration = 1 	 best= 38.900000	stackLen: 30 => 1.000000  1.000000  1.000000  / V5  / V3  V4  - * / empty: 0 0 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=31.5 stackLen: 30 => 1.000000  V4  V0  * * V2  a r V4  * - empty: 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 0 1 1 0 0 1 
iteration = 0 	 best= 31.500000	stackLen: 30 => 1.000000  V4  V0  * * V2  a r V4  * - empty: 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 0 1 1 0 0 1 
iteration = 1 	 best= 31.500000	stackLen: 30 => 1.000000  V4  V0  * * V2  a r V4  * - empty: 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 0 1 1 0 0 1 
iteration = 2 	 best= 31.500000	stackLen: 30 => 1.000000  V4  V0  * * V2  a r V4  * - empty: 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 0 1 1 0 0 1 
iteration = 3 	 best= 31.500000	stackLen: 30 => 1.000000  V4  V0  * * V2  a r V4  * - empty: 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 0 1 1 0 1 0 1 1 0 0 1 
BEST SOLUTION! cost=27.156 stackLen: 30 => V4  V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 27.155952	stackLen: 30 => V4  V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 27.155952	stackLen: 30 => V4  V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 27.155952	stackLen: 30 => V4  V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 27.155952	stackLen: 30 => V4  V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 27.155952	stackLen: 30 => V4  V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 27.155952	stackLen: 30 => V4  V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.594 stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 18.594048	stackLen: 30 => V4  V4  + V4  a V4  a r / V1  * 1.000000  V3  * V3  - V3  - * - V2  * empty: 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=17.1587 stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 17.158730	stackLen: 30 => V4  V4  V4  - + V4  a V4  a r / V1  * 1.000000  1.000000  1.000000  + + V3  / V3  - * - V2  V2  + * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 44 66 69 26 63 75 61 8 59 34 
BEST SOLUTION! cost=30.1839 stackLen: 30 => V3  a r V1  1.000000  V4  * * / V0  * empty: 0 0 0 1 1 1 0 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 
iteration = 0 	 best= 30.183889	stackLen: 30 => V3  a r V1  1.000000  V4  * * / V0  * empty: 0 0 0 1 1 1 0 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 
BEST SOLUTION! cost=23.6 stackLen: 30 => 1.000000  a 1.000000  * 1.000000  * 1.000000  / V5  V2  - / V1  * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 23.600000	stackLen: 30 => 1.000000  a 1.000000  * 1.000000  * 1.000000  / V5  V2  - / V1  * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 23.600000	stackLen: 30 => 1.000000  a 1.000000  * 1.000000  * 1.000000  / V5  V2  - / V1  * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 23.600000	stackLen: 30 => 1.000000  a 1.000000  * 1.000000  * 1.000000  / V5  V2  - / V1  * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 23.600000	stackLen: 30 => 1.000000  a 1.000000  * 1.000000  * 1.000000  / V5  V2  - / V1  * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 23.600000	stackLen: 30 => 1.000000  a 1.000000  * 1.000000  * 1.000000  / V5  V2  - / V1  * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 23.600000	stackLen: 30 => 1.000000  a 1.000000  * 1.000000  * 1.000000  / V5  V2  - / V1  * empty: 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=16.4 stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  * 1.000000  1.000000  + 1.000000  * * V5  V5  + V5  + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 16.400000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  * 1.000000  1.000000  + 1.000000  * * V5  V5  + V5  + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 16.400000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  * 1.000000  1.000000  + 1.000000  * * V5  V5  + V5  + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 16.400000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  * 1.000000  1.000000  + 1.000000  * * V5  V5  + V5  + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 16.400000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  * 1.000000  1.000000  + 1.000000  * * V5  V5  + V5  + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 16.400000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  * 1.000000  1.000000  + 1.000000  * * V5  V5  + V5  + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 16.400000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  * 1.000000  1.000000  + 1.000000  * * V5  V5  + V5  + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=9.3 stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 9.300000	stackLen: 30 => 1.000000  1.000000  / a a r 1.000000  r 1.000000  a * 1.000000  1.000000  + / * V5  V0  V5  - + V5  V5  - + V2  - / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 90 42 35 93 44 77 2 56 47 17 
BEST SOLUTION! cost=20.2 stackLen: 30 => 1.000000  r V1  / V2  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 
iteration = 0 	 best= 20.200000	stackLen: 30 => 1.000000  r V1  / V2  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 
BEST SOLUTION! cost=19.1282 stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 7 	 best= 19.128175	stackLen: 30 => V5  V1  + V4  - V1  V3  - - a V0  a / V1  * V2  * empty: 0 1 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=18.7854 stackLen: 30 => V5  V5  + V5  - V5  + V1  + V4  - V3  V3  - - a V0  a / V1  * V2  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 18.785438	stackLen: 30 => V5  V5  + V5  - V5  + V1  + V4  - V3  V3  - - a V0  a / V1  * V2  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 18.785438	stackLen: 30 => V5  V5  + V5  - V5  + V1  + V4  - V3  V3  - - a V0  a / V1  * V2  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 18.785438	stackLen: 30 => V5  V5  + V5  - V5  + V1  + V4  - V3  V3  - - a V0  a / V1  * V2  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=18.5664 stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 7 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 8 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 9 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 10 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
iteration = 11 	 best= 18.566367	stackLen: 30 => V4  V1  - a V5  / V0  V2  i V3  V3  + * * * empty: 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=18.006 stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.005960	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.005960	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.005960	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.005960	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.005960	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.005960	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.005960	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V2  - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=10.5083 stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 18 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 19 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 20 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 21 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 22 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 23 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 24 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 25 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 26 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 27 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 28 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 29 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 30 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 31 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 32 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 33 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 34 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 35 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 36 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 37 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 38 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 39 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 40 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 41 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 42 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 43 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 44 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 45 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 46 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 47 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 48 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 49 	 best= 10.508275	stackLen: 30 => V4  V1  - a V3  V0  V0  * V0  V0  - V0  - V2  V2  + - V0  - V2  - V3  i + * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 67 36 29 68 96 59 66 11 56 32 
BEST SOLUTION! cost=25.2 stackLen: 30 => 1.000000  V0  V3  V3  - V5  a * * r * empty: 0 0 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 1 0 1 0 1 
iteration = 0 	 best= 25.200000	stackLen: 30 => 1.000000  V0  V3  V3  - V5  a * * r * empty: 0 0 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 1 0 1 0 1 
BEST SOLUTION! cost=15.7005 stackLen: 30 => V3  V5  V3  - a V3  / a * V4  V5  * V4  * * empty: 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 
iteration = 0 	 best= 15.700531	stackLen: 30 => V3  V5  V3  - a V3  / a * V4  V5  * V4  * * empty: 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 
iteration = 1 	 best= 15.700531	stackLen: 30 => V3  V5  V3  - a V3  / a * V4  V5  * V4  * * empty: 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 
iteration = 2 	 best= 15.700531	stackLen: 30 => V3  V5  V3  - a V3  / a * V4  V5  * V4  * * empty: 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 
iteration = 3 	 best= 15.700531	stackLen: 30 => V3  V5  V3  - a V3  / a * V4  V5  * V4  * * empty: 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 
iteration = 4 	 best= 15.700531	stackLen: 30 => V3  V5  V3  - a V3  / a * V4  V5  * V4  * * empty: 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 
BEST SOLUTION! cost=15.4 stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 0 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 1 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 2 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 3 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 4 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 5 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 6 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 7 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 8 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
iteration = 9 	 best= 15.400000	stackLen: 30 => V0  V2  + V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 
BEST SOLUTION! cost=12.4371 stackLen: 30 => V0  1.000000  1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 12.437110	stackLen: 30 => V0  1.000000  1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 12.437110	stackLen: 30 => V0  1.000000  1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 12.437110	stackLen: 30 => V0  1.000000  1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 12.437110	stackLen: 30 => V0  1.000000  1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 12.437110	stackLen: 30 => V0  1.000000  1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 12.437110	stackLen: 30 => V0  1.000000  1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=11.6236 stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 11.623591	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V5  + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=9.53726 stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 9.537261	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 9.537261	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 9.537261	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 9.537261	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 9.537261	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 9.537261	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=8.26314 stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 8.263144	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  V0  + - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=8.07553 stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 8.075531	stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=8.07553
stackLen: 30 => V0  1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  + 1.000000  / * V2  + V5  V0  V0  i i - V5  V4  + + + V5  * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (\sqrt{(v5 * (((v4 + v5) + (((v0)) - v0)) + v5))} * (v2 + ((1/(1 + (1/((1 + 1)/1)))) * v0)))
Tempo de execucao: 1235.59 segundos
FIM
