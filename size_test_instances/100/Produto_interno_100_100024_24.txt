Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 98 84 46 9 32 50 41 2 3 45 
BEST SOLUTION! cost=29.7665 stackLen: 30 => 1.000000  e V5  V4  a V0  V3  * / a 1.000000  e i * r V2  * * / empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 29.766542	stackLen: 30 => 1.000000  e V5  V4  a V0  V3  * / a 1.000000  e i * r V2  * * / empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=26.4 stackLen: 30 => V3  a r V0  V0  - / e V1  V3  1.000000  * + * V2  * empty: 0 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 26.400000	stackLen: 30 => V3  a r V0  V0  - / e V1  V3  1.000000  * + * V2  * empty: 0 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 
iteration = 1 	 best= 26.400000	stackLen: 30 => V3  a r V0  V0  - / e V1  V3  1.000000  * + * V2  * empty: 0 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 
iteration = 2 	 best= 26.400000	stackLen: 30 => V3  a r V0  V0  - / e V1  V3  1.000000  * + * V2  * empty: 0 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 
iteration = 3 	 best= 26.400000	stackLen: 30 => V3  a r V0  V0  - / e V1  V3  1.000000  * + * V2  * empty: 0 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 
iteration = 4 	 best= 26.400000	stackLen: 30 => V3  a r V0  V0  - / e V1  V3  1.000000  * + * V2  * empty: 0 0 1 1 1 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=25.2659 stackLen: 30 => 1.000000  e r r V2  / V0  V3  + 1.000000  r * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 25.265888	stackLen: 30 => 1.000000  e r r V2  / V0  V3  + 1.000000  r * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 1 
iteration = 1 	 best= 25.265888	stackLen: 30 => 1.000000  e r r V2  / V0  V3  + 1.000000  r * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 1 
iteration = 2 	 best= 25.265888	stackLen: 30 => 1.000000  e r r V2  / V0  V3  + 1.000000  r * * empty: 0 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=21.7 stackLen: 30 => V3  1.000000  V1  i * V2  a V0  / 1.000000  * * V2  * + V2  * empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 0 0 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 21.700000	stackLen: 30 => V3  1.000000  V1  i * V2  a V0  / 1.000000  * * V2  * + V2  * empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 0 0 1 0 1 1 1 0 0 1 
iteration = 1 	 best= 21.700000	stackLen: 30 => V3  1.000000  V1  i * V2  a V0  / 1.000000  * * V2  * + V2  * empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 0 0 1 0 1 1 1 0 0 1 
iteration = 2 	 best= 21.700000	stackLen: 30 => V3  1.000000  V1  i * V2  a V0  / 1.000000  * * V2  * + V2  * empty: 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 0 0 1 0 0 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=19.8 stackLen: 30 => 1.000000  V3  V0  - V0  - V0  V2  - * * empty: 0 1 0 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 19.800000	stackLen: 30 => 1.000000  V3  V0  - V0  - V0  V2  - * * empty: 0 1 0 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 19.800000	stackLen: 30 => 1.000000  V3  V0  - V0  - V0  V2  - * * empty: 0 1 0 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 19.800000	stackLen: 30 => 1.000000  V3  V0  - V0  - V0  V2  - * * empty: 0 1 0 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 19.800000	stackLen: 30 => 1.000000  V3  V0  - V0  - V0  V2  - * * empty: 0 1 0 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=18.3 stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 6 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 7 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 8 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 9 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 10 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 11 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V0  a / 1.000000  V3  i * V2  * + / empty: 0 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=18.0842 stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 18.084210	stackLen: 30 => 1.000000  1.000000  1.000000  + * r 1.000000  1.000000  / V0  a / 1.000000  V3  i * V2  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 16 32 38 11 14 40 24 51 94 39 
BEST SOLUTION! cost=28.3 stackLen: 30 => V5  V0  V0  * r V5  a V5  / * * V5  - V2  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 28.300000	stackLen: 30 => V5  V0  V0  * r V5  a V5  / * * V5  - V2  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 28.300000	stackLen: 30 => V5  V0  V0  * r V5  a V5  / * * V5  - V2  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 28.300000	stackLen: 30 => V5  V0  V0  * r V5  a V5  / * * V5  - V2  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 28.300000	stackLen: 30 => V5  V0  V0  * r V5  a V5  / * * V5  - V2  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=25.2414 stackLen: 30 => V2  1.000000  i V4  a V1  / * * V0  V4  + * V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 
iteration = 0 	 best= 25.241355	stackLen: 30 => V2  1.000000  i V4  a V1  / * * V0  V4  + * V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 
iteration = 1 	 best= 25.241355	stackLen: 30 => V2  1.000000  i V4  a V1  / * * V0  V4  + * V5  * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 0 
BEST SOLUTION! cost=17.9 stackLen: 30 => V2  V3  a r - i 1.000000  * V2  - V5  * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.900000	stackLen: 30 => V2  V3  a r - i 1.000000  * V2  - V5  * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.900000	stackLen: 30 => V2  V3  a r - i 1.000000  * V2  - V5  * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.900000	stackLen: 30 => V2  V3  a r - i 1.000000  * V2  - V5  * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.900000	stackLen: 30 => V2  V3  a r - i 1.000000  * V2  - V5  * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.900000	stackLen: 30 => V2  V3  a r - i 1.000000  * V2  - V5  * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.900000	stackLen: 30 => V2  V3  a r - i 1.000000  * V2  - V5  * empty: 0 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.5 stackLen: 30 => V2  V1  V3  - a r - i 1.000000  1.000000  1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.500000	stackLen: 30 => V2  V1  V3  - a r - i 1.000000  1.000000  1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.500000	stackLen: 30 => V2  V1  V3  - a r - i 1.000000  1.000000  1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.500000	stackLen: 30 => V2  V1  V3  - a r - i 1.000000  1.000000  1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.500000	stackLen: 30 => V2  V1  V3  - a r - i 1.000000  1.000000  1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.500000	stackLen: 30 => V2  V1  V3  - a r - i 1.000000  1.000000  1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.500000	stackLen: 30 => V2  V1  V3  - a r - i 1.000000  1.000000  1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.15 stackLen: 30 => V2  V2  + V1  V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 16.150000	stackLen: 30 => V2  V2  + V1  V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 16.150000	stackLen: 30 => V2  V2  + V1  V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 16.150000	stackLen: 30 => V2  V2  + V1  V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 16.150000	stackLen: 30 => V2  V2  + V1  V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 16.150000	stackLen: 30 => V2  V2  + V1  V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 16.150000	stackLen: 30 => V2  V2  + V1  V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=13.75 stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 13.750000	stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 13.750000	stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 13.750000	stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 13.750000	stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 13.750000	stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 13.750000	stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 13.750000	stackLen: 30 => V2  V2  + V1  V1  + V3  - a r - i 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=12.5 stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 12.500000	stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 88 23 63 10 81 2 96 56 3 84 
BEST SOLUTION! cost=21.6036 stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 1 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 2 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 3 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 4 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 5 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 6 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
iteration = 7 	 best= 21.603565	stackLen: 30 => 1.000000  e V1  / 1.000000  V1  / V1  V3  V5  + - V2  V2  + - - * empty: 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=21.3093 stackLen: 30 => 1.000000  1.000000  / e V1  / V1  V1  V5  V1  V3  V5  + + + - V2  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.309262	stackLen: 30 => 1.000000  1.000000  / e V1  / V1  V1  V5  V1  V3  V5  + + + - V2  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.309262	stackLen: 30 => 1.000000  1.000000  / e V1  / V1  V1  V5  V1  V3  V5  + + + - V2  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.309262	stackLen: 30 => 1.000000  1.000000  / e V1  / V1  V1  V5  V1  V3  V5  + + + - V2  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.309262	stackLen: 30 => 1.000000  1.000000  / e V1  / V1  V1  V5  V1  V3  V5  + + + - V2  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.309262	stackLen: 30 => 1.000000  1.000000  / e V1  / V1  V1  V5  V1  V3  V5  + + + - V2  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.309262	stackLen: 30 => 1.000000  1.000000  / e V1  / V1  V1  V5  V1  V3  V5  + + + - V2  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.9042 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.904189	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / / e V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=20.225 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 20.225000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / / a V1  / V1  V1  V5  V1  V3  V5  + + + - 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=19.3 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 19.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + / * a V1  / V1  V1  V5  V5  V3  V3  + + + + 1.000000  1.000000  V4  V2  - / / - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 90 26 64 48 91 61 39 32 63 41 
BEST SOLUTION! cost=47.1 stackLen: 30 => 1.000000  V4  * V2  a i i * V2  a V4  V0  V0  + - / * empty: 0 0 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 47.100000	stackLen: 30 => 1.000000  V4  * V2  a i i * V2  a V4  V0  V0  + - / * empty: 0 0 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=46.3919 stackLen: 30 => 1.000000  V3  / V0  V5  a 1.000000  a V5  * V2  * / * * empty: 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 46.391905	stackLen: 30 => 1.000000  V3  / V0  V5  a 1.000000  a V5  * V2  * / * * empty: 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=44.3 stackLen: 30 => 1.000000  1.000000  * 1.000000  a V4  1.000000  * a r V2  * i / / empty: 0 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 44.300000	stackLen: 30 => 1.000000  1.000000  * 1.000000  a V4  1.000000  * a r V2  * i / / empty: 0 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 
iteration = 1 	 best= 44.300000	stackLen: 30 => 1.000000  1.000000  * 1.000000  a V4  1.000000  * a r V2  * i / / empty: 0 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=36 stackLen: 30 => 1.000000  V1  V4  a 1.000000  * r V5  / V4  * * * empty: 0 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 0 1 0 0 1 
iteration = 0 	 best= 36.000000	stackLen: 30 => 1.000000  V1  V4  a 1.000000  * r V5  / V4  * * * empty: 0 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 0 1 0 0 1 
iteration = 1 	 best= 36.000000	stackLen: 30 => 1.000000  V1  V4  a 1.000000  * r V5  / V4  * * * empty: 0 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 0 1 0 0 1 
iteration = 2 	 best= 36.000000	stackLen: 30 => 1.000000  V1  V4  a 1.000000  * r V5  / V4  * * * empty: 0 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 0 1 0 0 1 
BEST SOLUTION! cost=35.6692 stackLen: 30 => 1.000000  V4  * V3  a V2  a + V5  a / * V5  * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 35.669248	stackLen: 30 => 1.000000  V4  * V3  a V2  a + V5  a / * V5  * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 35.669248	stackLen: 30 => 1.000000  V4  * V3  a V2  a + V5  a / * V5  * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 2 	 best= 35.669248	stackLen: 30 => 1.000000  V4  * V3  a V2  a + V5  a / * V5  * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 1 
iteration = 3 	 best= 35.669248	stackLen: 30 => 1.000000  V4  * V3  a V2  a + V5  a / * V5  * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=32.1772 stackLen: 30 => V2  a 1.000000  V2  a V1  / a i * * r 1.000000  * V0  V5  * * empty: 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 
iteration = 0 	 best= 32.177222	stackLen: 30 => V2  a 1.000000  V2  a V1  / a i * * r 1.000000  * V0  V5  * * empty: 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 
iteration = 1 	 best= 32.177222	stackLen: 30 => V2  a 1.000000  V2  a V1  / a i * * r 1.000000  * V0  V5  * * empty: 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 
iteration = 2 	 best= 32.177222	stackLen: 30 => V2  a 1.000000  V2  a V1  / a i * * r 1.000000  * V0  V5  * * empty: 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 
BEST SOLUTION! cost=31.7 stackLen: 30 => 1.000000  V4  a V5  a / r V5  V4  * * / empty: 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 31.700000	stackLen: 30 => 1.000000  V4  a V5  a / r V5  V4  * * / empty: 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
iteration = 1 	 best= 31.700000	stackLen: 30 => 1.000000  V4  a V5  a / r V5  V4  * * / empty: 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
iteration = 2 	 best= 31.700000	stackLen: 30 => 1.000000  V4  a V5  a / r V5  V4  * * / empty: 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
iteration = 3 	 best= 31.700000	stackLen: 30 => 1.000000  V4  a V5  a / r V5  V4  * * / empty: 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
iteration = 4 	 best= 31.700000	stackLen: 30 => 1.000000  V4  a V5  a / r V5  V4  * * / empty: 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
iteration = 5 	 best= 31.700000	stackLen: 30 => 1.000000  V4  a V5  a / r V5  V4  * * / empty: 0 1 1 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=30.5 stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 0 	 best= 30.500000	stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 1 	 best= 30.500000	stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 2 	 best= 30.500000	stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 3 	 best= 30.500000	stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 4 	 best= 30.500000	stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 5 	 best= 30.500000	stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 6 	 best= 30.500000	stackLen: 30 => 1.000000  V4  V4  V4  - + 1.000000  * a 1.000000  a / r V5  V4  V4  + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
BEST SOLUTION! cost=29.85 stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 0 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 1 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 2 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 3 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 4 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 5 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 6 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 7 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 8 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 9 	 best= 29.850000	stackLen: 30 => 1.000000  1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a 1.000000  a / r V5  V4  V4  V4  + + * * / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
BEST SOLUTION! cost=29.25 stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 29.250000	stackLen: 30 => 1.000000  1.000000  a 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V1  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=29.05 stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 29.050000	stackLen: 30 => 1.000000  1.000000  i 1.000000  + V4  V4  V4  - + 1.000000  1.000000  / * a V0  a / r V5  V4  V4  V4  + + * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 48 6 57 4 14 98 31 28 41 11 
BEST SOLUTION! cost=30.9291 stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 7 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 8 	 best= 30.929106	stackLen: 30 => V5  1.000000  1.000000  * e V4  / V1  - + a r V5  / 1.000000  * V1  * 1.000000  * V5  * empty: 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=28.4429 stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V0  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.442862	stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V0  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.442862	stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V0  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.442862	stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V0  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.442862	stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V0  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.442862	stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V0  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.442862	stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V0  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=24.8635 stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V5  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.863536	stackLen: 30 => V5  1.000000  1.000000  * 1.000000  * e V5  / V1  V1  + - + a 1.000000  V5  * 1.000000  * V4  * V5  * 1.000000  V5  / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=23.5733 stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 7 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 8 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 9 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 10 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 11 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 12 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 13 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 14 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
iteration = 15 	 best= 23.573306	stackLen: 30 => 1.000000  1.000000  e 1.000000  a / i r e r / V5  V1  i + V5  V5  + - / V4  * empty: 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=23.3787 stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 23.378688	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * a / i r i r + r V5  V1  i + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=21.9292 stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a i i r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.929157	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a i i r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.929157	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a i i r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.929157	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a i i r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.929157	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a i i r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.929157	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a i i r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.929157	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a i i r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.3517 stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 21.351744	stackLen: 30 => 1.000000  1.000000  / e i 1.000000  1.000000  r a * a e r r + r V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.35 stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 21.350000	stackLen: 30 => 1.000000  1.000000  / 1.000000  i 1.000000  1.000000  r a * a i r r + * V5  V1  i + V5  V5  + - / V0  V4  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.5
stackLen: 30 => V2  V2  + V0  V1  - V5  + V3  - a r - i 1.000000  1.000000  * 1.000000  1.000000  + 1.000000  / * * V2  1.000000  * - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (v5 * ((1 * v2) - (((1/(1 + 1)) * (1 * 1)) * ((\sqrt{{(v3 - (v5 + (v1 - v0)))^2}} - (v2 + v2))))))
Tempo de execucao: 1262.91 segundos
FIM
