Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 37 0 57 45 41 3 2 46 96 7 
BEST SOLUTION! cost=19.538 stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 19.537959	stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 19.537959	stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 19.537959	stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 19.537959	stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 19.537959	stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 5 	 best= 19.537959	stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 6 	 best= 19.537959	stackLen: 30 => 1.000000  e V0  / V0  * 1.000000  * V0  a * r i 1.000000  * empty: 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=19.4896 stackLen: 30 => 1.000000  e V0  / V0  V0  V0  - + * 1.000000  1.000000  V0  * a i 1.000000  * / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 0 	 best= 19.489636	stackLen: 30 => 1.000000  e V0  / V0  V0  V0  - + * 1.000000  1.000000  V0  * a i 1.000000  * / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 1 	 best= 19.489636	stackLen: 30 => 1.000000  e V0  / V0  V0  V0  - + * 1.000000  1.000000  V0  * a i 1.000000  * / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 2 	 best= 19.489636	stackLen: 30 => 1.000000  e V0  / V0  V0  V0  - + * 1.000000  1.000000  V0  * a i 1.000000  * / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 3 	 best= 19.489636	stackLen: 30 => 1.000000  e V0  / V0  V0  V0  - + * 1.000000  1.000000  V0  * a i 1.000000  * / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 4 	 best= 19.489636	stackLen: 30 => 1.000000  e V0  / V0  V0  V0  - + * 1.000000  1.000000  V0  * a i 1.000000  * / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
iteration = 5 	 best= 19.489636	stackLen: 30 => 1.000000  e V0  / V0  V0  V0  - + * 1.000000  1.000000  V0  * a i 1.000000  * / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 
BEST SOLUTION! cost=18.3176 stackLen: 30 => 1.000000  1.000000  / e V4  V0  V0  V0  - + * 1.000000  1.000000  V0  V0  * * a r 1.000000  * / - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 18.317567	stackLen: 30 => 1.000000  1.000000  / e V4  V0  V0  V0  - + * 1.000000  1.000000  V0  V0  * * a r 1.000000  * / - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 18.317567	stackLen: 30 => 1.000000  1.000000  / e V4  V0  V0  V0  - + * 1.000000  1.000000  V0  V0  * * a r 1.000000  * / - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 18.317567	stackLen: 30 => 1.000000  1.000000  / e V4  V0  V0  V0  - + * 1.000000  1.000000  V0  V0  * * a r 1.000000  * / - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 18.317567	stackLen: 30 => 1.000000  1.000000  / e V4  V0  V0  V0  - + * 1.000000  1.000000  V0  V0  * * a r 1.000000  * / - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 18.317567	stackLen: 30 => 1.000000  1.000000  / e V4  V0  V0  V0  - + * 1.000000  1.000000  V0  V0  * * a r 1.000000  * / - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 18.317567	stackLen: 30 => 1.000000  1.000000  / e V4  V0  V0  V0  - + * 1.000000  1.000000  V0  V0  * * a r 1.000000  * / - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=15.9844 stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.984418	stackLen: 30 => 1.000000  e V3  a V4  V0  V3  V0  V0  + - - * 1.000000  1.000000  / 1.000000  V0  V0  * r a * 1.000000  * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.4699 stackLen: 30 => 1.000000  e V3  a V2  V0  V3  V5  V0  + - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.469938	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  V5  V0  + - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.469938	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  V5  V0  + - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.469938	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  V5  V0  + - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.469938	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  V5  V0  + - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.469938	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  V5  V0  + - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.469938	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  V5  V0  + - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=13.5273 stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 13.527307	stackLen: 30 => 1.000000  e V3  a V2  V0  V3  1.000000  V0  / - - * 1.000000  1.000000  1.000000  1.000000  V0  V0  * r a * * * * - + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 78 53 94 49 60 24 88 41 1 79 
BEST SOLUTION! cost=49.8 stackLen: 30 => 1.000000  V1  / V0  V4  a V4  a / * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 0 
iteration = 0 	 best= 49.800000	stackLen: 30 => 1.000000  V1  / V0  V4  a V4  a / * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 0 0 
BEST SOLUTION! cost=45.1455 stackLen: 30 => V0  V3  V4  V2  - - a r V4  V0  V4  V2  - - * / * empty: 0 0 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 45.145482	stackLen: 30 => V0  V3  V4  V2  - - a r V4  V0  V4  V2  - - * / * empty: 0 0 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 45.145482	stackLen: 30 => V0  V3  V4  V2  - - a r V4  V0  V4  V2  - - * / * empty: 0 0 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 45.145482	stackLen: 30 => V0  V3  V4  V2  - - a r V4  V0  V4  V2  - - * / * empty: 0 0 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 45.145482	stackLen: 30 => V0  V3  V4  V2  - - a r V4  V0  V4  V2  - - * / * empty: 0 0 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=40.6183 stackLen: 30 => V3  V2  * V3  a V4  / * 1.000000  V5  / V5  V2  - - * empty: 0 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 40.618333	stackLen: 30 => V3  V2  * V3  a V4  / * 1.000000  V5  / V5  V2  - - * empty: 0 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=36.5 stackLen: 30 => 1.000000  V0  V1  a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 1 0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 
iteration = 0 	 best= 36.500000	stackLen: 30 => 1.000000  V0  V1  a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 1 0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 
iteration = 1 	 best= 36.500000	stackLen: 30 => 1.000000  V0  V1  a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 1 0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 
iteration = 2 	 best= 36.500000	stackLen: 30 => 1.000000  V0  V1  a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 1 0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 
iteration = 3 	 best= 36.500000	stackLen: 30 => 1.000000  V0  V1  a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 1 0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 
iteration = 4 	 best= 36.500000	stackLen: 30 => 1.000000  V0  V1  a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 1 0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 
iteration = 5 	 best= 36.500000	stackLen: 30 => 1.000000  V0  V1  a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 1 0 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 
BEST SOLUTION! cost=33.2 stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 33.200000	stackLen: 30 => 1.000000  V0  V1  V1  + a r + 1.000000  1.000000  1.000000  - i - V4  * * * empty: 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=31.3 stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 31.300000	stackLen: 30 => 1.000000  V0  V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / 1.000000  1.000000  / V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=30.8 stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 30.800000	stackLen: 30 => 1.000000  V0  V0  - V1  V1  + V1  V1  - + a r + 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * V2  / * - i / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=29.9704 stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 29.970415	stackLen: 30 => 1.000000  e V0  / V1  V1  + V1  V1  - + a r + 1.000000  1.000000  / * 1.000000  1.000000  1.000000  / V2  / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=27.9 stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 27.900000	stackLen: 30 => 1.000000  i V1  V3  V1  + V1  + a r + i 1.000000  * * 1.000000  1.000000  1.000000  / V5  V2  - / * - i i V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 74 5 23 95 29 94 21 38 67 63 
BEST SOLUTION! cost=20 stackLen: 30 => V3  1.000000  1.000000  r V2  1.000000  * / / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 20.000000	stackLen: 30 => V3  1.000000  1.000000  r V2  1.000000  * / / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=14.3 stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 14.300000	stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 14.300000	stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 14.300000	stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 14.300000	stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 14.300000	stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 14.300000	stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 6 	 best= 14.300000	stackLen: 30 => 1.000000  V5  V0  V2  - V4  V1  V4  - V0  + + + i * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=12.2667 stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 12.266667	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 12.266667	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 12.266667	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 12.266667	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 12.266667	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 12.266667	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 12.266667	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  - V4  V1  V4  - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=8.8 stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 8.800000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 8.800000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 8.800000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 8.800000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 8.800000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 8.800000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=7.98 stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 7.980000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 62 71 57 46 58 60 24 49 32 56 
BEST SOLUTION! cost=29.117 stackLen: 30 => V1  1.000000  * 1.000000  V3  a a r V2  V0  * V4  * / / * empty: 0 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 29.117007	stackLen: 30 => V1  1.000000  * 1.000000  V3  a a r V2  V0  * V4  * / / * empty: 0 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 29.117007	stackLen: 30 => V1  1.000000  * 1.000000  V3  a a r V2  V0  * V4  * / / * empty: 0 1 0 0 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25 stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
iteration = 0 	 best= 25.000000	stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
iteration = 1 	 best= 25.000000	stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
iteration = 2 	 best= 25.000000	stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
iteration = 3 	 best= 25.000000	stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
iteration = 4 	 best= 25.000000	stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
iteration = 5 	 best= 25.000000	stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
iteration = 6 	 best= 25.000000	stackLen: 30 => V3  1.000000  * V5  V5  * a r 1.000000  * r * empty: 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 1 
BEST SOLUTION! cost=23.5891 stackLen: 30 => V3  1.000000  V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 23.589104	stackLen: 30 => V3  1.000000  V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 23.589104	stackLen: 30 => V3  1.000000  V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 23.589104	stackLen: 30 => V3  1.000000  V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 23.589104	stackLen: 30 => V3  1.000000  V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 23.589104	stackLen: 30 => V3  1.000000  V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 23.589104	stackLen: 30 => V3  1.000000  V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=23.3195 stackLen: 30 => V3  1.000000  1.000000  + V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 23.319529	stackLen: 30 => V3  1.000000  1.000000  + V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 23.319529	stackLen: 30 => V3  1.000000  1.000000  + V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 23.319529	stackLen: 30 => V3  1.000000  1.000000  + V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 23.319529	stackLen: 30 => V3  1.000000  1.000000  + V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 23.319529	stackLen: 30 => V3  1.000000  1.000000  + V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 23.319529	stackLen: 30 => V3  1.000000  1.000000  + V1  / V5  - V5  * a r 1.000000  1.000000  1.000000  / * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.3537 stackLen: 30 => V3  1.000000  1.000000  / 1.000000  + V4  V1  - / V5  - V5  * a r 1.000000  1.000000  1.000000  * * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 22.353664	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  + V4  V1  - / V5  - V5  * a r 1.000000  1.000000  1.000000  * * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 22.353664	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  + V4  V1  - / V5  - V5  * a r 1.000000  1.000000  1.000000  * * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 22.353664	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  + V4  V1  - / V5  - V5  * a r 1.000000  1.000000  1.000000  * * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 22.353664	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  + V4  V1  - / V5  - V5  * a r 1.000000  1.000000  1.000000  * * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 22.353664	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  + V4  V1  - / V5  - V5  * a r 1.000000  1.000000  1.000000  * * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 22.353664	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  + V4  V1  - / V5  - V5  * a r 1.000000  1.000000  1.000000  * * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=19.4963 stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.496254	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  + V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  1.000000  * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.8147 stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.814720	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.814720	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.814720	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.814720	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.814720	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.814720	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e V4  V1  + / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.442 stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.442011	stackLen: 30 => V3  1.000000  1.000000  1.000000  1.000000  e 1.000000  V1  * / V5  V5  - V2  + - V5  * a r / 1.000000  r * * * r * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 40 7 23 96 92 61 42 3 89 19 
BEST SOLUTION! cost=44.9 stackLen: 30 => V1  V1  - V5  + V5  a r a V1  V4  * / V1  * * empty: 0 0 0 1 0 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 44.900000	stackLen: 30 => V1  V1  - V5  + V5  a r a V1  V4  * / V1  * * empty: 0 0 0 1 0 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=44.653 stackLen: 30 => V1  V2  - i 1.000000  V3  V2  a V5  a / * * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 44.652967	stackLen: 30 => V1  V2  - i 1.000000  V3  V2  a V5  a / * * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=15.6 stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 1 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 2 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 3 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 4 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 5 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 6 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 7 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 8 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 9 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 10 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 11 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 12 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 13 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 14 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 15 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 16 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 17 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 18 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 19 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 20 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 21 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 22 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 23 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 24 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 25 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 26 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 27 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 28 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 29 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 30 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 31 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 32 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 33 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 34 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 35 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 36 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 37 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 38 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 39 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 40 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 41 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 42 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 43 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 44 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 45 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 46 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 47 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 48 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 49 	 best= 15.600000	stackLen: 30 => V5  a V5  a V5  / V4  * * V2  1.000000  V3  1.000000  * / * + empty: 0 0 1 0 0 0 0 0 1 1 1 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=7.98
stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / - 1.000000  - V5  V0  V2  V2  + - V4  V1  V4  V4  + - V0  + + + i * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: ((((((v0 + ((v4 + v4) - v1)) + v4) + ((v2 + v2) - v0))) * v5)/(1 - ((1/(1 + (1 + 1))) - 1)))
Tempo de execucao: 1072.38 segundos
FIM
