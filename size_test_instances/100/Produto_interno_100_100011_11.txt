Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 27 86 38 9 74 89 19 34 50 67 
BEST SOLUTION! cost=26.9703 stackLen: 30 => 1.000000  e a a V3  / 1.000000  V4  / V4  V2  + - - V3  * empty: 0 0 1 1 1 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 26.970319	stackLen: 30 => 1.000000  e a a V3  / 1.000000  V4  / V4  V2  + - - V3  * empty: 0 0 1 1 1 1 0 0 0 0 0 1 0 1 0 1 1 1 0 0 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=26.7 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
iteration = 0 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
iteration = 1 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
iteration = 2 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
iteration = 3 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
iteration = 4 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
iteration = 5 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
iteration = 6 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * i * V5  V2  V3  + - * V5  * empty: 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 0 1 0 0 0 0 1 0 1 
BEST SOLUTION! cost=24 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r * V5  V2  V3  V4  V4  V4  + - + + - * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.3706 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.370580	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  + * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20.1336 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 20.133640	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * r e * r r V5  V2  V3  V4  V4  V1  - V4  V4  + - - + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 98 26 86 0 56 95 65 66 97 9 
BEST SOLUTION! cost=25.5641 stackLen: 30 => 1.000000  e r V2  V0  * a / r empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 25.564070	stackLen: 30 => 1.000000  e r V2  V0  * a / r empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 25.564070	stackLen: 30 => 1.000000  e r V2  V0  * a / r empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 25.564070	stackLen: 30 => 1.000000  e r V2  V0  * a / r empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 25.564070	stackLen: 30 => 1.000000  e r V2  V0  * a / r empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=22.3472 stackLen: 30 => V3  V5  - V1  - V4  1.000000  e V2  1.000000  V0  V3  - * V3  - + / i - * empty: 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 22.347152	stackLen: 30 => V3  V5  - V1  - V4  1.000000  e V2  1.000000  V0  V3  - * V3  - + / i - * empty: 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 22.347152	stackLen: 30 => V3  V5  - V1  - V4  1.000000  e V2  1.000000  V0  V3  - * V3  - + / i - * empty: 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 22.347152	stackLen: 30 => V3  V5  - V1  - V4  1.000000  e V2  1.000000  V0  V3  - * V3  - + / i - * empty: 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 22.347152	stackLen: 30 => V3  V5  - V1  - V4  1.000000  e V2  1.000000  V0  V3  - * V3  - + / i - * empty: 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 22.347152	stackLen: 30 => V3  V5  - V1  - V4  1.000000  e V2  1.000000  V0  V3  - * V3  - + / i - * empty: 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 22.347152	stackLen: 30 => V3  V5  - V1  - V4  1.000000  e V2  1.000000  V0  V3  - * V3  - + / i - * empty: 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=17.1695 stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.169482	stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 96 60 80 36 52 42 49 94 9 62 
BEST SOLUTION! cost=39.075 stackLen: 30 => 1.000000  1.000000  / V4  V4  V1  + * V5  a V5  / * * V4  * empty: 0 0 1 1 0 0 1 0 1 0 1 0 1 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 39.075000	stackLen: 30 => 1.000000  1.000000  / V4  V4  V1  + * V5  a V5  / * * V4  * empty: 0 0 1 1 0 0 1 0 1 0 1 0 1 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=30.7 stackLen: 30 => V2  1.000000  1.000000  / a a V0  V0  V3  + - / * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 30.700000	stackLen: 30 => V2  1.000000  1.000000  / a a V0  V0  V3  + - / * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 30.700000	stackLen: 30 => V2  1.000000  1.000000  / a a V0  V0  V3  + - / * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 30.700000	stackLen: 30 => V2  1.000000  1.000000  / a a V0  V0  V3  + - / * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 30.700000	stackLen: 30 => V2  1.000000  1.000000  / a a V0  V0  V3  + - / * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 30.700000	stackLen: 30 => V2  1.000000  1.000000  / a a V0  V0  V3  + - / * empty: 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=25.5 stackLen: 30 => V5  1.000000  V5  * - V0  V3  V0  V4  + - - + V0  + V3  * empty: 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 25.500000	stackLen: 30 => V5  1.000000  V5  * - V0  V3  V0  V4  + - - + V0  + V3  * empty: 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 25.500000	stackLen: 30 => V5  1.000000  V5  * - V0  V3  V0  V4  + - - + V0  + V3  * empty: 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 25.500000	stackLen: 30 => V5  1.000000  V5  * - V0  V3  V0  V4  + - - + V0  + V3  * empty: 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 25.500000	stackLen: 30 => V5  1.000000  V5  * - V0  V3  V0  V4  + - - + V0  + V3  * empty: 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 4 	 best= 25.500000	stackLen: 30 => V5  1.000000  V5  * - V0  V3  V0  V4  + - - + V0  + V3  * empty: 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 5 	 best= 25.500000	stackLen: 30 => V5  1.000000  V5  * - V0  V3  V0  V4  + - - + V0  + V3  * empty: 0 1 0 0 0 0 0 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=22.45 stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 22.450000	stackLen: 30 => V5  1.000000  1.000000  + V5  / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.3 stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.300000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V5  + / - V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.9 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  / - 1.000000  - + V4  V0  + / / V0  V3  V0  V0  - - - + V0  V0  + + V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 81 23 90 42 48 70 50 63 37 21 
BEST SOLUTION! cost=30.4 stackLen: 30 => V0  V4  + i V4  - 1.000000  * 1.000000  1.000000  a i * V2  i i / * empty: 0 1 0 0 0 1 1 0 0 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 30.400000	stackLen: 30 => V0  V4  + i V4  - 1.000000  * 1.000000  1.000000  a i * V2  i i / * empty: 0 1 0 0 0 1 1 0 0 0 1 0 0 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=21.9 stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 0 	 best= 21.900000	stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 1 	 best= 21.900000	stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 2 	 best= 21.900000	stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 3 	 best= 21.900000	stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 4 	 best= 21.900000	stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 5 	 best= 21.900000	stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 6 	 best= 21.900000	stackLen: 30 => V3  1.000000  1.000000  1.000000  * V2  i * * * empty: 0 1 1 0 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1 0 0 1 
BEST SOLUTION! cost=20.0563 stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 20.056349	stackLen: 30 => V3  1.000000  * 1.000000  * 1.000000  * 1.000000  1.000000  1.000000  1.000000  / + r * V4  V2  - i / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=19.85 stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 19.850000	stackLen: 30 => V2  i V2  V2  + a 1.000000  1.000000  1.000000  * / / V3  V5  - 1.000000  1.000000  / V2  1.000000  * i * V4  - * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 62 23 54 97 35 77 53 42 24 11 
BEST SOLUTION! cost=45.8838 stackLen: 30 => 1.000000  V3  a * V3  / V0  * V4  V0  V2  - * * empty: 0 1 0 0 0 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 45.883810	stackLen: 30 => 1.000000  V3  a * V3  / V0  * V4  V0  V2  - * * empty: 0 1 0 0 0 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=45.2 stackLen: 30 => V4  a V4  a 1.000000  V2  V2  * / / * empty: 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 45.200000	stackLen: 30 => V4  a V4  a 1.000000  V2  V2  * / / * empty: 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=35.1 stackLen: 30 => 1.000000  V4  V4  1.000000  1.000000  V4  / V1  - V5  - / - * * empty: 0 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 35.100000	stackLen: 30 => 1.000000  V4  V4  1.000000  1.000000  V4  / V1  - V5  - / - * * empty: 0 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 35.100000	stackLen: 30 => 1.000000  V4  V4  1.000000  1.000000  V4  / V1  - V5  - / - * * empty: 0 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 1 0 0 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=34.6524 stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 34.652360	stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
iteration = 1 	 best= 34.652360	stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
iteration = 2 	 best= 34.652360	stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
iteration = 3 	 best= 34.652360	stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
iteration = 4 	 best= 34.652360	stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
iteration = 5 	 best= 34.652360	stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
iteration = 6 	 best= 34.652360	stackLen: 30 => V5  a V3  / V2  V0  V2  V3  - V0  + * * * empty: 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=34.5013 stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  a 1.000000  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 34.501324	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  a 1.000000  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 34.501324	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  a 1.000000  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 34.501324	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  a 1.000000  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 34.501324	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  a 1.000000  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 34.501324	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  a 1.000000  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 34.501324	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  a 1.000000  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=32.6696 stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  / 1.000000  e * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 32.669602	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  / 1.000000  e * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 32.669602	stackLen: 30 => V5  V5  + a V3  / V2  V0  V2  V3  - V0  V0  V0  - + + * * * 1.000000  1.000000  1.000000  / 1.000000  e * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=28.1 stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
iteration = 0 	 best= 28.100000	stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
iteration = 1 	 best= 28.100000	stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
iteration = 2 	 best= 28.100000	stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
iteration = 3 	 best= 28.100000	stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
iteration = 4 	 best= 28.100000	stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
iteration = 5 	 best= 28.100000	stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
iteration = 6 	 best= 28.100000	stackLen: 30 => V4  V5  1.000000  V2  a V2  / * * * V3  + V2  * empty: 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 0 0 1 0 1 0 0 1 
BEST SOLUTION! cost=28 stackLen: 30 => V4  V5  1.000000  1.000000  + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 28.000000	stackLen: 30 => V4  V5  1.000000  1.000000  + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 28.000000	stackLen: 30 => V4  V5  1.000000  1.000000  + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 28.000000	stackLen: 30 => V4  V5  1.000000  1.000000  + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 28.000000	stackLen: 30 => V4  V5  1.000000  1.000000  + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 28.000000	stackLen: 30 => V4  V5  1.000000  1.000000  + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 28.000000	stackLen: 30 => V4  V5  1.000000  1.000000  + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.725 stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 25.725000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  * 1.000000  * + V2  V2  + a V2  / * * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=23.425 stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 23.425000	stackLen: 30 => V4  V4  V5  V5  + - 1.000000  V5  / 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.725 stackLen: 30 => V4  V4  V5  V5  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.725000	stackLen: 30 => V4  V4  V5  V5  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.725000	stackLen: 30 => V4  V4  V5  V5  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.725000	stackLen: 30 => V4  V4  V5  V5  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.725000	stackLen: 30 => V4  V4  V5  V5  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.725000	stackLen: 30 => V4  V4  V5  V5  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.725000	stackLen: 30 => V4  V4  V5  V5  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.65 stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 21.650000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * 1.000000  * + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.85 stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.850000	stackLen: 30 => V4  V4  V5  V2  + - V0  V5  - 1.000000  1.000000  / a * + V5  + V2  V2  + a V2  / * * V2  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=17.1695
stackLen: 30 => V3  V5  - V1  - V4  1.000000  1.000000  + 1.000000  1.000000  * * e V2  1.000000  V0  V3  V3  + - * V2  - + / i - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((((v2 - (((v3 + v3) - v0) * 1)) + v2)/\exp(((1 * 1) * (1 + 1))))) - v4) * (v1 - (v5 - v3)))
Tempo de execucao: 1196.03 segundos
FIM
