Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 82 57 95 2 5 23 11 50 63 85 
BEST SOLUTION! cost=18.1 stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 0 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 1 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 2 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 3 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 4 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 5 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 6 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 7 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 8 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 9 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 10 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
iteration = 11 	 best= 18.100000	stackLen: 30 => V3  V3  * V2  V3  * i 1.000000  V3  a / * / empty: 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 
BEST SOLUTION! cost=14.1667 stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 14.166667	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 14.166667	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 14.166667	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 14.166667	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 14.166667	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 14.166667	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=13.2 stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  V4  + - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 13.200000	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  V4  + - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 13.200000	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  V4  + - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 13.200000	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  V4  + - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 13.200000	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  V4  + - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 13.200000	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  V4  + - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 13.200000	stackLen: 30 => V3  V3  V3  + V3  + * V2  V4  V4  + - V2  - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=11.575 stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 11.575000	stackLen: 30 => V3  V3  V3  + V3  V3  + + * V2  V4  V4  + - V2  V2  + - V3  * i i 1.000000  1.000000  * V3  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 77 20 34 32 73 69 26 39 60 66 
BEST SOLUTION! cost=26.9139 stackLen: 30 => 1.000000  e 1.000000  V0  * / V2  1.000000  V5  * - * empty: 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 26.913929	stackLen: 30 => 1.000000  e 1.000000  V0  * / V2  1.000000  V5  * - * empty: 0 1 0 0 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=22.9712 stackLen: 30 => V5  1.000000  1.000000  i i 1.000000  + i r V2  V0  + / * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 22.971216	stackLen: 30 => V5  1.000000  1.000000  i i 1.000000  + i r V2  V0  + / * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=19.2835 stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 19.283464	stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 19.283464	stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
iteration = 2 	 best= 19.283464	stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
iteration = 3 	 best= 19.283464	stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
iteration = 4 	 best= 19.283464	stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
iteration = 5 	 best= 19.283464	stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
iteration = 6 	 best= 19.283464	stackLen: 30 => 1.000000  e a i r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 1 0 1 1 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=19.1923 stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 19.192327	stackLen: 30 => 1.000000  1.000000  - 1.000000  - e r e r V2  / a 1.000000  V5  V3  + V2  * i / - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.4528 stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  + - e r e r r 1.000000  a 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.452775	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  + - e r e r r 1.000000  a 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.452775	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  + - e r e r r 1.000000  a 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.452775	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  + - e r e r r 1.000000  a 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.452775	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  + - e r e r r 1.000000  a 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.452775	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  + - e r e r r 1.000000  a 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.452775	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  + - e r e r r 1.000000  a 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=14.6347 stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.634730	stackLen: 30 => 1.000000  1.000000  - 1.000000  1.000000  * * e r i r r 1.000000  e 1.000000  V5  V3  + V2  V5  V2  - + * i / i / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=14.4962 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * * e r i r r 1.000000  e V5  V3  + V2  V2  + V5  V4  - + * / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.496182	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * * e r i r r 1.000000  e V5  V3  + V2  V2  + V5  V4  - + * / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.496182	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * * e r i r r 1.000000  e V5  V3  + V2  V2  + V5  V4  - + * / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.496182	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * * e r i r r 1.000000  e V5  V3  + V2  V2  + V5  V4  - + * / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.496182	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * * e r i r r 1.000000  e V5  V3  + V2  V2  + V5  V4  - + * / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.496182	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * * e r i r r 1.000000  e V5  V3  + V2  V2  + V5  V4  - + * / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.496182	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * * e r i r r 1.000000  e V5  V3  + V2  V2  + V5  V4  - + * / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=13.7057 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * e r r r r 1.000000  e V5  V3  + V2  V2  + V0  V4  V4  + - + * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.705737	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * e r r r r 1.000000  e V5  V3  + V2  V2  + V0  V4  V4  + - + * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.705737	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * e r r r r 1.000000  e V5  V3  + V2  V2  + V0  V4  V4  + - + * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.705737	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * e r r r r 1.000000  e V5  V3  + V2  V2  + V0  V4  V4  + - + * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.705737	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * e r r r r 1.000000  e V5  V3  + V2  V2  + V0  V4  V4  + - + * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.705737	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * e r r r r 1.000000  e V5  V3  + V2  V2  + V0  V4  V4  + - + * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.705737	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * e r r r r 1.000000  e V5  V3  + V2  V2  + V0  V4  V4  + - + * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.2803 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.280301	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * * r r r r r 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.2396 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 11.239583	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 58 96 32 4 56 17 31 1 44 7 
BEST SOLUTION! cost=29.8 stackLen: 30 => V5  V5  - a r V4  1.000000  * * empty: 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 
iteration = 0 	 best= 29.800000	stackLen: 30 => V5  V5  - a r V4  1.000000  * * empty: 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 
BEST SOLUTION! cost=25.6 stackLen: 30 => V1  a V1  / V4  i V4  V5  - V5  * * * empty: 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 25.600000	stackLen: 30 => V1  a V1  / V4  i V4  V5  - V5  * * * empty: 0 1 1 1 0 0 0 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=24.2 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  V4  1.000000  * * / * V1  * empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 24.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  V4  1.000000  * * / * V1  * empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 24.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  V4  1.000000  * * / * V1  * empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 
iteration = 2 	 best= 24.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  V4  1.000000  * * / * V1  * empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=15.5 stackLen: 30 => 1.000000  V0  V2  - / V3  a r * empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 15.500000	stackLen: 30 => 1.000000  V0  V2  - / V3  a r * empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 15.500000	stackLen: 30 => 1.000000  V0  V2  - / V3  a r * empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 15.500000	stackLen: 30 => 1.000000  V0  V2  - / V3  a r * empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 15.500000	stackLen: 30 => 1.000000  V0  V2  - / V3  a r * empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 15.500000	stackLen: 30 => 1.000000  V0  V2  - / V3  a r * empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 15.500000	stackLen: 30 => 1.000000  V0  V2  - / V3  a r * empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=12.04 stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 10 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 11 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 12 	 best= 12.040000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  1.000000  * + 1.000000  + V0  V0  + V2  V2  + - / V3  a r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=11.725 stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 0 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 1 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 2 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 3 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 4 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 5 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 6 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 7 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 8 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 9 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 10 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 11 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 12 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 13 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 14 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 15 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 16 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 17 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 18 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 19 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 20 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 21 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 22 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 23 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 24 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 25 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 26 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 27 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 28 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 29 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 30 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 31 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 32 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 33 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 34 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 35 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 36 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 37 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 38 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 39 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 40 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 41 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 42 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 43 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 44 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 45 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 46 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 47 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 48 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
iteration = 49 	 best= 11.725000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  + 1.000000  1.000000  1.000000  + V0  V0  + V0  V2  - V2  V2  + - - / V3  a r * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 46 42 11 55 8 22 29 54 52 95 
BEST SOLUTION! cost=26.456 stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 0 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 1 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 2 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 3 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 4 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 5 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 6 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 7 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 8 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 9 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 10 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 11 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 12 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
iteration = 13 	 best= 26.456032	stackLen: 30 => 1.000000  V2  a V5  / V0  V2  i + V4  V2  * * * * empty: 0 1 1 0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 0 1 0 0 1 1 0 
BEST SOLUTION! cost=24.6042 stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 24 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 25 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 26 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 27 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 28 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 29 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 30 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 31 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 32 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 33 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 34 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 35 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 36 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 37 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 38 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 39 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 40 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 41 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 42 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 43 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 44 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 45 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 46 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 47 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 48 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 49 	 best= 24.604206	stackLen: 30 => 1.000000  V2  V2  + a V5  / V0  V2  V2  V2  - + V2  + i + V4  V4  + V2  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 51 87 3 22 33 25 43 35 53 91 
BEST SOLUTION! cost=36.9 stackLen: 30 => 1.000000  V5  a V3  a 1.000000  a / V5  1.000000  V5  / * / / * empty: 0 1 0 0 1 1 0 0 1 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 36.900000	stackLen: 30 => 1.000000  V5  a V3  a 1.000000  a / V5  1.000000  V5  / * / / * empty: 0 1 0 0 1 1 0 0 1 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=31.0194 stackLen: 30 => V3  a r V0  - 1.000000  e 1.000000  * * V1  * empty: 0 1 0 0 0 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 0 
iteration = 0 	 best= 31.019382	stackLen: 30 => V3  a r V0  - 1.000000  e 1.000000  * * V1  * empty: 0 1 0 0 0 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 0 
BEST SOLUTION! cost=29.8717 stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 29.871686	stackLen: 30 => V3  1.000000  1.000000  + r V0  / V2  a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 1 1 0 0 0 1 1 0 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=29.5959 stackLen: 30 => V3  1.000000  1.000000  1.000000  + + * 1.000000  V0  * V2  V2  + a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 29.595926	stackLen: 30 => V3  1.000000  1.000000  1.000000  + + * 1.000000  V0  * V2  V2  + a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 29.595926	stackLen: 30 => V3  1.000000  1.000000  1.000000  + + * 1.000000  V0  * V2  V2  + a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 29.595926	stackLen: 30 => V3  1.000000  1.000000  1.000000  + + * 1.000000  V0  * V2  V2  + a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 29.595926	stackLen: 30 => V3  1.000000  1.000000  1.000000  + + * 1.000000  V0  * V2  V2  + a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 29.595926	stackLen: 30 => V3  1.000000  1.000000  1.000000  + + * 1.000000  V0  * V2  V2  + a 1.000000  / * i * V5  V0  + V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=22.1219 stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  / 1.000000  1.000000  + * 1.000000  r a * * V4  * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 22.121905	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  / 1.000000  1.000000  + * 1.000000  r a * * V4  * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 22.121905	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  / 1.000000  1.000000  + * 1.000000  r a * * V4  * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 22.121905	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  / 1.000000  1.000000  + * 1.000000  r a * * V4  * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 22.121905	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  / 1.000000  1.000000  + * 1.000000  r a * * V4  * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 22.121905	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  / 1.000000  1.000000  + * 1.000000  r a * * V4  * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 22.121905	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  / 1.000000  1.000000  + * 1.000000  r a * * V4  * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=22.099 stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 22.099048	stackLen: 30 => V1  a a r V5  * V5  a a r 1.000000  1.000000  * / 1.000000  1.000000  - 1.000000  + * 1.000000  r a * * V5  V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=11.2396
stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * + r r r r i 1.000000  e V5  V3  + V2  V2  + V1  V4  V4  + + + * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((((v4 + v4) + v1) + (v2 + v2)) * (v3 + v5))/\exp(1)) * (\sqrt{\sqrt{\sqrt{\sqrt{((1 * 1) + 1)}}}})) * 1)
Tempo de execucao: 1268.9 segundos
FIM
