Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 20 45 84 58 60 68 9 0 27 74 
BEST SOLUTION! cost=38.1 stackLen: 30 => V0  V5  a V2  V2  - r / V3  * V5  * a * empty: 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 1 0 1 0 1 
iteration = 0 	 best= 38.100000	stackLen: 30 => V0  V5  a V2  V2  - r / V3  * V5  * a * empty: 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1 1 0 1 0 1 
BEST SOLUTION! cost=19.2 stackLen: 30 => 1.000000  V2  V3  V4  - * 1.000000  V2  * 1.000000  * 1.000000  V4  / * - * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 
iteration = 0 	 best= 19.200000	stackLen: 30 => 1.000000  V2  V3  V4  - * 1.000000  V2  * 1.000000  * 1.000000  V4  / * - * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 
iteration = 1 	 best= 19.200000	stackLen: 30 => 1.000000  V2  V3  V4  - * 1.000000  V2  * 1.000000  * 1.000000  V4  / * - * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 
iteration = 2 	 best= 19.200000	stackLen: 30 => 1.000000  V2  V3  V4  - * 1.000000  V2  * 1.000000  * 1.000000  V4  / * - * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 
iteration = 3 	 best= 19.200000	stackLen: 30 => 1.000000  V2  V3  V4  - * 1.000000  V2  * 1.000000  * 1.000000  V4  / * - * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 
iteration = 4 	 best= 19.200000	stackLen: 30 => 1.000000  V2  V3  V4  - * 1.000000  V2  * 1.000000  * 1.000000  V4  / * - * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 
iteration = 5 	 best= 19.200000	stackLen: 30 => 1.000000  V2  V3  V4  - * 1.000000  V2  * 1.000000  * 1.000000  V4  / * - * empty: 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 1 
BEST SOLUTION! cost=16.1 stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 16.100000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  a V4  * 1.000000  1.000000  + * 1.000000  1.000000  + V5  / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=15.45 stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  * * 1.000000  1.000000  + V5  V5  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 15.450000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  * * 1.000000  1.000000  + V5  V5  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 15.450000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  * * 1.000000  1.000000  + V5  V5  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 15.450000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  * * 1.000000  1.000000  + V5  V5  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 15.450000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  * * 1.000000  1.000000  + V5  V5  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 15.450000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  * * 1.000000  1.000000  + V5  V5  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 15.450000	stackLen: 30 => 1.000000  V2  V3  V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  * * 1.000000  1.000000  + V5  V5  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=15.1 stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.100000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.100000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.100000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.100000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.100000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.100000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V4  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.95 stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 14.950000	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / * 1.000000  1.000000  + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=13.9667 stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 13.966667	stackLen: 30 => 1.000000  V2  V3  V1  + V4  V4  - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + + V5  V0  - V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=13.0083 stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.008306	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  * e V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.925 stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.925000	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  + a V5  / V5  - / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.8011 stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.801102	stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 51 46 69 41 45 25 8 89 10 9 
BEST SOLUTION! cost=35.6 stackLen: 30 => V5  a V5  V2  + / V0  V3  + V5  a * * empty: 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 1 
iteration = 0 	 best= 35.600000	stackLen: 30 => V5  a V5  V2  + / V0  V3  + V5  a * * empty: 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 1 
BEST SOLUTION! cost=32.8162 stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
iteration = 0 	 best= 32.816164	stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
iteration = 1 	 best= 32.816164	stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
iteration = 2 	 best= 32.816164	stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
iteration = 3 	 best= 32.816164	stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
iteration = 4 	 best= 32.816164	stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
iteration = 5 	 best= 32.816164	stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
iteration = 6 	 best= 32.816164	stackLen: 30 => 1.000000  V1  1.000000  i e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 1 1 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 1 0 0 1 
BEST SOLUTION! cost=32.5652 stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 32.565154	stackLen: 30 => 1.000000  1.000000  / V1  1.000000  1.000000  1.000000  + / r e r V4  / V0  1.000000  V4  * + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=32.281 stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  / / r e r r a V1  V0  - 1.000000  V3  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 32.280981	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  / / r e r r a V1  V0  - 1.000000  V3  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 32.280981	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  / / r e r r a V1  V0  - 1.000000  V3  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 32.280981	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  / / r e r r a V1  V0  - 1.000000  V3  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 32.280981	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  / / r e r r a V1  V0  - 1.000000  V3  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 32.280981	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  / / r e r r a V1  V0  - 1.000000  V3  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 32.280981	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  / / r e r r a V1  V0  - 1.000000  V3  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=30.0205 stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  + / r e r r i V1  V0  - 1.000000  V0  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 30.020455	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  + / r e r r i V1  V0  - 1.000000  V0  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 30.020455	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  + / r e r r i V1  V0  - 1.000000  V0  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 30.020455	stackLen: 30 => 1.000000  1.000000  / V2  V1  + 1.000000  1.000000  1.000000  + / r e r r i V1  V0  - 1.000000  V0  V4  V3  - + / + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=28.3 stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 1 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 2 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 3 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 4 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 5 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 6 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 7 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 8 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 9 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 10 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 11 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 12 	 best= 28.300000	stackLen: 30 => V2  V0  - 1.000000  1.000000  V3  / V1  - / * empty: 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=26.6 stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 26.600000	stackLen: 30 => V2  V0  - 1.000000  1.000000  / 1.000000  V4  V3  - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.75 stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 25.750000	stackLen: 30 => V2  V0  - 1.000000  1.000000  + 1.000000  1.000000  * V4  V3  V3  + - / V1  V1  + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.05 stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 25.050000	stackLen: 30 => V2  V0  - 1.000000  1.000000  * 1.000000  + 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V4  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=24.9041 stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.904116	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.904116	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.904116	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.904116	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.904116	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.904116	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V4  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=24.7192 stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 24.719221	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V1  V1  V1  + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=24.1601 stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 24.160125	stackLen: 30 => V2  V0  - i 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V0  V1  V1  + - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=23.0647 stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 23.064719	stackLen: 30 => V2  V0  - 1.000000  * 1.000000  e 1.000000  1.000000  * 1.000000  V2  * * V1  V3  V3  + - - V4  V1  V1  V1  + + + - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 66 98 85 52 48 87 23 72 91 51 
BEST SOLUTION! cost=39.1159 stackLen: 30 => 1.000000  V3  a V3  V2  * V0  a * / * empty: 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 0 	 best= 39.115873	stackLen: 30 => 1.000000  V3  a V3  V2  * V0  a * / * empty: 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 1 	 best= 39.115873	stackLen: 30 => 1.000000  V3  a V3  V2  * V0  a * / * empty: 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 2 	 best= 39.115873	stackLen: 30 => 1.000000  V3  a V3  V2  * V0  a * / * empty: 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 3 	 best= 39.115873	stackLen: 30 => 1.000000  V3  a V3  V2  * V0  a * / * empty: 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 4 	 best= 39.115873	stackLen: 30 => 1.000000  V3  a V3  V2  * V0  a * / * empty: 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 5 	 best= 39.115873	stackLen: 30 => 1.000000  V3  a V3  V2  * V0  a * / * empty: 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
BEST SOLUTION! cost=38.096 stackLen: 30 => 1.000000  V3  a V3  V3  + V2  * V0  a * / * empty: 0 1 1 1 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 38.096032	stackLen: 30 => 1.000000  V3  a V3  V3  + V2  * V0  a * / * empty: 0 1 1 1 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 38.096032	stackLen: 30 => 1.000000  V3  a V3  V3  + V2  * V0  a * / * empty: 0 1 1 1 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 38.096032	stackLen: 30 => 1.000000  V3  a V3  V3  + V2  * V0  a * / * empty: 0 1 1 1 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=35.5 stackLen: 30 => 1.000000  1.000000  i i V4  1.000000  * i V0  + / V5  * / empty: 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  i i V4  1.000000  * i V0  + / V5  * / empty: 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=24.0345 stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 0 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 1 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 2 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 3 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 4 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 5 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 6 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 7 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 8 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 9 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 10 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 11 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 12 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 13 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 14 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 15 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 16 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 17 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 18 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 19 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 20 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 21 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 22 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 23 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 24 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 25 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 26 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 27 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 28 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 29 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 30 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 31 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 32 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 33 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 34 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 35 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 36 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 37 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 38 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 39 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 40 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 41 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 42 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 43 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 44 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 45 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 46 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 47 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 48 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
iteration = 49 	 best= 24.034466	stackLen: 30 => V5  V3  a 1.000000  / 1.000000  V0  * a * 1.000000  V4  / * * empty: 0 0 1 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 0 0 1 0 1 1 1 1 1 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 28 96 46 42 67 15 13 14 45 8 
BEST SOLUTION! cost=33.9779 stackLen: 30 => 1.000000  1.000000  e r * 1.000000  V4  V5  i * * * empty: 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 0 
iteration = 0 	 best= 33.977928	stackLen: 30 => 1.000000  1.000000  e r * 1.000000  V4  V5  i * * * empty: 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 0 
BEST SOLUTION! cost=29.7 stackLen: 30 => V5  a r 1.000000  V4  V3  + V1  - * * empty: 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 29.700000	stackLen: 30 => V5  a r 1.000000  V4  V3  + V1  - * * empty: 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 29.700000	stackLen: 30 => V5  a r 1.000000  V4  V3  + V1  - * * empty: 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 29.700000	stackLen: 30 => V5  a r 1.000000  V4  V3  + V1  - * * empty: 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 29.700000	stackLen: 30 => V5  a r 1.000000  V4  V3  + V1  - * * empty: 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 29.700000	stackLen: 30 => V5  a r 1.000000  V4  V3  + V1  - * * empty: 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 29.700000	stackLen: 30 => V5  a r 1.000000  V4  V3  + V1  - * * empty: 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=24.2 stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.200000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.200000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.200000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.200000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.200000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.200000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 24.200000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.95 stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 18 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 19 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 20 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 21 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 22 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 23 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 24 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 25 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 26 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 27 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 28 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 29 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 30 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 31 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 32 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 33 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 34 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 35 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 36 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 37 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 38 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 39 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 40 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 41 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 42 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 43 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 44 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 45 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 46 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 47 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 48 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 49 	 best= 17.950000	stackLen: 30 => V5  V5  - a r 1.000000  1.000000  / 1.000000  1.000000  1.000000  / 1.000000  + * * V4  V3  V0  + - / + V1  - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 92 67 62 23 26 33 81 73 36 7 
BEST SOLUTION! cost=38.7038 stackLen: 30 => V0  V1  - V0  + V2  + V0  1.000000  V5  a r V0  / / * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 38.703770	stackLen: 30 => V0  V1  - V0  + V2  + V0  1.000000  V5  a r V0  / / * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=26.8786 stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  V5  / / * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 26.878571	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  V5  / / * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 26.878571	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  V5  / / * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 26.878571	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  V5  / / * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 26.878571	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  V5  / / * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 26.878571	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  V5  / / * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 26.878571	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  V5  / / * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=25.3552 stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  1.000000  + V5  / / * * * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.355159	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  1.000000  + V5  / / * * * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.355159	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  1.000000  + V5  / / * * * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.355159	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  1.000000  + V5  / / * * * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.355159	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  1.000000  + V5  / / * * * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.355159	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  1.000000  + V5  / / * * * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 25.355159	stackLen: 30 => V0  V4  V5  a r V0  / a V0  a r 1.000000  1.000000  + V5  / / * * * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.6021 stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 0 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 1 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 2 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 3 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 4 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 5 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 6 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 7 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 8 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 9 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 10 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 11 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 12 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 13 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 14 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 15 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 16 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 17 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 18 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 19 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 20 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 21 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 22 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 23 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 24 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 25 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 26 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 27 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 28 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 29 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 30 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 31 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 32 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 33 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 34 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 35 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 36 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 37 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 38 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 39 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 40 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 41 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 42 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 43 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 44 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 45 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 46 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 47 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 48 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 49 	 best= 18.602128	stackLen: 30 => V0  V0  * V4  V4  a r V0  V5  a a a r 1.000000  1.000000  1.000000  / 1.000000  * + V5  / / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.8011
stackLen: 30 => 1.000000  V2  V3  V1  i V4  i - - * 1.000000  r V3  * 1.000000  1.000000  / 1.000000  1.000000  e V5  V5  + / / / * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((((v5 + v5)/\exp(1))/1)/(1/1)) * (v3 * \sqrt{1})) - ((((v4) - (v1)) - v3) * v2)) * 1)
Tempo de execucao: 1470.13 segundos
FIM
