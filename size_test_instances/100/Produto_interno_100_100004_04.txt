Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 7 57 56 70 61 31 13 0 47 58 
BEST SOLUTION! cost=25.5 stackLen: 30 => V2  a r 1.000000  V2  V3  - V2  V5  + + / i * empty: 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 25.500000	stackLen: 30 => V2  a r 1.000000  V2  V3  - V2  V5  + + / i * empty: 0 1 1 1 0 1 1 0 0 1 0 1 0 1 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=21.8812 stackLen: 30 => V1  V4  * a r r 1.000000  V5  / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 21.881168	stackLen: 30 => V1  V4  * a r r 1.000000  V5  / * empty: 0 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=18.4 stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 0 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 1 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 2 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 3 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 4 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 5 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 6 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 7 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 8 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 9 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 10 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 11 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 12 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 13 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 14 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 15 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 16 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 17 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 18 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 19 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 20 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 21 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 22 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 23 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 24 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 25 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 26 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 27 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 28 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 29 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 30 	 best= 18.400000	stackLen: 30 => 1.000000  V0  / V3  * i 1.000000  * empty: 0 1 0 1 1 1 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
BEST SOLUTION! cost=16.65 stackLen: 30 => 1.000000  1.000000  1.000000  * + V0  / V2  V3  + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 16.650000	stackLen: 30 => 1.000000  1.000000  1.000000  * + V0  / V2  V3  + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 16.650000	stackLen: 30 => 1.000000  1.000000  1.000000  * + V0  / V2  V3  + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 16.650000	stackLen: 30 => 1.000000  1.000000  1.000000  * + V0  / V2  V3  + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 16.650000	stackLen: 30 => 1.000000  1.000000  1.000000  * + V0  / V2  V3  + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 16.650000	stackLen: 30 => 1.000000  1.000000  1.000000  * + V0  / V2  V3  + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 16.650000	stackLen: 30 => 1.000000  1.000000  1.000000  * + V0  / V2  V3  + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=12.6333 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 8 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 9 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 10 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 11 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 12 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * + V0  / V2  V3  V3  + V3  + + * i 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=12.56 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.560000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V3  V3  V3  V3  + + V2  + + + + * i 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.42 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.420000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.4164 stackLen: 30 => 1.000000  1.000000  e 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.416440	stackLen: 30 => 1.000000  1.000000  e 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.416440	stackLen: 30 => 1.000000  1.000000  e 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.416440	stackLen: 30 => 1.000000  1.000000  e 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.416440	stackLen: 30 => 1.000000  1.000000  e 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.416440	stackLen: 30 => 1.000000  1.000000  e 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.416440	stackLen: 30 => 1.000000  1.000000  e 1.000000  + 1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=10.6985 stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 10.698467	stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 70 4 40 17 31 20 30 47 42 62 
BEST SOLUTION! cost=35.1592 stackLen: 30 => V4  a V3  a V2  i a r V5  1.000000  V3  * * * / V0  V0  * * V1  * / empty: 0 0 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 35.159240	stackLen: 30 => V4  a V3  a V2  i a r V5  1.000000  V3  * * * / V0  V0  * * V1  * / empty: 0 0 1 0 1 0 0 0 1 0 0 0 1 0 1 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=32.2782 stackLen: 30 => 1.000000  i V3  * a 1.000000  V1  / i / 1.000000  * V2  V1  a * * empty: 0 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 32.278185	stackLen: 30 => 1.000000  i V3  * a 1.000000  V1  / i / 1.000000  * V2  V1  a * * empty: 0 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=30.7 stackLen: 30 => V2  1.000000  i 1.000000  V4  a V4  a / V2  / / / * empty: 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 0 0 0 
iteration = 0 	 best= 30.700000	stackLen: 30 => V2  1.000000  i 1.000000  V4  a V4  a / V2  / / / * empty: 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 0 0 0 
iteration = 1 	 best= 30.700000	stackLen: 30 => V2  1.000000  i 1.000000  V4  a V4  a / V2  / / / * empty: 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 0 0 0 
iteration = 2 	 best= 30.700000	stackLen: 30 => V2  1.000000  i 1.000000  V4  a V4  a / V2  / / / * empty: 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 0 0 0 
iteration = 3 	 best= 30.700000	stackLen: 30 => V2  1.000000  i 1.000000  V4  a V4  a / V2  / / / * empty: 0 0 1 1 0 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 0 0 0 
BEST SOLUTION! cost=29.1 stackLen: 30 => V2  V3  V2  i V0  1.000000  i a V3  * * a 1.000000  / r V0  * * * * empty: 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 1 0 1 0 0 1 1 0 0 0 1 0 0 
iteration = 0 	 best= 29.100000	stackLen: 30 => V2  V3  V2  i V0  1.000000  i a V3  * * a 1.000000  / r V0  * * * * empty: 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 1 0 1 0 0 1 1 0 0 0 1 0 0 
iteration = 1 	 best= 29.100000	stackLen: 30 => V2  V3  V2  i V0  1.000000  i a V3  * * a 1.000000  / r V0  * * * * empty: 0 0 0 1 1 0 0 0 0 1 1 0 0 1 0 0 0 1 0 1 0 0 1 1 0 0 0 1 0 0 
BEST SOLUTION! cost=28.9295 stackLen: 30 => 1.000000  e r V5  a V2  a * r i 1.000000  1.000000  / * * empty: 0 0 0 1 0 0 0 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 28.929476	stackLen: 30 => 1.000000  e r V5  a V2  a * r i 1.000000  1.000000  / * * empty: 0 0 0 1 0 0 0 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=28.4892 stackLen: 30 => 1.000000  e r r r V2  * V2  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 1 0 0 1 
iteration = 0 	 best= 28.489181	stackLen: 30 => 1.000000  e r r r V2  * V2  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 1 0 0 1 
iteration = 1 	 best= 28.489181	stackLen: 30 => 1.000000  e r r r V2  * V2  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 1 0 0 1 
iteration = 2 	 best= 28.489181	stackLen: 30 => 1.000000  e r r r V2  * V2  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 1 0 0 1 
iteration = 3 	 best= 28.489181	stackLen: 30 => 1.000000  e r r r V2  * V2  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 1 0 0 1 
iteration = 4 	 best= 28.489181	stackLen: 30 => 1.000000  e r r r V2  * V2  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 1 0 0 1 
BEST SOLUTION! cost=20.8188 stackLen: 30 => 1.000000  V2  a a r V4  V2  V1  * V3  a 1.000000  V3  * / * * + * empty: 0 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.818810	stackLen: 30 => 1.000000  V2  a a r V4  V2  V1  * V3  a 1.000000  V3  * / * * + * empty: 0 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.818810	stackLen: 30 => 1.000000  V2  a a r V4  V2  V1  * V3  a 1.000000  V3  * / * * + * empty: 0 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.818810	stackLen: 30 => 1.000000  V2  a a r V4  V2  V1  * V3  a 1.000000  V3  * / * * + * empty: 0 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.818810	stackLen: 30 => 1.000000  V2  a a r V4  V2  V1  * V3  a 1.000000  V3  * / * * + * empty: 0 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.818810	stackLen: 30 => 1.000000  V2  a a r V4  V2  V1  * V3  a 1.000000  V3  * / * * + * empty: 0 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.818810	stackLen: 30 => 1.000000  V2  a a r V4  V2  V1  * V3  a 1.000000  V3  * / * * + * empty: 0 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.5812 stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
iteration = 0 	 best= 17.581190	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
iteration = 1 	 best= 17.581190	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
iteration = 2 	 best= 17.581190	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
iteration = 3 	 best= 17.581190	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
iteration = 4 	 best= 17.581190	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
iteration = 5 	 best= 17.581190	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
iteration = 6 	 best= 17.581190	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / / V3  * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 
BEST SOLUTION! cost=15.621 stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.621002	stackLen: 30 => 1.000000  1.000000  V2  a a r V0  V4  V1  * V3  a 1.000000  1.000000  1.000000  / 1.000000  * / V3  V1  + * / * * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 3 88 10 60 66 57 25 83 24 31 
BEST SOLUTION! cost=30.4223 stackLen: 30 => V4  1.000000  r 1.000000  e 1.000000  1.000000  V0  V5  - * * / / * empty: 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 30.422308	stackLen: 30 => V4  1.000000  r 1.000000  e 1.000000  1.000000  V0  V5  - * * / / * empty: 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 30.422308	stackLen: 30 => V4  1.000000  r 1.000000  e 1.000000  1.000000  V0  V5  - * * / / * empty: 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=29.1 stackLen: 30 => 1.000000  V3  / V1  i V1  a r V3  / * * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 0 0 1 
iteration = 0 	 best= 29.100000	stackLen: 30 => 1.000000  V3  / V1  i V1  a r V3  / * * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 0 0 1 
iteration = 1 	 best= 29.100000	stackLen: 30 => 1.000000  V3  / V1  i V1  a r V3  / * * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 0 0 1 
iteration = 2 	 best= 29.100000	stackLen: 30 => 1.000000  V3  / V1  i V1  a r V3  / * * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 0 0 1 
iteration = 3 	 best= 29.100000	stackLen: 30 => 1.000000  V3  / V1  i V1  a r V3  / * * empty: 0 1 1 0 0 1 1 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 0 0 1 
BEST SOLUTION! cost=29.0118 stackLen: 30 => V5  1.000000  V4  a V4  1.000000  e V1  a / * / / * empty: 0 1 1 0 0 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 1 0 0 1 0 0 0 1 0 1 
iteration = 0 	 best= 29.011838	stackLen: 30 => V5  1.000000  V4  a V4  1.000000  e V1  a / * / / * empty: 0 1 1 0 0 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 1 0 0 1 0 0 0 1 0 1 
BEST SOLUTION! cost=20.5 stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 2 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 3 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 4 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 5 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 6 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 7 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 8 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 9 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 10 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 11 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 12 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 13 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 14 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 15 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 16 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 17 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 18 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 19 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 20 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 21 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 22 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 23 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 24 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 25 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 26 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 27 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 28 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 29 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 30 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 31 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 32 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 33 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 34 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 35 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 36 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 37 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 38 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 39 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 40 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 41 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 42 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 43 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 44 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 45 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 46 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 47 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 48 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
iteration = 49 	 best= 20.500000	stackLen: 30 => 1.000000  i V3  V3  * * r r V3  / a V1  a / V3  * empty: 0 1 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 83 44 4 20 29 0 93 91 74 15 
BEST SOLUTION! cost=33.0115 stackLen: 30 => V2  a 1.000000  V5  a 1.000000  V5  * / V4  * a - * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 33.011542	stackLen: 30 => V2  a 1.000000  V5  a 1.000000  V5  * / V4  * a - * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 1 	 best= 33.011542	stackLen: 30 => V2  a 1.000000  V5  a 1.000000  V5  * / V4  * a - * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 2 	 best= 33.011542	stackLen: 30 => V2  a 1.000000  V5  a 1.000000  V5  * / V4  * a - * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 3 	 best= 33.011542	stackLen: 30 => V2  a 1.000000  V5  a 1.000000  V5  * / V4  * a - * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
iteration = 4 	 best= 33.011542	stackLen: 30 => V2  a 1.000000  V5  a 1.000000  V5  * / V4  * a - * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=25.3935 stackLen: 30 => 1.000000  1.000000  i * V3  a * V2  / V5  V3  V5  * * * empty: 0 0 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 25.393452	stackLen: 30 => 1.000000  1.000000  i * V3  a * V2  / V5  V3  V5  * * * empty: 0 0 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 25.393452	stackLen: 30 => 1.000000  1.000000  i * V3  a * V2  / V5  V3  V5  * * * empty: 0 0 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=22.5692 stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 4 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 5 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 6 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 7 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 8 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 9 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 10 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 11 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 12 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
iteration = 13 	 best= 22.569168	stackLen: 30 => V3  V5  a V5  V3  V5  i - - / V4  * a e V2  / * empty: 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=22.3191 stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 22.319114	stackLen: 30 => V3  V5  a V5  V3  - V3  V3  + V3  - V3  V4  - - - / V3  V1  V1  - V4  - + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 96 48 24 9 10 19 1 31 2 91 
BEST SOLUTION! cost=49.2 stackLen: 30 => V1  V1  i a V1  a V0  * / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 0 	 best= 49.200000	stackLen: 30 => V1  V1  i a V1  a V0  * / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 1 	 best= 49.200000	stackLen: 30 => V1  V1  i a V1  a V0  * / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 2 	 best= 49.200000	stackLen: 30 => V1  V1  i a V1  a V0  * / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 3 	 best= 49.200000	stackLen: 30 => V1  V1  i a V1  a V0  * / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 0 1 
iteration = 4 	 best= 49.200000	stackLen: 30 => V1  V1  i a V1  a V0  * / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 0 1 1 1 1 0 0 1 
BEST SOLUTION! cost=47.7996 stackLen: 30 => V5  V1  - V2  1.000000  1.000000  V5  * / * 1.000000  * a r r * empty: 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 1 0 
iteration = 0 	 best= 47.799594	stackLen: 30 => V5  V1  - V2  1.000000  1.000000  V5  * / * 1.000000  * a r r * empty: 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 1 0 
iteration = 1 	 best= 47.799594	stackLen: 30 => V5  V1  - V2  1.000000  1.000000  V5  * / * 1.000000  * a r r * empty: 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 1 0 
iteration = 2 	 best= 47.799594	stackLen: 30 => V5  V1  - V2  1.000000  1.000000  V5  * / * 1.000000  * a r r * empty: 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 1 0 
BEST SOLUTION! cost=46.7896 stackLen: 30 => 1.000000  r V0  / V5  a 1.000000  V1  a * V1  * / * empty: 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 46.789605	stackLen: 30 => 1.000000  r V0  / V5  a 1.000000  V1  a * V1  * / * empty: 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=43.7722 stackLen: 30 => V1  V2  V4  V5  1.000000  1.000000  V5  / i V5  * V1  / / * * - * empty: 0 0 0 1 1 0 0 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 43.772222	stackLen: 30 => V1  V2  V4  V5  1.000000  1.000000  V5  / i V5  * V1  / / * * - * empty: 0 0 0 1 1 0 0 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 43.772222	stackLen: 30 => V1  V2  V4  V5  1.000000  1.000000  V5  / i V5  * V1  / / * * - * empty: 0 0 0 1 1 0 0 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=42.2927 stackLen: 30 => V3  1.000000  * V2  - V1  1.000000  1.000000  r a e / V5  / - * empty: 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 42.292650	stackLen: 30 => V3  1.000000  * V2  - V1  1.000000  1.000000  r a e / V5  / - * empty: 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 42.292650	stackLen: 30 => V3  1.000000  * V2  - V1  1.000000  1.000000  r a e / V5  / - * empty: 0 0 0 0 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=41.1 stackLen: 30 => V3  V4  V1  + V2  V1  + V5  V5  + 1.000000  * V0  - + + * empty: 0 1 1 1 0 1 1 0 0 1 0 1 0 0 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 41.100000	stackLen: 30 => V3  V4  V1  + V2  V1  + V5  V5  + 1.000000  * V0  - + + * empty: 0 1 1 1 0 1 1 0 0 1 0 1 0 0 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=36.5 stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 0 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 1 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 2 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 3 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 4 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 5 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 6 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 7 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 8 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 9 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 10 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 11 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 12 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 13 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
iteration = 14 	 best= 36.500000	stackLen: 30 => V2  1.000000  * V0  - 1.000000  V1  / * empty: 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 
BEST SOLUTION! cost=35.3333 stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 35.333333	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + * V0  - 1.000000  V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=35.3 stackLen: 30 => V2  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  1.000000  / * / * V0  / V1  V3  V3  + V5  + V2  + - i i - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 35.300000	stackLen: 30 => V2  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  1.000000  / * / * V0  / V1  V3  V3  + V5  + V2  + - i i - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 35.300000	stackLen: 30 => V2  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  1.000000  / * / * V0  / V1  V3  V3  + V5  + V2  + - i i - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=34.1547 stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 1 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 2 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 3 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 4 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 5 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 6 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
iteration = 7 	 best= 34.154716	stackLen: 30 => 1.000000  V1  V1  V5  a V1  / * V2  V0  - * * / empty: 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=32.3831 stackLen: 30 => 1.000000  1.000000  1.000000  + + r V1  V1  + V1  V5  a V1  / * V2  V0  - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 32.383094	stackLen: 30 => 1.000000  1.000000  1.000000  + + r V1  V1  + V1  V5  a V1  / * V2  V0  - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 32.383094	stackLen: 30 => 1.000000  1.000000  1.000000  + + r V1  V1  + V1  V5  a V1  / * V2  V0  - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 32.383094	stackLen: 30 => 1.000000  1.000000  1.000000  + + r V1  V1  + V1  V5  a V1  / * V2  V0  - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 32.383094	stackLen: 30 => 1.000000  1.000000  1.000000  + + r V1  V1  + V1  V5  a V1  / * V2  V0  - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 32.383094	stackLen: 30 => 1.000000  1.000000  1.000000  + + r V1  V1  + V1  V5  a V1  / * V2  V0  - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 32.383094	stackLen: 30 => 1.000000  1.000000  1.000000  + + r V1  V1  + V1  V5  a V1  / * V2  V0  - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=32.1882 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 32.188171	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  1.000000  e V1  V1  V1  + + V1  V5  a V1  / * V2  V0  - * * / / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.6985
stackLen: 30 => 1.000000  1.000000  e - 1.000000  1.000000  1.000000  + + V0  / V2  V3  V4  V3  V3  V3  + + V2  + - + + * / 1.000000  r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (\sqrt{1} * ((((((v2 + ((v3 + v3) + v3)) - v4) + v3) + v2) * (v0/((1 + 1) + 1)))/(\exp(1) - 1)))
Tempo de execucao: 1177.09 segundos
FIM
