Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 71 42 53 12 48 52 13 32 22 15 
BEST SOLUTION! cost=65.3 stackLen: 30 => V4  a r i 1.000000  V0  / V0  - r a / a V0  i V5  * * empty: 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 65.300000	stackLen: 30 => V4  a r i 1.000000  V0  / V0  - r a / a V0  i V5  * * empty: 0 1 1 1 0 0 1 1 1 0 0 0 1 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=51.6 stackLen: 30 => 1.000000  V3  1.000000  1.000000  V2  1.000000  * * / * * empty: 0 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 51.600000	stackLen: 30 => 1.000000  V3  1.000000  1.000000  V2  1.000000  * * / * * empty: 0 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 51.600000	stackLen: 30 => 1.000000  V3  1.000000  1.000000  V2  1.000000  * * / * * empty: 0 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=45 stackLen: 30 => 1.000000  V0  * V4  1.000000  1.000000  / V3  * - * empty: 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 45.000000	stackLen: 30 => 1.000000  V0  * V4  1.000000  1.000000  / V3  * - * empty: 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=41.4345 stackLen: 30 => V2  a V0  / 1.000000  * V3  V3  - V4  - V4  * i * a V4  V1  * - empty: 0 0 0 1 0 1 0 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 0 
iteration = 0 	 best= 41.434459	stackLen: 30 => V2  a V0  / 1.000000  * V3  V3  - V4  - V4  * i * a V4  V1  * - empty: 0 0 0 1 0 1 0 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 1 0 1 0 0 0 
BEST SOLUTION! cost=34.9212 stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 1 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 2 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 3 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 4 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 5 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 6 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 7 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 8 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 9 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
iteration = 10 	 best= 34.921231	stackLen: 30 => V2  a r a V2  / V5  * e r V5  / V4  * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=34.4091 stackLen: 30 => V2  a a V2  / V5  V5  V5  * * * e r V5  / V4  * empty: 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 34.409135	stackLen: 30 => V2  a a V2  / V5  V5  V5  * * * e r V5  / V4  * empty: 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 34.409135	stackLen: 30 => V2  a a V2  / V5  V5  V5  * * * e r V5  / V4  * empty: 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 34.409135	stackLen: 30 => V2  a a V2  / V5  V5  V5  * * * e r V5  / V4  * empty: 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.3 stackLen: 30 => 1.000000  V0  / V3  V4  1.000000  * V4  a r V3  i V2  + + - + * empty: 0 1 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 27.300000	stackLen: 30 => 1.000000  V0  / V3  V4  1.000000  * V4  a r V3  i V2  + + - + * empty: 0 1 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 27.300000	stackLen: 30 => 1.000000  V0  / V3  V4  1.000000  * V4  a r V3  i V2  + + - + * empty: 0 1 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 2 	 best= 27.300000	stackLen: 30 => 1.000000  V0  / V3  V4  1.000000  * V4  a r V3  i V2  + + - + * empty: 0 1 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 3 	 best= 27.300000	stackLen: 30 => 1.000000  V0  / V3  V4  1.000000  * V4  a r V3  i V2  + + - + * empty: 0 1 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 4 	 best= 27.300000	stackLen: 30 => 1.000000  V0  / V3  V4  1.000000  * V4  a r V3  i V2  + + - + * empty: 0 1 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
iteration = 5 	 best= 27.300000	stackLen: 30 => 1.000000  V0  / V3  V4  1.000000  * V4  a r V3  i V2  + + - + * empty: 0 1 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 
BEST SOLUTION! cost=25.1082 stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 0 	 best= 25.108178	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 1 	 best= 25.108178	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 2 	 best= 25.108178	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 3 	 best= 25.108178	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 4 	 best= 25.108178	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
iteration = 5 	 best= 25.108178	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 
BEST SOLUTION! cost=23.5318 stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 0 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 1 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 2 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 3 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 4 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 5 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 6 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 7 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 8 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 9 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 10 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 11 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 12 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 13 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 14 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 15 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 16 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 17 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 18 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 19 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 20 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 21 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 22 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 23 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 24 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 25 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 26 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 27 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 28 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 29 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 30 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 31 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 32 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 33 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 34 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 35 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 36 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 37 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 38 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 39 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 40 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 41 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 42 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 43 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 44 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 45 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 46 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 47 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 48 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 49 	 best= 23.531753	stackLen: 30 => 1.000000  V0  * V3  V4  1.000000  1.000000  1.000000  + + r V4  V4  + a r V3  i V2  V2  + + + / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 84 94 55 0 15 34 67 9 5 87 
BEST SOLUTION! cost=44.3617 stackLen: 30 => 1.000000  V1  1.000000  i V3  1.000000  * i a r V4  a / i a r / * * empty: 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 44.361667	stackLen: 30 => 1.000000  V1  1.000000  i V3  1.000000  * i a r V4  a / i a r / * * empty: 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 44.361667	stackLen: 30 => 1.000000  V1  1.000000  i V3  1.000000  * i a r V4  a / i a r / * * empty: 0 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=32.7 stackLen: 30 => V3  V3  1.000000  i * a V2  / * V3  1.000000  V3  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 1 0 1 
iteration = 0 	 best= 32.700000	stackLen: 30 => V3  V3  1.000000  i * a V2  / * V3  1.000000  V3  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 1 0 1 
iteration = 1 	 best= 32.700000	stackLen: 30 => V3  V3  1.000000  i * a V2  / * V3  1.000000  V3  / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 1 0 1 
BEST SOLUTION! cost=31.8693 stackLen: 30 => V3  a V1  a / i V5  * V3  a V3  / V3  * V4  V0  + / * empty: 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 31.869269	stackLen: 30 => V3  a V1  a / i V5  * V3  a V3  / V3  * V4  V0  + / * empty: 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 31.869269	stackLen: 30 => V3  a V1  a / i V5  * V3  a V3  / V3  * V4  V0  + / * empty: 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 31.869269	stackLen: 30 => V3  a V1  a / i V5  * V3  a V3  / V3  * V4  V0  + / * empty: 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=31.5069 stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 31.506944	stackLen: 30 => V5  a V2  * V3  a V5  a V5  / / * V3  V5  * * empty: 0 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=31.4643 stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e * 1.000000  1.000000  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 31.464284	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e * 1.000000  1.000000  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 31.464284	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e * 1.000000  1.000000  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 31.464284	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e * 1.000000  1.000000  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 31.464284	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e * 1.000000  1.000000  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 31.464284	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e * 1.000000  1.000000  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 31.464284	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e * 1.000000  1.000000  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=30.7899 stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 30.789910	stackLen: 30 => V5  V5  i a V2  * V3  a V5  V5  - V5  + V5  + a V5  / / * * V3  * 1.000000  e 1.000000  1.000000  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 92 16 39 54 94 76 98 20 14 40 
BEST SOLUTION! cost=20.3 stackLen: 30 => 1.000000  1.000000  * V2  i 1.000000  * 1.000000  * V5  V5  + * * empty: 0 1 1 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 20.300000	stackLen: 30 => 1.000000  1.000000  * V2  i 1.000000  * 1.000000  * V5  V5  + * * empty: 0 1 1 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=12.1 stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 6 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 7 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 8 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 9 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 10 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 11 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 12 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 13 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 14 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 15 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 16 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 17 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 18 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 19 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 20 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 21 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 22 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 23 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 24 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 25 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 26 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 27 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 28 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 29 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 30 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 31 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 32 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 33 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 34 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 35 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 36 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 37 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 38 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 39 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 40 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 41 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 42 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 43 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 44 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 45 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 46 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 47 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 48 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 49 	 best= 12.100000	stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 6 38 79 27 21 72 85 11 8 3 
BEST SOLUTION! cost=22.5967 stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 22.596667	stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 22.596667	stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 22.596667	stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 22.596667	stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 22.596667	stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 22.596667	stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 22.596667	stackLen: 30 => V3  V1  * V1  a V0  V1  V5  V3  a V4  / * * * / * empty: 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=12.9311 stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 18 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 19 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 20 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 21 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 22 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 23 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 24 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 25 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 26 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 27 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 28 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 29 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 30 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 31 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 32 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 33 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 34 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 35 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 36 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 37 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 38 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 39 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 40 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 41 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 42 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 43 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 44 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 45 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 46 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 47 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 48 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 49 	 best= 12.931111	stackLen: 30 => V3  V1  V1  + * V1  a V3  V0  + V1  V5  V3  V3  V3  V3  + + * i V4  / * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 66 39 83 99 59 68 1 26 89 11 
BEST SOLUTION! cost=22.9828 stackLen: 30 => V3  V4  V3  - - 1.000000  e V2  i / V5  V0  - - * empty: 0 0 1 0 0 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.982837	stackLen: 30 => V3  V4  V3  - - 1.000000  e V2  i / V5  V0  - - * empty: 0 0 1 0 0 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.982837	stackLen: 30 => V3  V4  V3  - - 1.000000  e V2  i / V5  V0  - - * empty: 0 0 1 0 0 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.982837	stackLen: 30 => V3  V4  V3  - - 1.000000  e V2  i / V5  V0  - - * empty: 0 0 1 0 0 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.982837	stackLen: 30 => V3  V4  V3  - - 1.000000  e V2  i / V5  V0  - - * empty: 0 0 1 0 0 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.2 stackLen: 30 => V2  V1  1.000000  i * V0  + + 1.000000  V5  * 1.000000  i * * empty: 0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 18.200000	stackLen: 30 => V2  V1  1.000000  i * V0  + + 1.000000  V5  * 1.000000  i * * empty: 0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 18.200000	stackLen: 30 => V2  V1  1.000000  i * V0  + + 1.000000  V5  * 1.000000  i * * empty: 0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 18.200000	stackLen: 30 => V2  V1  1.000000  i * V0  + + 1.000000  V5  * 1.000000  i * * empty: 0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 18.200000	stackLen: 30 => V2  V1  1.000000  i * V0  + + 1.000000  V5  * 1.000000  i * * empty: 0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 18.200000	stackLen: 30 => V2  V1  1.000000  i * V0  + + 1.000000  V5  * 1.000000  i * * empty: 0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 18.200000	stackLen: 30 => V2  V1  1.000000  i * V0  + + 1.000000  V5  * 1.000000  i * * empty: 0 0 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=16.8 stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 8 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 9 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 10 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 11 	 best= 16.800000	stackLen: 30 => V2  V1  1.000000  1.000000  / * V0  V0  - + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=15.8 stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 0 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 1 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 2 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 3 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 4 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 5 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 6 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 7 	 best= 15.800000	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  1.000000  * V1  V1  - * V0  + / + + V5  * 1.000000  i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
BEST SOLUTION! cost=15.4667 stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.466667	stackLen: 30 => V2  V1  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  * V1  V1  V1  V1  + - - * V0  + / + + V5  i 1.000000  i * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.1
stackLen: 30 => 1.000000  1.000000  / V4  / V5  * 1.000000  1.000000  V2  V1  V1  i - V0  - * * * + empty: 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 1 0 1 1 0 0 0 0 0 
trueStackSize=20
printSolution2: (((((v0 - ((v1) - v1)) * v2) * 1) * 1) + (v5 * (v4/(1/1))))
Tempo de execucao: 902.902 segundos
FIM
