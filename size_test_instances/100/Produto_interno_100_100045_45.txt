Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 77 43 61 51 18 24 23 13 88 56 
BEST SOLUTION! cost=30.8 stackLen: 30 => V2  V3  - V2  - 1.000000  1.000000  1.000000  r a 1.000000  + 1.000000  - a V3  / * * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 30.800000	stackLen: 30 => V2  V3  - V2  - 1.000000  1.000000  1.000000  r a 1.000000  + 1.000000  - a V3  / * * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 30.800000	stackLen: 30 => V2  V3  - V2  - 1.000000  1.000000  1.000000  r a 1.000000  + 1.000000  - a V3  / * * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 30.800000	stackLen: 30 => V2  V3  - V2  - 1.000000  1.000000  1.000000  r a 1.000000  + 1.000000  - a V3  / * * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 30.800000	stackLen: 30 => V2  V3  - V2  - 1.000000  1.000000  1.000000  r a 1.000000  + 1.000000  - a V3  / * * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=16.7 stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.700000	stackLen: 30 => 1.000000  1.000000  i / V4  * V0  - V0  V1  V2  V2  - + - + V0  * empty: 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 35 22 64 19 9 50 65 29 77 14 
BEST SOLUTION! cost=38.2 stackLen: 30 => 1.000000  V2  1.000000  V0  * 1.000000  r V4  V3  - * + * * empty: 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 38.200000	stackLen: 30 => 1.000000  V2  1.000000  V0  * 1.000000  r V4  V3  - * + * * empty: 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=37.8 stackLen: 30 => V5  V5  a r 1.000000  1.000000  V3  V2  * / / / * empty: 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 37.800000	stackLen: 30 => V5  V5  a r 1.000000  1.000000  V3  V2  * / / / * empty: 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 37.800000	stackLen: 30 => V5  V5  a r 1.000000  1.000000  V3  V2  * / / / * empty: 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=33.3931 stackLen: 30 => V4  V2  V2  * V5  a V5  1.000000  * / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 33.393056	stackLen: 30 => V4  V2  V2  * V5  a V5  1.000000  * / * * empty: 0 0 1 1 1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=32.4 stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 32.400000	stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 32.400000	stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
iteration = 2 	 best= 32.400000	stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
iteration = 3 	 best= 32.400000	stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
iteration = 4 	 best= 32.400000	stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
iteration = 5 	 best= 32.400000	stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
iteration = 6 	 best= 32.400000	stackLen: 30 => V1  V4  - V5  - 1.000000  a V4  V2  + / * empty: 0 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=30.3 stackLen: 30 => V1  V1  - V4  - V5  - 1.000000  1.000000  * 1.000000  * 1.000000  / a V2  V4  - * + V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 30.300000	stackLen: 30 => V1  V1  - V4  - V5  - 1.000000  1.000000  * 1.000000  * 1.000000  / a V2  V4  - * + V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 30.300000	stackLen: 30 => V1  V1  - V4  - V5  - 1.000000  1.000000  * 1.000000  * 1.000000  / a V2  V4  - * + V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=28.1 stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 6 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 7 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 8 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 9 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 10 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 11 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 12 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 13 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 14 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 15 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 16 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 17 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 18 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 19 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 20 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 21 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 22 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 23 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 24 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 25 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 26 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 27 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 28 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 29 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 30 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 31 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 32 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 33 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 34 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 35 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 36 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 37 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 38 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 39 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 40 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 41 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 42 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 43 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 44 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 45 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 46 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 47 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 48 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
iteration = 49 	 best= 28.100000	stackLen: 30 => 1.000000  V5  V0  + * 1.000000  * 1.000000  * 1.000000  V4  * * empty: 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 1 1 1 1 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 68 7 49 39 6 89 50 30 48 23 
BEST SOLUTION! cost=17.5 stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 6 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 7 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 8 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 9 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 10 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 11 	 best= 17.500000	stackLen: 30 => V2  V2  a r 1.000000  V4  / / * V3  * V2  1.000000  V3  * * + empty: 0 1 0 0 1 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=16.7 stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.700000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V4  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=16.5 stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.500000	stackLen: 30 => V2  V2  V2  * i r 1.000000  1.000000  / V4  / / * V1  V3  - * V2  1.000000  1.000000  1.000000  * 1.000000  / V3  * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 25 88 19 76 72 48 60 28 73 45 
BEST SOLUTION! cost=47.9525 stackLen: 30 => V3  a r V1  / V3  V3  a r V0  / * a * empty: 0 1 1 1 0 0 0 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 1 1 0 0 1 0 0 1 
COST2 IS BETTER!!!47.2263
iteration = 0 	 best= 47.226250	stackLen: 30 => V3  V3  + a r V1  / V3  V3  a r V0  / * a * empty: 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=42.7004 stackLen: 30 => V4  a r 1.000000  1.000000  e * V3  V1  a * / / empty: 0 1 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 1 0 1 
iteration = 0 	 best= 42.700393	stackLen: 30 => V4  a r 1.000000  1.000000  e * V3  V1  a * / / empty: 0 1 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 1 1 0 1 
BEST SOLUTION! cost=25.8 stackLen: 30 => 1.000000  a r 1.000000  V5  V1  - / / V0  * empty: 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 25.800000	stackLen: 30 => 1.000000  a r 1.000000  V5  V1  - / / V0  * empty: 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 25.800000	stackLen: 30 => 1.000000  a r 1.000000  V5  V1  - / / V0  * empty: 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 1 0 0 0 0 
iteration = 2 	 best= 25.800000	stackLen: 30 => 1.000000  a r 1.000000  V5  V1  - / / V0  * empty: 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 1 0 0 0 0 
iteration = 3 	 best= 25.800000	stackLen: 30 => 1.000000  a r 1.000000  V5  V1  - / / V0  * empty: 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=22.5 stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 22.500000	stackLen: 30 => V3  a 1.000000  V3  1.000000  V2  / a * V0  V1  V3  * * - * / V3  * empty: 0 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.3 stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 21.300000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 21.300000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 21.300000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 21.300000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 21.300000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 21.300000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=19.15 stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.150000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V0  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.35 stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.350000	stackLen: 30 => V3  V3  + a 1.000000  1.000000  + 1.000000  * V3  1.000000  V3  V2  - / a * V0  V5  + V1  V3  * * - * / V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 12 23 25 14 38 15 94 62 37 1 
BEST SOLUTION! cost=33.2 stackLen: 30 => 1.000000  V2  1.000000  1.000000  + r r a a V1  V1  a r V5  / * * * / empty: 0 1 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 33.200000	stackLen: 30 => 1.000000  V2  1.000000  1.000000  + r r a a V1  V1  a r V5  / * * * / empty: 0 1 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=29.8833 stackLen: 30 => 1.000000  V5  / a 1.000000  r V4  V1  + a r V4  / 1.000000  - - * empty: 0 1 1 0 1 1 0 1 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 29.883256	stackLen: 30 => 1.000000  V5  / a 1.000000  r V4  V1  + a r V4  / 1.000000  - - * empty: 0 1 1 0 1 1 0 1 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=26.4 stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 26.400000	stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 26.400000	stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 26.400000	stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 26.400000	stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 26.400000	stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 26.400000	stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 26.400000	stackLen: 30 => V4  a V4  a / 1.000000  1.000000  V5  / / * V4  * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=25.35 stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 25.350000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + V5  / 1.000000  * V5  V4  V4  + - V4  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.2 stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + 1.000000  / 1.000000  1.000000  V5  / 1.000000  * * * V5  V4  V4  + - V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.200000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + 1.000000  / 1.000000  1.000000  V5  / 1.000000  * * * V5  V4  V4  + - V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.200000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + 1.000000  / 1.000000  1.000000  V5  / 1.000000  * * * V5  V4  V4  + - V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.200000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + 1.000000  / 1.000000  1.000000  V5  / 1.000000  * * * V5  V4  V4  + - V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.200000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + 1.000000  / 1.000000  1.000000  V5  / 1.000000  * * * V5  V4  V4  + - V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.200000	stackLen: 30 => V4  V4  V4  - + a V4  a / 1.000000  + 1.000000  / 1.000000  1.000000  V5  / 1.000000  * * * V5  V4  V4  + - V1  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.8606 stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 2 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 3 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 4 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 5 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 6 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
iteration = 7 	 best= 22.860645	stackLen: 30 => V5  V4  1.000000  V5  a a r V4  a / r r 1.000000  * / * * empty: 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 1 0 0 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=22.5478 stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 0 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 1 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 2 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 3 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 4 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 5 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 6 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 7 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 8 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 9 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 10 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 11 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 12 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 13 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 14 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 15 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 16 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 17 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 18 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 19 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 20 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
iteration = 21 	 best= 22.547796	stackLen: 30 => V5  V4  1.000000  1.000000  e V5  a a r V4  a / r r 1.000000  1.000000  1.000000  + * 1.000000  + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 
BEST SOLUTION! cost=15.9552 stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V0  1.000000  V3  * - / / * / / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.955171	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V0  1.000000  V3  * - / / * / / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.955171	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V0  1.000000  V3  * - / / * / / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.955171	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V0  1.000000  V3  * - / / * / / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.955171	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V0  1.000000  V3  * - / / * / / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.955171	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V0  1.000000  V3  * - / / * / / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.955171	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V0  1.000000  V3  * - / / * / / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.6488 stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.648775	stackLen: 30 => V5  V4  * 1.000000  1.000000  1.000000  e V5  i a r * V2  a 1.000000  a 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.5572 stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.557236	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  i a r * V2  i 1.000000  i 1.000000  V1  1.000000  V3  * - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=14.7553 stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 14.755269	stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14.7553
stackLen: 30 => V5  V4  * V3  1.000000  1.000000  e V5  a r * V2  i 1.000000  1.000000  / i 1.000000  V1  V0  V3  - - / / * / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (((((((((v3 - v0) - v1)/1)/((1/1))) * (v2))/(\sqrt{{v5^2}} * \exp(1))) * 1) * v3) + (v4 * v5))
Tempo de execucao: 1017.87 segundos
FIM
