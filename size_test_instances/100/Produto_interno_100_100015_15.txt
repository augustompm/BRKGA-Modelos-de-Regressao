Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 7 20 70 64 12 77 95 11 67 42 
BEST SOLUTION! cost=26.3 stackLen: 30 => V0  a V0  V0  a V5  i * * / empty: 0 0 0 1 1 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 26.300000	stackLen: 30 => V0  a V0  V0  a V5  i * * / empty: 0 0 0 1 1 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=21.6355 stackLen: 30 => V1  a r 1.000000  1.000000  a + r 1.000000  r / V0  / * empty: 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 
iteration = 0 	 best= 21.635534	stackLen: 30 => V1  a r 1.000000  1.000000  a + r 1.000000  r / V0  / * empty: 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 
iteration = 1 	 best= 21.635534	stackLen: 30 => V1  a r 1.000000  1.000000  a + r 1.000000  r / V0  / * empty: 0 0 0 1 1 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 
BEST SOLUTION! cost=15.8 stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 11 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 12 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 13 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 14 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 15 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 16 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 17 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 18 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 19 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 20 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 21 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
iteration = 22 	 best= 15.800000	stackLen: 30 => 1.000000  V5  1.000000  V3  1.000000  V4  1.000000  * i * - / * * empty: 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=12.6179 stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 0 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 1 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 2 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 3 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 4 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 5 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 6 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 7 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 8 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 9 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 10 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 11 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 12 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 13 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 14 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 15 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 16 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 17 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 18 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 19 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 20 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 21 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 22 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 23 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 24 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 25 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 26 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 27 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 28 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 29 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 30 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 31 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 32 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 33 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 34 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 35 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 36 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 37 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 38 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 39 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 40 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 41 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 42 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 43 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 44 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 45 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 46 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 47 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
iteration = 48 	 best= 12.617872	stackLen: 30 => 1.000000  1.000000  / i V5  V3  1.000000  V4  1.000000  1.000000  + 1.000000  * r * * - * * empty: 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 
BEST SOLUTION! cost=12.3373 stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.337326	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  1.000000  + 1.000000  + r r * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.2828 stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.282843	stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 8 94 47 52 95 48 80 49 61 89 
BEST SOLUTION! cost=28.33 stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 1 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 2 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 3 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 4 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 5 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 6 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
iteration = 7 	 best= 28.330013	stackLen: 30 => V4  1.000000  1.000000  * e r V5  * V1  + * empty: 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=28.282 stackLen: 30 => V4  1.000000  1.000000  + 1.000000  - 1.000000  * e r V5  * V1  V1  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 28.281959	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  - 1.000000  * e r V5  * V1  V1  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 28.281959	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  - 1.000000  * e r V5  * V1  V1  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 28.281959	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  - 1.000000  * e r V5  * V1  V1  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 28.281959	stackLen: 30 => V4  1.000000  1.000000  + 1.000000  - 1.000000  * e r V5  * V1  V1  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.7112 stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 6 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 7 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 8 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 9 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 10 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 11 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 12 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 13 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 14 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 15 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 16 	 best= 27.711216	stackLen: 30 => 1.000000  V4  1.000000  1.000000  e r r 1.000000  V5  V1  + * * / * * empty: 0 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.8042 stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  1.000000  / a e r r V4  V5  V1  V1  + + + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 21.804153	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  1.000000  / a e r r V4  V5  V1  V1  + + + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 21.804153	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  1.000000  / a e r r V4  V5  V1  V1  + + + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 21.804153	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  1.000000  / a e r r V4  V5  V1  V1  + + + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 21.804153	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  1.000000  / a e r r V4  V5  V1  V1  + + + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 21.804153	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  1.000000  / a e r r V4  V5  V1  V1  + + + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 21.804153	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  1.000000  / a e r r V4  V5  V1  V1  + + + * / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=19.3347 stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.334730	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.334730	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.334730	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.334730	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.334730	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.334730	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.334730	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V4  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.1269 stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.126902	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.126902	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.126902	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.126902	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.126902	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.126902	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.126902	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e 1.000000  V1  * / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.6348 stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.634803	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V1  + / a i r i V4  V5  V1  V1  + V1  + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=16.7696 stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.769621	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  a e V1  V0  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.9265 stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.926493	stackLen: 30 => 1.000000  V4  1.000000  1.000000  1.000000  e a V0  V5  * / a r r i V4  V5  V1  V1  V1  + + + + + * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 11 25 85 84 98 6 24 42 69 5 
BEST SOLUTION! cost=22.4706 stackLen: 30 => 1.000000  e r 1.000000  1.000000  i V5  a / r V4  - * / V5  * empty: 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.470612	stackLen: 30 => 1.000000  e r 1.000000  1.000000  i V5  a / r V4  - * / V5  * empty: 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.470612	stackLen: 30 => 1.000000  e r 1.000000  1.000000  i V5  a / r V4  - * / V5  * empty: 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.470612	stackLen: 30 => 1.000000  e r 1.000000  1.000000  i V5  a / r V4  - * / V5  * empty: 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.470612	stackLen: 30 => 1.000000  e r 1.000000  1.000000  i V5  a / r V4  - * / V5  * empty: 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.470612	stackLen: 30 => 1.000000  e r 1.000000  1.000000  i V5  a / r V4  - * / V5  * empty: 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.470612	stackLen: 30 => 1.000000  e r 1.000000  1.000000  i V5  a / r V4  - * / V5  * empty: 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.4018 stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  - / / V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.401756	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  - / / V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.401756	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  - / / V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.401756	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  - / / V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.401756	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  - / / V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.401756	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  - / / V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.401756	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  - / / V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.5633 stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 20.563266	stackLen: 30 => 1.000000  1.000000  / 1.000000  e r 1.000000  1.000000  1.000000  + i r V5  a * / r V4  V2  V2  - V2  + + - / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 78 16 58 91 56 1 15 28 21 44 
BEST SOLUTION! cost=21.2044 stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 0 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 1 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 2 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 3 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 4 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 5 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 6 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 7 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 8 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 9 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 10 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 11 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 12 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 13 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 14 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 15 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 16 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 17 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 18 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 19 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 20 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 21 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 22 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 23 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 24 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 25 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 26 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 27 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 28 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 29 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 30 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 31 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 32 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 33 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
iteration = 34 	 best= 21.204366	stackLen: 30 => 1.000000  V3  a a V5  V1  * / V4  a * / i V5  i * V4  * empty: 0 1 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 0 1 1 0 1 0 
BEST SOLUTION! cost=20.5182 stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 20.518156	stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 20.518156	stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 20.518156	stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 20.518156	stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 20.518156	stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 20.518156	stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 20.518156	stackLen: 30 => 1.000000  1.000000  * V3  a a V5  V5  * V1  * / V4  a * / i V5  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=20.4546 stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 20.454574	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / i V0  V5  + i i * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=19.6422 stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 19.642229	stackLen: 30 => 1.000000  1.000000  1.000000  / / V3  a a V5  V5  * V1  * / V4  a * / V2  V0  V5  + - * r V4  V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 32 31 47 75 70 16 24 55 61 56 
BEST SOLUTION! cost=30.7 stackLen: 30 => 1.000000  V5  1.000000  r V2  V4  V2  V2  - + 1.000000  * + * * * empty: 0 0 1 1 0 1 0 1 1 1 1 1 0 1 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 30.700000	stackLen: 30 => 1.000000  V5  1.000000  r V2  V4  V2  V2  - + 1.000000  * + * * * empty: 0 0 1 1 0 1 0 1 1 1 1 1 0 1 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=29.8 stackLen: 30 => V1  V3  a 1.000000  V3  a * V1  V4  - a r * / * empty: 0 1 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 29.800000	stackLen: 30 => V1  V3  a 1.000000  V3  a * V1  V4  - a r * / * empty: 0 1 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 1 
iteration = 1 	 best= 29.800000	stackLen: 30 => V1  V3  a 1.000000  V3  a * V1  V4  - a r * / * empty: 0 1 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 1 
iteration = 2 	 best= 29.800000	stackLen: 30 => V1  V3  a 1.000000  V3  a * V1  V4  - a r * / * empty: 0 1 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 1 
iteration = 3 	 best= 29.800000	stackLen: 30 => V1  V3  a 1.000000  V3  a * V1  V4  - a r * / * empty: 0 1 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=24.6 stackLen: 30 => V0  V1  i V4  - 1.000000  1.000000  a r - 1.000000  a V0  / * i - * empty: 0 1 0 0 0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.600000	stackLen: 30 => V0  V1  i V4  - 1.000000  1.000000  a r - 1.000000  a V0  / * i - * empty: 0 1 0 0 0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.600000	stackLen: 30 => V0  V1  i V4  - 1.000000  1.000000  a r - 1.000000  a V0  / * i - * empty: 0 1 0 0 0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.600000	stackLen: 30 => V0  V1  i V4  - 1.000000  1.000000  a r - 1.000000  a V0  / * i - * empty: 0 1 0 0 0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.600000	stackLen: 30 => V0  V1  i V4  - 1.000000  1.000000  a r - 1.000000  a V0  / * i - * empty: 0 1 0 0 0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.600000	stackLen: 30 => V0  V1  i V4  - 1.000000  1.000000  a r - 1.000000  a V0  / * i - * empty: 0 1 0 0 0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.9653 stackLen: 30 => 1.000000  V0  1.000000  e V3  / V3  + - / V1  - V1  * 1.000000  * empty: 0 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 22.965270	stackLen: 30 => 1.000000  V0  1.000000  e V3  / V3  + - / V1  - V1  * 1.000000  * empty: 0 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 22.965270	stackLen: 30 => 1.000000  V0  1.000000  e V3  / V3  + - / V1  - V1  * 1.000000  * empty: 0 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 22.965270	stackLen: 30 => 1.000000  V0  1.000000  e V3  / V3  + - / V1  - V1  * 1.000000  * empty: 0 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 22.965270	stackLen: 30 => 1.000000  V0  1.000000  e V3  / V3  + - / V1  - V1  * 1.000000  * empty: 0 0 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=22.3354 stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 6 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 7 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 8 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 9 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 10 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 11 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 12 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 13 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 14 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 15 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 16 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 17 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 18 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 19 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 20 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 21 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 22 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 23 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 24 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 25 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 26 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 27 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 28 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 29 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 30 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 31 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 32 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 33 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 34 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 35 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 36 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 37 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 38 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 39 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 40 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 41 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 42 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 43 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 44 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 45 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 46 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 47 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 48 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
iteration = 49 	 best= 22.335397	stackLen: 30 => 1.000000  V1  1.000000  e 1.000000  * V0  a * r 1.000000  * * * empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 1 1 0 0 0 1 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.2828
stackLen: 30 => 1.000000  1.000000  / i V5  V3  V3  V3  + - V3  - V3  - 1.000000  V4  i / 1.000000  r * 1.000000  e r r * - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((\sqrt{\sqrt{\exp(1)}} * (\sqrt{1} * ((v4)/1))) - (v3 - (v3 - ((v3 + v3) - v3)))) * v5) * ((1/1)))
Tempo de execucao: 1465.09 segundos
FIM
