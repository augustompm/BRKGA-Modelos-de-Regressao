Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 87 52 32 16 72 67 78 28 47 57 
BEST SOLUTION! cost=40.9 stackLen: 30 => V5  1.000000  1.000000  1.000000  * V2  1.000000  * * / * empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 40.900000	stackLen: 30 => V5  1.000000  1.000000  1.000000  * V2  1.000000  * * / * empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=39.7 stackLen: 30 => 1.000000  1.000000  + V2  V5  * * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 39.700000	stackLen: 30 => 1.000000  1.000000  + V2  V5  * * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=37.0088 stackLen: 30 => V1  a V1  a / 1.000000  + r 1.000000  V2  V5  * i * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 37.008831	stackLen: 30 => V1  a V1  a / 1.000000  + r 1.000000  V2  V5  * i * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 37.008831	stackLen: 30 => V1  a V1  a / 1.000000  + r 1.000000  V2  V5  * i * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 37.008831	stackLen: 30 => V1  a V1  a / 1.000000  + r 1.000000  V2  V5  * i * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 37.008831	stackLen: 30 => V1  a V1  a / 1.000000  + r 1.000000  V2  V5  * i * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 37.008831	stackLen: 30 => V1  a V1  a / 1.000000  + r 1.000000  V2  V5  * i * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=36.1 stackLen: 30 => 1.000000  1.000000  V2  V0  + 1.000000  V5  i / * * / empty: 0 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 0 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 36.100000	stackLen: 30 => 1.000000  1.000000  V2  V0  + 1.000000  V5  i / * * / empty: 0 1 1 1 0 1 1 1 1 0 0 0 1 1 1 0 0 0 1 0 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=34.9719 stackLen: 30 => V0  V2  + 1.000000  e r r V5  / * empty: 0 0 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 34.971907	stackLen: 30 => V0  V2  + 1.000000  e r r V5  / * empty: 0 0 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 34.971907	stackLen: 30 => V0  V2  + 1.000000  e r r V5  / * empty: 0 0 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 34.971907	stackLen: 30 => V0  V2  + 1.000000  e r r V5  / * empty: 0 0 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 34.971907	stackLen: 30 => V0  V2  + 1.000000  e r r V5  / * empty: 0 0 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 34.971907	stackLen: 30 => V0  V2  + 1.000000  e r r V5  / * empty: 0 0 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 34.971907	stackLen: 30 => V0  V2  + 1.000000  e r r V5  / * empty: 0 0 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=32.8646 stackLen: 30 => V0  V2  V2  + + 1.000000  1.000000  + 1.000000  / e e r r V5  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 32.864566	stackLen: 30 => V0  V2  V2  + + 1.000000  1.000000  + 1.000000  / e e r r V5  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=30 stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 0 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 1 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 2 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 3 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 4 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 5 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 6 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 7 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 8 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
iteration = 9 	 best= 30.000000	stackLen: 30 => 1.000000  V2  1.000000  V3  V0  - 1.000000  V5  / - * * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 1 0 0 0 1 0 1 0 0 0 1 0 1 
BEST SOLUTION! cost=28.7 stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  V4  V0  - 1.000000  V5  V5  + / - * * * empty: 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=18.8 stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 18 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 19 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 20 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 21 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 22 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 23 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 24 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 25 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 26 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 27 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 28 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 29 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 30 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 31 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 32 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 33 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 34 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 35 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 36 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 37 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 38 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 39 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 40 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 41 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 42 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 43 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 44 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 45 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 46 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 47 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 48 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 49 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V2  1.000000  1.000000  / V0  V0  - 1.000000  1.000000  V5  * V3  + / - / V1  V1  V1  + - + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 27 75 16 26 24 89 29 54 76 96 
BEST SOLUTION! cost=41.7749 stackLen: 30 => 1.000000  V1  / V4  V5  V0  V5  - a 1.000000  * r 1.000000  / * * * empty: 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 41.774892	stackLen: 30 => 1.000000  V1  / V4  V5  V0  V5  - a 1.000000  * r 1.000000  / * * * empty: 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=20.7 stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  V2  a / r * V4  V5  * - empty: 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 0 	 best= 20.700000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  V2  a / r * V4  V5  * - empty: 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 1 	 best= 20.700000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  V2  a / r * V4  V5  * - empty: 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 2 	 best= 20.700000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  V2  a / r * V4  V5  * - empty: 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 3 	 best= 20.700000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  V2  a / r * V4  V5  * - empty: 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 4 	 best= 20.700000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  V2  a / r * V4  V5  * - empty: 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 5 	 best= 20.700000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  V2  a / r * V4  V5  * - empty: 0 0 1 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 0 0 
BEST SOLUTION! cost=14.6992 stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 14.699187	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 14.699187	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 14.699187	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 14.699187	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 14.699187	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 14.699187	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.35 stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 14.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 14.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 14.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 14.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 14.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 14.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=13.2 stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.200000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.200000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.200000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.200000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.200000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.200000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.200000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V0  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=9.35 stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 9.350000	stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 24 19 68 49 41 42 29 87 72 99 
BEST SOLUTION! cost=36.8 stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 36.800000	stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
iteration = 1 	 best= 36.800000	stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
iteration = 2 	 best= 36.800000	stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
iteration = 3 	 best= 36.800000	stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
iteration = 4 	 best= 36.800000	stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
iteration = 5 	 best= 36.800000	stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
iteration = 6 	 best= 36.800000	stackLen: 30 => 1.000000  V4  a V5  / V3  V4  a r 1.000000  V4  / i * * * / empty: 0 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=35.1056 stackLen: 30 => 1.000000  1.000000  e V4  a V5  V5  + V5  + / V3  V4  a r 1.000000  V4  * i * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 
iteration = 0 	 best= 35.105623	stackLen: 30 => 1.000000  1.000000  e V4  a V5  V5  + V5  + / V3  V4  a r 1.000000  V4  * i * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 
iteration = 1 	 best= 35.105623	stackLen: 30 => 1.000000  1.000000  e V4  a V5  V5  + V5  + / V3  V4  a r 1.000000  V4  * i * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 
iteration = 2 	 best= 35.105623	stackLen: 30 => 1.000000  1.000000  e V4  a V5  V5  + V5  + / V3  V4  a r 1.000000  V4  * i * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 
iteration = 3 	 best= 35.105623	stackLen: 30 => 1.000000  1.000000  e V4  a V5  V5  + V5  + / V3  V4  a r 1.000000  V4  * i * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 
iteration = 4 	 best= 35.105623	stackLen: 30 => 1.000000  1.000000  e V4  a V5  V5  + V5  + / V3  V4  a r 1.000000  V4  * i * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 
BEST SOLUTION! cost=31.7072 stackLen: 30 => V0  V0  V2  V1  + - + i i i V3  V0  V3  i 1.000000  * * r 1.000000  * + * empty: 0 1 0 0 1 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
iteration = 0 	 best= 31.707188	stackLen: 30 => V0  V0  V2  V1  + - + i i i V3  V0  V3  i 1.000000  * * r 1.000000  * + * empty: 0 1 0 0 1 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
iteration = 1 	 best= 31.707188	stackLen: 30 => V0  V0  V2  V1  + - + i i i V3  V0  V3  i 1.000000  * * r 1.000000  * + * empty: 0 1 0 0 1 0 0 0 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
BEST SOLUTION! cost=30.2 stackLen: 30 => V2  1.000000  r i * V5  1.000000  V0  * + * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 30.200000	stackLen: 30 => V2  1.000000  r i * V5  1.000000  V0  * + * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 30.200000	stackLen: 30 => V2  1.000000  r i * V5  1.000000  V0  * + * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 30.200000	stackLen: 30 => V2  1.000000  r i * V5  1.000000  V0  * + * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 30.200000	stackLen: 30 => V2  1.000000  r i * V5  1.000000  V0  * + * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 
iteration = 4 	 best= 30.200000	stackLen: 30 => V2  1.000000  r i * V5  1.000000  V0  * + * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 
iteration = 5 	 best= 30.200000	stackLen: 30 => V2  1.000000  r i * V5  1.000000  V0  * + * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=29.5667 stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 0 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 1 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 2 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 3 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 4 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 5 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 6 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 7 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 8 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
iteration = 9 	 best= 29.566667	stackLen: 30 => V2  1.000000  r r * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V0  * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 0 
BEST SOLUTION! cost=27.1667 stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 27.166667	stackLen: 30 => V2  1.000000  r i * V5  1.000000  1.000000  + 1.000000  1.000000  / + 1.000000  V3  V3  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.6 stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 26.600000	stackLen: 30 => V2  1.000000  r a * V5  1.000000  1.000000  + 1.000000  1.000000  / * 1.000000  V4  V0  + V0  V1  + + * / + * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 60 19 12 18 34 15 74 25 87 50 
BEST SOLUTION! cost=35.8 stackLen: 30 => 1.000000  V5  / V4  a * V4  a V1  V5  - / i * V4  a r V4  / * empty: 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 0 	 best= 35.800000	stackLen: 30 => 1.000000  V5  / V4  a * V4  a V1  V5  - / i * V4  a r V4  / * empty: 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 1 	 best= 35.800000	stackLen: 30 => 1.000000  V5  / V4  a * V4  a V1  V5  - / i * V4  a r V4  / * empty: 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 2 	 best= 35.800000	stackLen: 30 => 1.000000  V5  / V4  a * V4  a V1  V5  - / i * V4  a r V4  / * empty: 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 1 
BEST SOLUTION! cost=20.465 stackLen: 30 => V1  V1  * V2  a / V2  V5  * a * i r r i V2  * empty: 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 1 0 
iteration = 0 	 best= 20.465010	stackLen: 30 => V1  V1  * V2  a / V2  V5  * a * i r r i V2  * empty: 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 1 0 
iteration = 1 	 best= 20.465010	stackLen: 30 => V1  V1  * V2  a / V2  V5  * a * i r r i V2  * empty: 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 1 0 
iteration = 2 	 best= 20.465010	stackLen: 30 => V1  V1  * V2  a / V2  V5  * a * i r r i V2  * empty: 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 1 0 
iteration = 3 	 best= 20.465010	stackLen: 30 => V1  V1  * V2  a / V2  V5  * a * i r r i V2  * empty: 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 1 0 
iteration = 4 	 best= 20.465010	stackLen: 30 => V1  V1  * V2  a / V2  V5  * a * i r r i V2  * empty: 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 1 0 
iteration = 5 	 best= 20.465010	stackLen: 30 => V1  V1  * V2  a / V2  V5  * a * i r r i V2  * empty: 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 0 0 1 0 1 0 
BEST SOLUTION! cost=16.9983 stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 16.998338	stackLen: 30 => V1  V1  * V2  a / V2  V2  * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.8822 stackLen: 30 => V1  V1  * V1  a / V3  V2  + V5  V2  V1  + - * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.882199	stackLen: 30 => V1  V1  * V1  a / V3  V2  + V5  V2  V1  + - * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.882199	stackLen: 30 => V1  V1  * V1  a / V3  V2  + V5  V2  V1  + - * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.882199	stackLen: 30 => V1  V1  * V1  a / V3  V2  + V5  V2  V1  + - * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.882199	stackLen: 30 => V1  V1  * V1  a / V3  V2  + V5  V2  V1  + - * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.882199	stackLen: 30 => V1  V1  * V1  a / V3  V2  + V5  V2  V1  + - * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.882199	stackLen: 30 => V1  V1  * V1  a / V3  V2  + V5  V2  V1  + - * V2  V2  + * V5  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=13.0688 stackLen: 30 => V1  V1  * V1  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.068816	stackLen: 30 => V1  V1  * V1  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.068816	stackLen: 30 => V1  V1  * V1  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.068816	stackLen: 30 => V1  V1  * V1  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.068816	stackLen: 30 => V1  V1  * V1  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.068816	stackLen: 30 => V1  V1  * V1  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.068816	stackLen: 30 => V1  V1  * V1  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.0588 stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.058809	stackLen: 30 => V1  V1  * V0  a / V2  V2  + V5  V2  V1  + - * V2  V2  + * V4  * a * r r r i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 24 34 33 61 87 89 80 5 76 94 
BEST SOLUTION! cost=35.9 stackLen: 30 => 1.000000  1.000000  1.000000  / V1  V0  a r * * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 35.900000	stackLen: 30 => 1.000000  1.000000  1.000000  / V1  V0  a r * * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=33.6 stackLen: 30 => 1.000000  i 1.000000  * V4  1.000000  V5  1.000000  r * * * * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 33.600000	stackLen: 30 => 1.000000  i 1.000000  * V4  1.000000  V5  1.000000  r * * * * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 33.600000	stackLen: 30 => 1.000000  i 1.000000  * V4  1.000000  V5  1.000000  r * * * * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 33.600000	stackLen: 30 => 1.000000  i 1.000000  * V4  1.000000  V5  1.000000  r * * * * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 33.600000	stackLen: 30 => 1.000000  i 1.000000  * V4  1.000000  V5  1.000000  r * * * * empty: 0 0 1 1 1 1 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=33.5 stackLen: 30 => 1.000000  1.000000  1.000000  / a V1  * 1.000000  V2  * V5  - - V4  * / empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 33.500000	stackLen: 30 => 1.000000  1.000000  1.000000  / a V1  * 1.000000  V2  * V5  - - V4  * / empty: 0 0 1 1 1 0 1 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=19.2592 stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 0 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 1 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 2 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 3 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 4 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 5 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 6 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 7 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 8 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 9 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 10 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 11 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 12 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 13 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
iteration = 14 	 best= 19.259163	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  V4  * + * empty: 0 1 1 1 0 0 0 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 0 0 
BEST SOLUTION! cost=16.204 stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 24 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 25 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 26 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 27 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 28 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 29 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 30 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 31 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 32 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 33 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 34 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 35 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 36 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 37 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 38 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 39 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 40 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 41 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 42 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 43 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 44 	 best= 16.203954	stackLen: 30 => V5  V4  a i i V3  a V2  / * 1.000000  1.000000  1.000000  + * 1.000000  1.000000  1.000000  + + / V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=14.7553 stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.755286	stackLen: 30 => V5  V4  a i i V3  a V2  V2  V2  - + / * 1.000000  1.000000  1.000000  e r V4  1.000000  1.000000  + * / * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=9.35
stackLen: 30 => V0  V3  V2  - 1.000000  * - 1.000000  1.000000  1.000000  1.000000  + + + V2  V2  + V1  V0  + + a / r * V4  V5  * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((v5 * v4) - (\sqrt{({((v0 + v1) + (v2 + v2))^2}/(((1 + 1) + 1) + 1))} * ((1 * (v2 - v3)) - v0)))
Tempo de execucao: 1249.8 segundos
FIM
