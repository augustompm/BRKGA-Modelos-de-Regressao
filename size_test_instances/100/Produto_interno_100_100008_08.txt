Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 80 62 7 70 18 88 64 78 59 20 
BEST SOLUTION! cost=27.3077 stackLen: 30 => V0  a V1  / 1.000000  i V1  V2  V4  V3  + * * * * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 27.307667	stackLen: 30 => V0  a V1  / 1.000000  i V1  V2  V4  V3  + * * * * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 27.307667	stackLen: 30 => V0  a V1  / 1.000000  i V1  V2  V4  V3  + * * * * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=24.5479 stackLen: 30 => 1.000000  i e 1.000000  / e V0  1.000000  * / 1.000000  V1  * i V2  + * empty: 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 1 1 1 0 0 1 0 0 0 1 
COST2 IS BETTER!!!24.1
iteration = 0 	 best= 24.100000	stackLen: 30 => 1.000000  i e 1.000000  1.000000  - / e V0  1.000000  * / 1.000000  V1  * i V2  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.100000	stackLen: 30 => 1.000000  i e 1.000000  1.000000  - / e V0  1.000000  * / 1.000000  V1  * i V2  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.100000	stackLen: 30 => 1.000000  i e 1.000000  1.000000  - / e V0  1.000000  * / 1.000000  V1  * i V2  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.100000	stackLen: 30 => 1.000000  i e 1.000000  1.000000  - / e V0  1.000000  * / 1.000000  V1  * i V2  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.100000	stackLen: 30 => 1.000000  i e 1.000000  1.000000  - / e V0  1.000000  * / 1.000000  V1  * i V2  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=21.9 stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 2 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 3 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 4 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 5 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 6 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 7 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 8 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 9 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 10 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 11 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 12 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
iteration = 13 	 best= 21.900000	stackLen: 30 => 1.000000  i V1  / a r V0  a V0  / a r V1  * V0  * * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=21.4244 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 0 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 1 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 2 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 3 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 4 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 5 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 6 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 7 	 best= 21.424366	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  * * + 1.000000  e V1  / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
BEST SOLUTION! cost=20.9809 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  * * + 1.000000  e V1  V2  + / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.980853	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  * * + 1.000000  e V1  V2  + / a r V0  a V0  / a r V1  * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.3 stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 6 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 7 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 8 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 9 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 10 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 11 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 12 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 13 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 14 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 15 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 16 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 17 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 18 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 19 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 20 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 21 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 22 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 23 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 24 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 25 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 26 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 27 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 28 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 29 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 30 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 31 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 32 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 33 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 34 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 35 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 36 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 37 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 38 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 39 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 40 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 41 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 42 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 43 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 44 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 45 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 46 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 47 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 48 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 49 	 best= 18.300000	stackLen: 30 => 1.000000  1.000000  V2  a 1.000000  V1  V4  * * + / * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 76 86 64 9 14 18 89 8 54 41 
BEST SOLUTION! cost=49.9 stackLen: 30 => 1.000000  1.000000  1.000000  * / V2  V4  1.000000  V4  V5  - / - * * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 49.900000	stackLen: 30 => 1.000000  1.000000  1.000000  * / V2  V4  1.000000  V4  V5  - / - * * empty: 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 1 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=44.3799 stackLen: 30 => V0  a r 1.000000  1.000000  1.000000  1.000000  1.000000  + r V1  * * * * * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 44.379899	stackLen: 30 => V0  a r 1.000000  1.000000  1.000000  1.000000  1.000000  + r V1  * * * * * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=39.3 stackLen: 30 => V2  1.000000  V2  V0  + V3  + / + V4  i * V5  V4  a V4  / * * empty: 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 
iteration = 0 	 best= 39.300000	stackLen: 30 => V2  1.000000  V2  V0  + V3  + / + V4  i * V5  V4  a V4  / * * empty: 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 
iteration = 1 	 best= 39.300000	stackLen: 30 => V2  1.000000  V2  V0  + V3  + / + V4  i * V5  V4  a V4  / * * empty: 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 
iteration = 2 	 best= 39.300000	stackLen: 30 => V2  1.000000  V2  V0  + V3  + / + V4  i * V5  V4  a V4  / * * empty: 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 
iteration = 3 	 best= 39.300000	stackLen: 30 => V2  1.000000  V2  V0  + V3  + / + V4  i * V5  V4  a V4  / * * empty: 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 
iteration = 4 	 best= 39.300000	stackLen: 30 => V2  1.000000  V2  V0  + V3  + / + V4  i * V5  V4  a V4  / * * empty: 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 
iteration = 5 	 best= 39.300000	stackLen: 30 => V2  1.000000  V2  V0  + V3  + / + V4  i * V5  V4  a V4  / * * empty: 0 1 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 
BEST SOLUTION! cost=38 stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 38.000000	stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 38.000000	stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 38.000000	stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 38.000000	stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 38.000000	stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 38.000000	stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 38.000000	stackLen: 30 => V2  1.000000  1.000000  - 1.000000  + * V0  + V3  + V4  + V4  i * V5  V4  a V4  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=34.2 stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 34.200000	stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 34.200000	stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 34.200000	stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 34.200000	stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 34.200000	stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 34.200000	stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 34.200000	stackLen: 30 => V2  1.000000  V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=30.5 stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 30.500000	stackLen: 30 => V2  1.000000  1.000000  + V1  / V3  + + V0  + V3  V3  - + V4  + V4  i * V5  V4  a 1.000000  V4  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 94 22 66 24 63 83 10 65 27 16 
BEST SOLUTION! cost=25.5 stackLen: 30 => V5  V1  + 1.000000  V1  / V4  V3  1.000000  * + + - V1  * empty: 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 1 0 0 0 
iteration = 0 	 best= 25.500000	stackLen: 30 => V5  V1  + 1.000000  V1  / V4  V3  1.000000  * + + - V1  * empty: 0 1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 1 0 0 0 
BEST SOLUTION! cost=23.9926 stackLen: 30 => V5  1.000000  e V5  / * r i 1.000000  V3  1.000000  * V1  + / * empty: 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 23.992570	stackLen: 30 => V5  1.000000  e V5  / * r i 1.000000  V3  1.000000  * V1  + / * empty: 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 23.992570	stackLen: 30 => V5  1.000000  e V5  / * r i 1.000000  V3  1.000000  * V1  + / * empty: 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 23.992570	stackLen: 30 => V5  1.000000  e V5  / * r i 1.000000  V3  1.000000  * V1  + / * empty: 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 1 
iteration = 3 	 best= 23.992570	stackLen: 30 => V5  1.000000  e V5  / * r i 1.000000  V3  1.000000  * V1  + / * empty: 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 1 
iteration = 4 	 best= 23.992570	stackLen: 30 => V5  1.000000  e V5  / * r i 1.000000  V3  1.000000  * V1  + / * empty: 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 1 
iteration = 5 	 best= 23.992570	stackLen: 30 => V5  1.000000  e V5  / * r i 1.000000  V3  1.000000  * V1  + / * empty: 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=18.0988 stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.098818	stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.098818	stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.098818	stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.098818	stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.098818	stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.098818	stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.098818	stackLen: 30 => V5  V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.6806 stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  1.000000  + + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 16.680571	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  1.000000  + + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 16.680571	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  1.000000  + + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 16.680571	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  1.000000  + + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 16.680571	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  1.000000  + + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 16.680571	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  1.000000  + + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 16.680571	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i 1.000000  V3  1.000000  1.000000  1.000000  + + * V0  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=15.0426 stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.042612	stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 97 18 19 45 36 53 65 47 14 89 
BEST SOLUTION! cost=37.3595 stackLen: 30 => 1.000000  V0  a V2  1.000000  1.000000  V1  a * V0  * * * / * empty: 0 1 0 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 37.359524	stackLen: 30 => 1.000000  V0  a V2  1.000000  1.000000  V1  a * V0  * * * / * empty: 0 1 0 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 1 	 best= 37.359524	stackLen: 30 => 1.000000  V0  a V2  1.000000  1.000000  V1  a * V0  * * * / * empty: 0 1 0 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 2 	 best= 37.359524	stackLen: 30 => 1.000000  V0  a V2  1.000000  1.000000  V1  a * V0  * * * / * empty: 0 1 0 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 
iteration = 3 	 best= 37.359524	stackLen: 30 => 1.000000  V0  a V2  1.000000  1.000000  V1  a * V0  * * * / * empty: 0 1 0 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=27.7 stackLen: 30 => 1.000000  V2  / 1.000000  V5  / V0  + * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 1 
iteration = 0 	 best= 27.700000	stackLen: 30 => 1.000000  V2  / 1.000000  V5  / V0  + * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 1 
iteration = 1 	 best= 27.700000	stackLen: 30 => 1.000000  V2  / 1.000000  V5  / V0  + * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 1 
iteration = 2 	 best= 27.700000	stackLen: 30 => 1.000000  V2  / 1.000000  V5  / V0  + * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 1 
iteration = 3 	 best= 27.700000	stackLen: 30 => 1.000000  V2  / 1.000000  V5  / V0  + * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 1 
iteration = 4 	 best= 27.700000	stackLen: 30 => 1.000000  V2  / 1.000000  V5  / V0  + * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 1 
iteration = 5 	 best= 27.700000	stackLen: 30 => 1.000000  V2  / 1.000000  V5  / V0  + * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 1 
BEST SOLUTION! cost=27.6 stackLen: 30 => 1.000000  V2  / 1.000000  1.000000  + V5  / V0  V0  + + * empty: 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 27.600000	stackLen: 30 => 1.000000  V2  / 1.000000  1.000000  + V5  / V0  V0  + + * empty: 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 27.600000	stackLen: 30 => 1.000000  V2  / 1.000000  1.000000  + V5  / V0  V0  + + * empty: 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 27.600000	stackLen: 30 => 1.000000  V2  / 1.000000  1.000000  + V5  / V0  V0  + + * empty: 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 27.600000	stackLen: 30 => 1.000000  V2  / 1.000000  1.000000  + V5  / V0  V0  + + * empty: 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 27.600000	stackLen: 30 => 1.000000  V2  / 1.000000  1.000000  + V5  / V0  V0  + + * empty: 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 27.600000	stackLen: 30 => 1.000000  V2  / 1.000000  1.000000  + V5  / V0  V0  + + * empty: 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.4 stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  1.000000  1.000000  * / V5  / V0  V0  V0  + + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  1.000000  1.000000  * / V5  / V0  V0  V0  + + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  1.000000  1.000000  * / V5  / V0  V0  V0  + + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  1.000000  1.000000  * / V5  / V0  V0  V0  + + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  1.000000  1.000000  * / V5  / V0  V0  V0  + + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  1.000000  1.000000  * / V5  / V0  V0  V0  + + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 25.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  1.000000  1.000000  * / V5  / V0  V0  V0  + + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.6 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 22.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * i + V2  / 1.000000  a r r V5  V5  V5  V0  V3  V0  V0  + + + + - + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 84 49 93 71 32 16 27 48 52 54 
BEST SOLUTION! cost=35.6 stackLen: 30 => V5  V4  V1  a r V5  V0  1.000000  i 1.000000  V2  * * + - - - * empty: 0 1 0 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 35.600000	stackLen: 30 => V5  V4  V1  a r V5  V0  1.000000  i 1.000000  V2  * * + - - - * empty: 0 1 0 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 35.600000	stackLen: 30 => V5  V4  V1  a r V5  V0  1.000000  i 1.000000  V2  * * + - - - * empty: 0 1 0 1 0 0 1 1 0 0 0 0 1 0 1 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=33.2 stackLen: 30 => V5  V4  1.000000  1.000000  i * r * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 0 1 
iteration = 0 	 best= 33.200000	stackLen: 30 => V5  V4  1.000000  1.000000  i * r * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 0 1 
iteration = 1 	 best= 33.200000	stackLen: 30 => V5  V4  1.000000  1.000000  i * r * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 0 1 
BEST SOLUTION! cost=27.1 stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 5 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 6 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 7 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 8 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 9 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 10 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 11 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 12 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 13 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 14 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 15 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 16 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 17 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 18 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 19 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 20 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 21 	 best= 27.100000	stackLen: 30 => 1.000000  V5  / 1.000000  * 1.000000  * a r V0  - V5  * empty: 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=26.05 stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 26.050000	stackLen: 30 => 1.000000  V5  / 1.000000  1.000000  + 1.000000  / * V1  1.000000  * + a r V0  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=15.0426
stackLen: 30 => V5  V5  - V5  + 1.000000  e V5  / * r i i V3  1.000000  1.000000  1.000000  1.000000  V3  V1  + * * V0  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((v0 + (((v1 + v3) * 1) * 1)) * 1) * 1) + v3) * ((\sqrt{((v5/\exp(1)) * (v5 + (v5 - v5)))})))
Tempo de execucao: 879.062 segundos
FIM
