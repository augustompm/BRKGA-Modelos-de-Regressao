Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 100 1
1.00	8.00	-7.00	4.00	13.04
9.00	7.00	-1.00	-1.00	2.00
10.00	6.00	-2.00	-10.00	8.94
8.00	-5.00	7.00	7.00	13.00
-1.00	10.00	-1.00	-9.00	13.60
-9.00	0.00	5.00	-6.00	14.21
8.00	-4.00	-1.00	-1.00	12.00
-5.00	-6.00	3.00	5.00	2.24
-3.00	0.00	-9.00	-1.00	8.54
10.00	-3.00	3.00	5.00	13.15
4.00	0.00	-7.00	-8.00	4.12
3.00	1.00	-1.00	9.00	10.20
-1.00	4.00	-4.00	5.00	10.30
-9.00	-2.00	-3.00	-6.00	7.62
-2.00	5.00	3.00	-8.00	13.04
-10.00	-1.00	2.00	1.00	9.06
8.00	10.00	-8.00	-6.00	2.83
-1.00	7.00	-6.00	-9.00	8.54
4.00	10.00	-7.00	5.00	13.42
-9.00	6.00	-1.00	-8.00	16.55
-9.00	0.00	5.00	-7.00	15.00
-2.00	6.00	5.00	-9.00	16.12
7.00	5.00	3.00	1.00	2.83
9.00	7.00	-4.00	-5.00	2.24
4.00	3.00	-3.00	8.00	11.05
-1.00	4.00	-4.00	-2.00	5.39
-9.00	-9.00	8.00	1.00	7.00
-1.00	1.00	1.00	-1.00	2.83
-4.00	-6.00	5.00	2.00	3.61
-7.00	1.00	5.00	-5.00	12.81
1.00	-8.00	-2.00	4.00	10.82
-10.00	-3.00	5.00	-6.00	13.04
1.00	-9.00	3.00	10.00	12.21
-4.00	0.00	2.00	-4.00	7.21
0.00	10.00	-1.00	10.00	14.87
4.00	5.00	-9.00	-1.00	8.06
3.00	-6.00	10.00	-9.00	21.02
2.00	-4.00	5.00	5.00	6.00
4.00	5.00	-9.00	7.00	16.03
2.00	1.00	-5.00	-2.00	3.16
9.00	8.00	6.00	1.00	5.10
10.00	-6.00	4.00	-9.00	20.62
-8.00	6.00	8.00	3.00	14.87
7.00	-6.00	-1.00	-9.00	15.26
1.00	-9.00	-7.00	3.00	14.14
-9.00	1.00	-3.00	0.00	10.44
5.00	4.00	5.00	-1.00	6.08
9.00	-1.00	1.00	-5.00	11.66
-7.00	-3.00	2.00	-7.00	9.85
-1.00	6.00	1.00	0.00	7.07
-10.00	0.00	-4.00	3.00	12.21
2.00	-10.00	-4.00	7.00	16.28
9.00	0.00	9.00	-2.00	14.21
-6.00	2.00	2.00	6.00	8.94
3.00	-1.00	1.00	10.00	9.85
7.00	9.00	-2.00	-4.00	2.83
5.00	-1.00	-8.00	10.00	18.97
-7.00	3.00	-10.00	-9.00	10.05
-7.00	1.00	0.00	-9.00	12.04
-5.00	-10.00	-4.00	5.00	10.30
-5.00	1.00	-8.00	-8.00	6.00
9.00	2.00	1.00	2.00	7.07
-2.00	1.00	-7.00	4.00	11.40
7.00	1.00	-4.00	-10.00	8.49
4.00	-8.00	6.00	9.00	12.37
2.00	0.00	4.00	0.00	4.47
-4.00	6.00	-8.00	-4.00	10.77
8.00	7.00	-2.00	-6.00	4.12
-3.00	-9.00	3.00	-8.00	12.53
1.00	-2.00	7.00	-4.00	11.40
-3.00	-4.00	6.00	0.00	6.08
-2.00	-6.00	3.00	1.00	4.47
-3.00	-3.00	7.00	3.00	4.00
5.00	-8.00	10.00	0.00	16.40
10.00	-4.00	-10.00	-1.00	16.64
-9.00	-5.00	-7.00	6.00	13.60
7.00	-5.00	-6.00	-4.00	12.17
-3.00	4.00	2.00	9.00	9.90
7.00	3.00	8.00	-1.00	9.85
8.00	1.00	-5.00	6.00	13.04
0.00	-10.00	-4.00	6.00	14.14
8.00	10.00	-1.00	-6.00	5.39
3.00	2.00	-4.00	-5.00	1.41
8.00	-4.00	10.00	4.00	13.42
-4.00	1.00	0.00	2.00	5.39
-2.00	4.00	0.00	2.00	6.32
9.00	0.00	2.00	8.00	10.82
8.00	-5.00	8.00	-4.00	17.69
-7.00	9.00	0.00	-3.00	16.28
0.00	0.00	-10.00	-7.00	3.00
9.00	-3.00	2.00	-1.00	12.37
-9.00	6.00	-7.00	7.00	20.52
2.00	-5.00	7.00	4.00	7.62
3.00	7.00	8.00	8.00	4.00
5.00	-6.00	-2.00	4.00	12.53
-6.00	4.00	-5.00	-9.00	10.77
5.00	5.00	8.00	-8.00	16.00
-7.00	8.00	-10.00	8.00	23.43
4.00	-2.00	6.00	-3.00	10.82
6.00	1.00	4.00	-8.00	13.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 60 8 23 63 4 15 17 37 97 28 
BEST SOLUTION! cost=4.49718 stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
iteration = 0 	 best= 4.497181	stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
iteration = 1 	 best= 4.497181	stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
iteration = 2 	 best= 4.497181	stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
iteration = 3 	 best= 4.497181	stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
iteration = 4 	 best= 4.497181	stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
iteration = 5 	 best= 4.497181	stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
iteration = 6 	 best= 4.497181	stackLen: 30 => V3  1.000000  1.000000  - e a * a r 1.000000  1.000000  i / * empty: 0 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 
BEST SOLUTION! cost=3.97628 stackLen: 30 => V3  1.000000  1.000000  / 1.000000  1.000000  / / e r * a r 1.000000  1.000000  / V3  V2  - V3  - / V3  - - V2  - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 0 	 best= 3.976275	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  1.000000  / / e r * a r 1.000000  1.000000  / V3  V2  - V3  - / V3  - - V2  - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 1 	 best= 3.976275	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  1.000000  / / e r * a r 1.000000  1.000000  / V3  V2  - V3  - / V3  - - V2  - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
iteration = 2 	 best= 3.976275	stackLen: 30 => V3  1.000000  1.000000  / 1.000000  1.000000  / / e r * a r 1.000000  1.000000  / V3  V2  - V3  - / V3  - - V2  - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 
BEST SOLUTION! cost=3.67085 stackLen: 30 => 1.000000  1.000000  V3  V0  a r + a r / * empty: 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 3.670850	stackLen: 30 => 1.000000  1.000000  V3  V0  a r + a r / * empty: 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 3.670850	stackLen: 30 => 1.000000  1.000000  V3  V0  a r + a r / * empty: 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 3.670850	stackLen: 30 => 1.000000  1.000000  V3  V0  a r + a r / * empty: 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 3.670850	stackLen: 30 => 1.000000  1.000000  V3  V0  a r + a r / * empty: 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 3.670850	stackLen: 30 => 1.000000  1.000000  V3  V0  a r + a r / * empty: 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 3.670850	stackLen: 30 => 1.000000  1.000000  V3  V0  a r + a r / * empty: 0 1 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=2.88995 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V3  V3  + V0  a r + a r / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 2.889951	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V3  V3  + V0  a r + a r / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 2.889951	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V3  V3  + V0  a r + a r / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 2.889951	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V3  V3  + V0  a r + a r / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 2.889951	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V3  V3  + V0  a r + a r / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 2.889951	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V3  V3  + V0  a r + a r / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=2.15025 stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 0 	 best= 2.150251	stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 1 	 best= 2.150251	stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 2 	 best= 2.150251	stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 3 	 best= 2.150251	stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 4 	 best= 2.150251	stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 5 	 best= 2.150251	stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
iteration = 6 	 best= 2.150251	stackLen: 30 => V0  i V1  i - i a r 1.000000  * empty: 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 1 1 0 1 1 0 1 
BEST SOLUTION! cost=2.12561 stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 1 1 
iteration = 0 	 best= 2.125608	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 1 1 
iteration = 1 	 best= 2.125608	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 1 1 
iteration = 2 	 best= 2.125608	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 1 1 
iteration = 3 	 best= 2.125608	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 1 1 
iteration = 4 	 best= 2.125608	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 1 1 
iteration = 5 	 best= 2.125608	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 1 1 1 
BEST SOLUTION! cost=1.84831 stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 18 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 19 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 20 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 21 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 22 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 23 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 24 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 25 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 26 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 27 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 28 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 29 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 30 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 31 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 32 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 33 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 34 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 35 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 36 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 37 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 38 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 39 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 40 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 41 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 42 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 43 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 44 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 45 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 46 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 47 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 48 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 49 	 best= 1.848313	stackLen: 30 => V0  i i V1  V1  - V1  + i - i a r 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  / r / 1.000000  i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 54 98 81 38 70 63 59 80 91 62 
BEST SOLUTION! cost=7.00077 stackLen: 30 => V2  V3  - V2  V2  1.000000  * 1.000000  1.000000  V2  / * V2  * 1.000000  / * * * empty: 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 7.000774	stackLen: 30 => V2  V3  - V2  V2  1.000000  * 1.000000  1.000000  V2  / * V2  * 1.000000  / * * * empty: 0 0 0 1 1 1 0 0 1 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=5.95691 stackLen: 30 => 1.000000  1.000000  V3  a i / r / empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 5.956914	stackLen: 30 => 1.000000  1.000000  V3  a i / r / empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 5.956914	stackLen: 30 => 1.000000  1.000000  V3  a i / r / empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 5.956914	stackLen: 30 => 1.000000  1.000000  V3  a i / r / empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=1.76466 stackLen: 30 => V3  V2  - a r 1.000000  e 1.000000  e a V3  / / + empty: 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 
iteration = 0 	 best= 1.764658	stackLen: 30 => V3  V2  - a r 1.000000  e 1.000000  e a V3  / / + empty: 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 
iteration = 1 	 best= 1.764658	stackLen: 30 => V3  V2  - a r 1.000000  e 1.000000  e a V3  / / + empty: 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 
iteration = 2 	 best= 1.764658	stackLen: 30 => V3  V2  - a r 1.000000  e 1.000000  e a V3  / / + empty: 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 
iteration = 3 	 best= 1.764658	stackLen: 30 => V3  V2  - a r 1.000000  e 1.000000  e a V3  / / + empty: 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 
iteration = 4 	 best= 1.764658	stackLen: 30 => V3  V2  - a r 1.000000  e 1.000000  e a V3  / / + empty: 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 
iteration = 5 	 best= 1.764658	stackLen: 30 => V3  V2  - a r 1.000000  e 1.000000  e a V3  / / + empty: 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 1 
BEST SOLUTION! cost=1.74528 stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 1.745280	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 1.745280	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 1.745280	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 1.745280	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 1.745280	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 1.745280	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 1.745280	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  / e 1.000000  e a V3  / / + empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=1.54658 stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V2  a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 1.546582	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V2  a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 1.546582	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V2  a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 1.546582	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V2  a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 1.546582	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V2  a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 1.546582	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V2  a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 1.546582	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V2  a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=1.34333 stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 1.343329	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * / e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=1.3344 stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 1.334401	stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 36 3 82 73 41 25 87 23 94 95 
BEST SOLUTION! cost=4.41948 stackLen: 30 => 1.000000  1.000000  1.000000  * r + V2  a 1.000000  V0  / V2  * a 1.000000  V0  a / / r * * empty: 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 4.419476	stackLen: 30 => 1.000000  1.000000  1.000000  * r + V2  a 1.000000  V0  / V2  * a 1.000000  V0  a / / r * * empty: 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 4.419476	stackLen: 30 => 1.000000  1.000000  1.000000  * r + V2  a 1.000000  V0  / V2  * a 1.000000  V0  a / / r * * empty: 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 4.419476	stackLen: 30 => 1.000000  1.000000  1.000000  * r + V2  a 1.000000  V0  / V2  * a 1.000000  V0  a / / r * * empty: 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 4.419476	stackLen: 30 => 1.000000  1.000000  1.000000  * r + V2  a 1.000000  V0  / V2  * a 1.000000  V0  a / / r * * empty: 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=4.03563 stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 0 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 1 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 2 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 3 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 4 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 5 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 6 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 7 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
iteration = 8 	 best= 4.035635	stackLen: 30 => V2  1.000000  1.000000  1.000000  + r r V3  1.000000  V3  / + a r / * + empty: 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 
BEST SOLUTION! cost=3.97634 stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 3.976338	stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 3.976338	stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 3.976338	stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 3.976338	stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 3.976338	stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 3.976338	stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 3.976338	stackLen: 30 => V2  1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=3.65941 stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 3.659409	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  1.000000  V2  V2  + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=2.89897 stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 2.898973	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V3  V3  - 1.000000  V2  V0  V2  + + * V3  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=2.1366 stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 2.136603	stackLen: 30 => V2  V2  - 1.000000  1.000000  1.000000  / 1.000000  1.000000  + * r V2  V3  + 1.000000  V2  V0  V2  + + * V1  - + a r / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 91 96 42 13 89 16 81 84 46 11 
BEST SOLUTION! cost=6.62228 stackLen: 30 => 1.000000  V1  V3  + / 1.000000  a 1.000000  * * empty: 0 1 1 1 1 0 1 0 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 
iteration = 0 	 best= 6.622283	stackLen: 30 => 1.000000  V1  V3  + / 1.000000  a 1.000000  * * empty: 0 1 1 1 1 0 1 0 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 
iteration = 1 	 best= 6.622283	stackLen: 30 => 1.000000  V1  V3  + / 1.000000  a 1.000000  * * empty: 0 1 1 1 1 0 1 0 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 
iteration = 2 	 best= 6.622283	stackLen: 30 => 1.000000  V1  V3  + / 1.000000  a 1.000000  * * empty: 0 1 1 1 1 0 1 0 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 
BEST SOLUTION! cost=4.43847 stackLen: 30 => V2  V0  * a r r 1.000000  1.000000  i r + * empty: 0 0 1 1 0 0 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 4.438473	stackLen: 30 => V2  V0  * a r r 1.000000  1.000000  i r + * empty: 0 0 1 1 0 0 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 4.438473	stackLen: 30 => V2  V0  * a r r 1.000000  1.000000  i r + * empty: 0 0 1 1 0 0 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 4.438473	stackLen: 30 => V2  V0  * a r r 1.000000  1.000000  i r + * empty: 0 0 1 1 0 0 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=4.38797 stackLen: 30 => 1.000000  r V0  V1  - a r * 1.000000  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 4.387968	stackLen: 30 => 1.000000  r V0  V1  - a r * 1.000000  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=4.1784 stackLen: 30 => V3  a r 1.000000  V2  / 1.000000  e 1.000000  / * + empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 0 0 1 1 0 1 
iteration = 0 	 best= 4.178400	stackLen: 30 => V3  a r 1.000000  V2  / 1.000000  e 1.000000  / * + empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 0 0 1 1 0 1 
BEST SOLUTION! cost=3.96819 stackLen: 30 => 1.000000  V3  1.000000  * a r / V0  V1  - + empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 3.968192	stackLen: 30 => 1.000000  V3  1.000000  * a r / V0  V1  - + empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 3.968192	stackLen: 30 => 1.000000  V3  1.000000  * a r / V0  V1  - + empty: 0 1 1 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=3.89913 stackLen: 30 => 1.000000  1.000000  1.000000  V1  V3  + * a / r * empty: 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 
iteration = 0 	 best= 3.899128	stackLen: 30 => 1.000000  1.000000  1.000000  V1  V3  + * a / r * empty: 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 
iteration = 1 	 best= 3.899128	stackLen: 30 => 1.000000  1.000000  1.000000  V1  V3  + * a / r * empty: 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 
iteration = 2 	 best= 3.899128	stackLen: 30 => 1.000000  1.000000  1.000000  V1  V3  + * a / r * empty: 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 
iteration = 3 	 best= 3.899128	stackLen: 30 => 1.000000  1.000000  1.000000  V1  V3  + * a / r * empty: 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 
iteration = 4 	 best= 3.899128	stackLen: 30 => 1.000000  1.000000  1.000000  V1  V3  + * a / r * empty: 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 
iteration = 5 	 best= 3.899128	stackLen: 30 => 1.000000  1.000000  1.000000  V1  V3  + * a / r * empty: 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 
BEST SOLUTION! cost=2.58797 stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 2.587968	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  * 1.000000  1.000000  V2  V3  - * a * r * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=2.54541 stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 2.545410	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V0  + V3  V3  V3  - V1  V3  + + + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=1.93676 stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V2  + V3  - V3  1.000000  V1  V3  + * + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 1.936758	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V2  + V3  - V3  1.000000  V1  V3  + * + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 1.936758	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V2  + V3  - V3  1.000000  V1  V3  + * + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 1.936758	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V2  + V3  - V3  1.000000  V1  V3  + * + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 1.936758	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V2  + V3  - V3  1.000000  V1  V3  + * + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 1.936758	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V2  + V3  - V3  1.000000  V1  V3  + * + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 1.936758	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  * / 1.000000  1.000000  V0  V2  + V3  - V3  1.000000  V1  V3  + * + * a * r * r i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=1.74858 stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 1.748581	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  r / 1.000000  1.000000  V3  V2  - V1  V0  i - i V3  V2  - + * * * a * r r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 62 7 49 88 41 14 64 78 95 67 
BEST SOLUTION! cost=5.37965 stackLen: 30 => 1.000000  1.000000  a 1.000000  i + 1.000000  V0  a r i * * i * empty: 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 5.379653	stackLen: 30 => 1.000000  1.000000  a 1.000000  i + 1.000000  V0  a r i * * i * empty: 0 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=3.27533 stackLen: 30 => V0  V0  a 1.000000  / i r V1  V0  - * * empty: 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 3.275325	stackLen: 30 => V0  V0  a 1.000000  / i r V1  V0  - * * empty: 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 
iteration = 1 	 best= 3.275325	stackLen: 30 => V0  V0  a 1.000000  / i r V1  V0  - * * empty: 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 
iteration = 2 	 best= 3.275325	stackLen: 30 => V0  V0  a 1.000000  / i r V1  V0  - * * empty: 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 
iteration = 3 	 best= 3.275325	stackLen: 30 => V0  V0  a 1.000000  / i r V1  V0  - * * empty: 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 
iteration = 4 	 best= 3.275325	stackLen: 30 => V0  V0  a 1.000000  / i r V1  V0  - * * empty: 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 
iteration = 5 	 best= 3.275325	stackLen: 30 => V0  V0  a 1.000000  / i r V1  V0  - * * empty: 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=3.26123 stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
iteration = 0 	 best= 3.261229	stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
iteration = 1 	 best= 3.261229	stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
iteration = 2 	 best= 3.261229	stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
iteration = 3 	 best= 3.261229	stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
iteration = 4 	 best= 3.261229	stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
iteration = 5 	 best= 3.261229	stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
iteration = 6 	 best= 3.261229	stackLen: 30 => V0  V0  - V0  - V0  V0  * a 1.000000  1.000000  + 1.000000  1.000000  * * / r r V1  V0  - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 
BEST SOLUTION! cost=2.47039 stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 2.470388	stackLen: 30 => V0  V0  - V0  - V0  V0  V0  + * a 1.000000  1.000000  * 1.000000  1.000000  / * / r r V1  V0  V0  + - * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=1.3344
stackLen: 30 => V3  V2  - a r 1.000000  1.000000  + 1.000000  1.000000  * * e 1.000000  1.000000  + V0  V2  V2  * V2  / * V2  * a r * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (((\sqrt{{(v2 * ((v2/(v2 * v2)) * v0))^2}} * (1 + 1))/\exp(((1 * 1) * (1 + 1)))) + \sqrt{{(v2 - v3)^2}})
Tempo de execucao: 1293.32 segundos
FIM
