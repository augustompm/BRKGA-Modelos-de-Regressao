Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 76 63 7 44 66 86 96 40 18 54 
BEST SOLUTION! cost=39.9 stackLen: 30 => V1  a 1.000000  V1  V0  i V0  * * * / V1  * empty: 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 39.900000	stackLen: 30 => V1  a 1.000000  V1  V0  i V0  * * * / V1  * empty: 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 0 1 0 0 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=38.2 stackLen: 30 => V4  V5  - 1.000000  a 1.000000  * r r V2  / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 0 1 0 1 0 1 
iteration = 0 	 best= 38.200000	stackLen: 30 => V4  V5  - 1.000000  a 1.000000  * r r V2  / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 0 1 0 1 0 1 
iteration = 1 	 best= 38.200000	stackLen: 30 => V4  V5  - 1.000000  a 1.000000  * r r V2  / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 0 1 0 1 0 1 
BEST SOLUTION! cost=28.8 stackLen: 30 => V5  V4  V4  - 1.000000  V3  / + + V2  * empty: 0 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 28.800000	stackLen: 30 => V5  V4  V4  - 1.000000  V3  / + + V2  * empty: 0 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 28.800000	stackLen: 30 => V5  V4  V4  - 1.000000  V3  / + + V2  * empty: 0 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 28.800000	stackLen: 30 => V5  V4  V4  - 1.000000  V3  / + + V2  * empty: 0 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 28.800000	stackLen: 30 => V5  V4  V4  - 1.000000  V3  / + + V2  * empty: 0 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 28.800000	stackLen: 30 => V5  V4  V4  - 1.000000  V3  / + + V2  * empty: 0 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 28.800000	stackLen: 30 => V5  V4  V4  - 1.000000  V3  / + + V2  * empty: 0 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=23.1 stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 23.100000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * V3  / + V2  * + empty: 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=15.85 stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 15.850000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / V5  * / * V3  + + V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=13.9 stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.900000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V4  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=13.3 stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 13.300000	stackLen: 30 => V5  V4  * V4  V4  - 1.000000  1.000000  * 1.000000  1.000000  1.000000  + + V5  V0  + / / V3  + + V2  V2  V2  - + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 0 67 16 48 45 36 4 95 51 77 
BEST SOLUTION! cost=25.8988 stackLen: 30 => V5  i a 1.000000  V1  V2  - * / V0  * 1.000000  - V5  * V3  * empty: 0 1 0 0 0 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 25.898849	stackLen: 30 => V5  i a 1.000000  V1  V2  - * / V0  * 1.000000  - V5  * V3  * empty: 0 1 0 0 0 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=25.3792 stackLen: 30 => V3  V3  a V1  / V5  1.000000  1.000000  V2  / / * * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.379167	stackLen: 30 => V3  V3  a V1  / V5  1.000000  1.000000  V2  / / * * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.379167	stackLen: 30 => V3  V3  a V1  / V5  1.000000  1.000000  V2  / / * * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.379167	stackLen: 30 => V3  V3  a V1  / V5  1.000000  1.000000  V2  / / * * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.379167	stackLen: 30 => V3  V3  a V1  / V5  1.000000  1.000000  V2  / / * * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.379167	stackLen: 30 => V3  V3  a V1  / V5  1.000000  1.000000  V2  / / * * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21 stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 0 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 1 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 2 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 3 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 4 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 5 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 6 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 7 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 8 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 9 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 10 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 11 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
iteration = 12 	 best= 21.000000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  * V2  a r - - * empty: 0 0 1 1 0 1 0 1 1 0 1 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 1 1 0 1 
BEST SOLUTION! cost=20.2 stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 20.200000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 20.200000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 20.200000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 20.200000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 20.200000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 20.200000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 20.200000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  1.000000  V5  * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=16.1 stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 15 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 16 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 17 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 18 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 19 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 20 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 21 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 22 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 23 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 24 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 25 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 26 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 27 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 28 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 29 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 30 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 31 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 32 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 33 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 34 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 35 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 36 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 37 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 38 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 39 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 40 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 41 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 42 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 43 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 44 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 45 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 46 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 47 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 48 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 49 	 best= 16.100000	stackLen: 30 => V4  V3  1.000000  * V2  1.000000  1.000000  / 1.000000  1.000000  V2  V2  + 1.000000  V0  V5  - * + * * / a r - - * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 79 32 45 14 34 71 28 20 8 82 
BEST SOLUTION! cost=22.7 stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 0 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 1 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 2 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 3 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 4 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 5 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 6 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 7 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 8 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 9 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 10 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 11 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 12 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 13 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 14 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 15 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 16 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 17 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
iteration = 18 	 best= 22.700000	stackLen: 30 => 1.000000  V5  * a r V2  + V5  * empty: 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 
BEST SOLUTION! cost=22.4271 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + + r V2  / * 1.000000  V5  * a r + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.427093	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + + r V2  / * 1.000000  V5  * a r + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.427093	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + + r V2  / * 1.000000  V5  * a r + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.427093	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + + r V2  / * 1.000000  V5  * a r + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.427093	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + + r V2  / * 1.000000  V5  * a r + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.427093	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + + r V2  / * 1.000000  V5  * a r + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.427093	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + + r V2  / * 1.000000  V5  * a r + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.7948 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.794827	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.794827	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.794827	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.794827	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.794827	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.794827	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.794827	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  1.000000  1.000000  - + + r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.0567 stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.056651	stackLen: 30 => 1.000000  1.000000  * r 1.000000  1.000000  1.000000  - + e r V2  V4  + V2  + / * V0  - V0  - V1  a r + V5  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 24 62 2 25 13 23 87 77 0 51 
BEST SOLUTION! cost=32.3 stackLen: 30 => V2  V3  V3  - a r V3  - 1.000000  1.000000  i 1.000000  / / * * empty: 0 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 32.300000	stackLen: 30 => V2  V3  V3  - a r V3  - 1.000000  1.000000  i 1.000000  / / * * empty: 0 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 32.300000	stackLen: 30 => V2  V3  V3  - a r V3  - 1.000000  1.000000  i 1.000000  / / * * empty: 0 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 32.300000	stackLen: 30 => V2  V3  V3  - a r V3  - 1.000000  1.000000  i 1.000000  / / * * empty: 0 1 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=32.1221 stackLen: 30 => V2  1.000000  1.000000  1.000000  e r V3  1.000000  * * * / * empty: 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 32.122072	stackLen: 30 => V2  1.000000  1.000000  1.000000  e r V3  1.000000  * * * / * empty: 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 32.122072	stackLen: 30 => V2  1.000000  1.000000  1.000000  e r V3  1.000000  * * * / * empty: 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 32.122072	stackLen: 30 => V2  1.000000  1.000000  1.000000  e r V3  1.000000  * * * / * empty: 0 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=26.1901 stackLen: 30 => 1.000000  V2  / 1.000000  e r a 1.000000  * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 0 1 0 0 0 
iteration = 0 	 best= 26.190114	stackLen: 30 => 1.000000  V2  / 1.000000  e r a 1.000000  * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 0 1 0 0 0 
iteration = 1 	 best= 26.190114	stackLen: 30 => 1.000000  V2  / 1.000000  e r a 1.000000  * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 0 1 0 0 0 
iteration = 2 	 best= 26.190114	stackLen: 30 => 1.000000  V2  / 1.000000  e r a 1.000000  * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 0 1 0 0 0 
iteration = 3 	 best= 26.190114	stackLen: 30 => 1.000000  V2  / 1.000000  e r a 1.000000  * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 0 1 0 0 0 
iteration = 4 	 best= 26.190114	stackLen: 30 => 1.000000  V2  / 1.000000  e r a 1.000000  * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 0 1 0 0 0 
iteration = 5 	 best= 26.190114	stackLen: 30 => 1.000000  V2  / 1.000000  e r a 1.000000  * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 1 0 1 0 0 0 
BEST SOLUTION! cost=26.15 stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 26.150000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / * V5  / * V1  1.000000  V4  * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=21.4 stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  + V2  / 1.000000  a i a 1.000000  1.000000  / / V0  V5  - / * V1  1.000000  V4  V4  - V4  - * V1  - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 43 60 79 83 25 91 14 77 68 3 
BEST SOLUTION! cost=26.8 stackLen: 30 => V5  V3  1.000000  * a V3  a V4  * / * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 26.800000	stackLen: 30 => V5  V3  1.000000  * a V3  a V4  * / * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=24.4 stackLen: 30 => V0  V4  V5  V0  a V0  / a r * * * empty: 0 1 1 0 1 0 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 24.400000	stackLen: 30 => V0  V4  V5  V0  a V0  / a r * * * empty: 0 1 1 0 1 0 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=20.9 stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 6 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 7 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 8 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 9 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 10 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 11 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 12 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 13 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 14 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 15 	 best= 20.900000	stackLen: 30 => V4  V2  - V2  V3  + 1.000000  * * empty: 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=16.6 stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 16.600000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  1.000000  * 1.000000  1.000000  * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.9 stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  + 1.000000  1.000000  * 1.000000  1.000000  V2  * * * / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 14.900000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  + 1.000000  1.000000  * 1.000000  1.000000  V2  * * * / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 14.900000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  + 1.000000  1.000000  * 1.000000  1.000000  V2  * * * / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 14.900000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  + 1.000000  1.000000  * 1.000000  1.000000  V2  * * * / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 14.900000	stackLen: 30 => V4  V2  - V1  V2  V2  - - V3  + 1.000000  1.000000  + 1.000000  1.000000  * 1.000000  1.000000  V2  * * * / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=14.8 stackLen: 30 => 1.000000  V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 1 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 14.800000	stackLen: 30 => 1.000000  V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 1 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 14.800000	stackLen: 30 => 1.000000  V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 1 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 14.800000	stackLen: 30 => 1.000000  V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 1 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 14.800000	stackLen: 30 => 1.000000  V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 1 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 
iteration = 4 	 best= 14.800000	stackLen: 30 => 1.000000  V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 1 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 
iteration = 5 	 best= 14.800000	stackLen: 30 => 1.000000  V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 1 0 0 0 0 0 1 0 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=14.15 stackLen: 30 => 1.000000  1.000000  + V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 14.150000	stackLen: 30 => 1.000000  1.000000  + V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 14.150000	stackLen: 30 => 1.000000  1.000000  + V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 14.150000	stackLen: 30 => 1.000000  1.000000  + V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 14.150000	stackLen: 30 => 1.000000  1.000000  + V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 14.150000	stackLen: 30 => 1.000000  1.000000  + V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 14.150000	stackLen: 30 => 1.000000  1.000000  + V1  a i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=12.6795 stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 15 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 16 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 17 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 18 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 19 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 20 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 21 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 22 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 23 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 24 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 25 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 26 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 27 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 28 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 29 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 30 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 31 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 32 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 33 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 34 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 35 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 36 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 37 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 38 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 39 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 40 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 41 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 42 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 43 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 44 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 45 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 46 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 47 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 48 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 49 	 best= 12.679542	stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.6795
stackLen: 30 => 1.000000  1.000000  1.000000  * + V1  V1  V1  + * i i r / 1.000000  V5  / + 1.000000  V2  V4  - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
trueStackSize=24
printSolution2: (((v4 - v2)/1) * ((v5/1) + (\sqrt{((((v1 + v1) * v1)))}/((1 * 1) + 1))))
Tempo de execucao: 1135.43 segundos
FIM
