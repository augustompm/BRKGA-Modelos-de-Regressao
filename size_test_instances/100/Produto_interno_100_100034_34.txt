Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 76 9 98 97 20 41 93 85 7 36 
BEST SOLUTION! cost=30.3 stackLen: 30 => 1.000000  V5  1.000000  V4  1.000000  i 1.000000  / a * * * * empty: 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 0 1 1 0 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 30.300000	stackLen: 30 => 1.000000  V5  1.000000  V4  1.000000  i 1.000000  / a * * * * empty: 0 1 1 1 1 1 1 0 1 1 1 0 0 0 1 0 0 1 1 0 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=28.6 stackLen: 30 => 1.000000  1.000000  1.000000  V4  a r V5  V4  - * * / * empty: 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.600000	stackLen: 30 => 1.000000  1.000000  1.000000  V4  a r V5  V4  - * * / * empty: 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=27.2 stackLen: 30 => V2  1.000000  i a a 1.000000  V5  / * * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 27.200000	stackLen: 30 => V2  1.000000  i a a 1.000000  V5  / * * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 27.200000	stackLen: 30 => V2  1.000000  i a a 1.000000  V5  / * * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 27.200000	stackLen: 30 => V2  1.000000  i a a 1.000000  V5  / * * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=25.677 stackLen: 30 => V2  V1  + V3  i V3  a 1.000000  V2  / a / * * empty: 0 0 1 0 0 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 25.676984	stackLen: 30 => V2  V1  + V3  i V3  a 1.000000  V2  / a / * * empty: 0 0 1 0 0 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=23.1 stackLen: 30 => V2  1.000000  V2  1.000000  V4  * - * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 1 0 
iteration = 0 	 best= 23.100000	stackLen: 30 => V2  1.000000  V2  1.000000  V4  * - * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 1 0 
iteration = 1 	 best= 23.100000	stackLen: 30 => V2  1.000000  V2  1.000000  V4  * - * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 1 0 
iteration = 2 	 best= 23.100000	stackLen: 30 => V2  1.000000  V2  1.000000  V4  * - * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 1 0 
iteration = 3 	 best= 23.100000	stackLen: 30 => V2  1.000000  V2  1.000000  V4  * - * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 1 0 
iteration = 4 	 best= 23.100000	stackLen: 30 => V2  1.000000  V2  1.000000  V4  * - * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 0 1 0 1 0 
BEST SOLUTION! cost=22.2 stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  V5  / * empty: 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 0 
iteration = 0 	 best= 22.200000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  V5  / * empty: 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 0 
iteration = 1 	 best= 22.200000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  V5  / * empty: 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 0 
iteration = 2 	 best= 22.200000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  V5  / * empty: 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 0 
iteration = 3 	 best= 22.200000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  V5  / * empty: 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 0 
iteration = 4 	 best= 22.200000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  V5  / * empty: 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 0 
iteration = 5 	 best= 22.200000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  V5  / * empty: 0 1 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 0 
BEST SOLUTION! cost=20.5 stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  + V5  / * empty: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.500000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  + V5  / * empty: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.500000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  + V5  / * empty: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.500000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  + V5  / * empty: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.500000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  + V5  / * empty: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.500000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  + V5  / * empty: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.500000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  + V5  / * empty: 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.6 stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 16.600000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  * 1.000000  1.000000  1.000000  + + V5  V5  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.25 stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 15.250000	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  1.000000  + + + V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=15.0773 stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 15.077270	stackLen: 30 => V4  V3  V0  i - V5  - - V3  - 1.000000  1.000000  / * 1.000000  1.000000  1.000000  r e + / V5  V5  V5  + V2  + + / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 14 74 56 45 77 53 13 63 64 30 
BEST SOLUTION! cost=24.6 stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 0 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 1 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 2 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 3 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 4 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 5 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 6 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 7 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 8 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 9 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 10 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 11 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 12 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 13 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 14 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 15 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 16 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 17 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 18 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 19 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 20 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 21 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 22 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
iteration = 23 	 best= 24.600000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  V4  V2  * V4  a V3  / * * / * * empty: 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 1 0 0 0 1 0 0 1 
BEST SOLUTION! cost=20.3 stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V1  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.300000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V1  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.300000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V1  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.300000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V1  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.300000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V1  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.300000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V1  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.300000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V1  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=19.9 stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V2  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=15.9 stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 15.900000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  V0  V3  - i V2  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=10.4 stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 10.400000	stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 49 64 8 41 24 18 33 11 84 53 
BEST SOLUTION! cost=56.3 stackLen: 30 => V5  V2  1.000000  V2  V2  V2  * V4  / * + * * empty: 0 0 1 0 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 56.300000	stackLen: 30 => V5  V2  1.000000  V2  V2  V2  * V4  / * + * * empty: 0 0 1 0 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=30.3009 stackLen: 30 => V0  V4  a 1.000000  V5  * a V1  / * V3  V1  + 1.000000  * i + * empty: 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 1 
iteration = 0 	 best= 30.300900	stackLen: 30 => V0  V4  a 1.000000  V5  * a V1  / * V3  V1  + 1.000000  * i + * empty: 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 1 
iteration = 1 	 best= 30.300900	stackLen: 30 => V0  V4  a 1.000000  V5  * a V1  / * V3  V1  + 1.000000  * i + * empty: 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 1 
iteration = 2 	 best= 30.300900	stackLen: 30 => V0  V4  a 1.000000  V5  * a V1  / * V3  V1  + 1.000000  * i + * empty: 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 1 
iteration = 3 	 best= 30.300900	stackLen: 30 => V0  V4  a 1.000000  V5  * a V1  / * V3  V1  + 1.000000  * i + * empty: 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 1 
iteration = 4 	 best= 30.300900	stackLen: 30 => V0  V4  a 1.000000  V5  * a V1  / * V3  V1  + 1.000000  * i + * empty: 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 1 
iteration = 5 	 best= 30.300900	stackLen: 30 => V0  V4  a 1.000000  V5  * a V1  / * V3  V1  + 1.000000  * i + * empty: 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 0 1 
BEST SOLUTION! cost=28.2427 stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 28.242672	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 28.242672	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 28.242672	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 28.242672	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 28.242672	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 28.242672	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.5257 stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 27.525675	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 27.525675	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 27.525675	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 27.525675	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 27.525675	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 27.525675	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V1  + V1  + / * V3  V1  + 1.000000  * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=26.6096 stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 26.609644	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 26.609644	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 26.609644	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 26.609644	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 26.609644	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 26.609644	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=26.3436 stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  V2  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 26.343613	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  V2  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 26.343613	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  V2  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 26.343613	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  V2  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 26.343613	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  V2  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 26.343613	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  V2  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 26.343613	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V2  V2  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=25.6926 stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  V3  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.692623	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  V3  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.692623	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  V3  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.692623	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  V3  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.692623	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  V3  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.692623	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  V3  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.692623	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  V3  + + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25.6689 stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 25.668871	stackLen: 30 => V0  V4  a 1.000000  1.000000  + V5  * a V1  V3  1.000000  * + V1  + V1  + / * V3  V1  + 1.000000  1.000000  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 35 38 26 57 14 3 80 74 86 13 
BEST SOLUTION! cost=33.3 stackLen: 30 => V5  1.000000  V2  * 1.000000  1.000000  + V3  / + * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 
iteration = 0 	 best= 33.300000	stackLen: 30 => V5  1.000000  V2  * 1.000000  1.000000  + V3  / + * empty: 0 0 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 
BEST SOLUTION! cost=25.4084 stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 0 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 1 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 2 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 3 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 4 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 5 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 6 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 7 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 8 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 9 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 10 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 11 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
iteration = 12 	 best= 25.408408	stackLen: 30 => 1.000000  1.000000  e 1.000000  * r r a V1  / / V0  * empty: 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 1 1 0 0 0 1 0 1 
BEST SOLUTION! cost=25.4059 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  e r 1.000000  + * r r a i V1  / / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.405878	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  e r 1.000000  + * r r a i V1  / / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.405878	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  e r 1.000000  + * r r a i V1  / / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.405878	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  e r 1.000000  + * r r a i V1  / / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.405878	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  e r 1.000000  + * r r a i V1  / / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22 stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 0 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 1 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 2 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 3 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 4 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 5 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 6 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 7 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 8 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 9 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 10 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 11 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 12 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 13 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 14 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 15 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 16 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 17 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 18 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 19 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 20 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 21 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 22 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 23 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 24 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 25 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 26 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 27 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 28 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 29 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 30 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 31 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 32 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 33 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 34 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 35 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 36 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 37 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 38 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 39 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 40 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 41 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 42 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 43 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 44 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 45 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 46 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 47 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 48 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
iteration = 49 	 best= 22.000000	stackLen: 30 => V5  a 1.000000  1.000000  * V0  / V0  * - empty: 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 49 68 99 19 34 76 75 94 6 92 
BEST SOLUTION! cost=33.6409 stackLen: 30 => 1.000000  1.000000  e V4  V0  1.000000  V3  a r V3  / / * * * * empty: 0 1 1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 33.640859	stackLen: 30 => 1.000000  1.000000  e V4  V0  1.000000  V3  a r V3  / / * * * * empty: 0 1 1 0 1 0 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=19 stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 1 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 2 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 3 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 4 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 5 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 6 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 7 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 8 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 9 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 10 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 11 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 12 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 13 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 14 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 15 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 16 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 17 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 18 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 19 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 20 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 21 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 22 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 23 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 24 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 25 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 26 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 27 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 28 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 29 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 30 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 31 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 32 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 33 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 34 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 35 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 36 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 37 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 38 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
iteration = 39 	 best= 19.000000	stackLen: 30 => 1.000000  V1  V5  - 1.000000  * 1.000000  V1  / i * / empty: 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=17.8 stackLen: 30 => 1.000000  1.000000  * V1  V5  - * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 0 	 best= 17.800000	stackLen: 30 => 1.000000  1.000000  * V1  V5  - * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 1 	 best= 17.800000	stackLen: 30 => 1.000000  1.000000  * V1  V5  - * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 2 	 best= 17.800000	stackLen: 30 => 1.000000  1.000000  * V1  V5  - * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 3 	 best= 17.800000	stackLen: 30 => 1.000000  1.000000  * V1  V5  - * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 4 	 best= 17.800000	stackLen: 30 => 1.000000  1.000000  * V1  V5  - * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
iteration = 5 	 best= 17.800000	stackLen: 30 => 1.000000  1.000000  * V1  V5  - * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 0 
BEST SOLUTION! cost=14.25 stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 0 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 1 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 2 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 3 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 4 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 5 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 6 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 7 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 8 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 9 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 10 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 11 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 12 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 13 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 14 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 15 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 16 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 17 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 18 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 19 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 20 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 21 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 22 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 23 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 24 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 25 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 26 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 27 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 28 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 29 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 30 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 31 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 32 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 33 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 34 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 35 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 36 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 37 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 38 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 39 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 40 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 41 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 42 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 43 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 44 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 45 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 46 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 47 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 48 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
iteration = 49 	 best= 14.250000	stackLen: 30 => 1.000000  1.000000  * V1  V1  + V5  - * 1.000000  * 1.000000  1.000000  * 1.000000  + 1.000000  * V1  / i * V0  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.4
stackLen: 30 => V2  V3  1.000000  * * V0  1.000000  1.000000  + 1.000000  - 1.000000  * V4  1.000000  V3  / i V1  V3  V3  V3  - - - + - * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: ((((((((v3 - v3) - v3) - v1) + ((v3/1))) - v4) * (1 * (1 - (1 + 1)))) * v0) + ((1 * v3) * v2))
Tempo de execucao: 1298.58 segundos
FIM
