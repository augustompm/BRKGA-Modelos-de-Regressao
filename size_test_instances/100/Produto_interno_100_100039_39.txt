Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 10 48 31 58 24 59 91 53 22 94 
BEST SOLUTION! cost=38.8845 stackLen: 30 => V2  i 1.000000  V3  a 1.000000  * / 1.000000  e r r r V0  * V5  V3  * * / * empty: 0 0 0 1 0 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 38.884515	stackLen: 30 => V2  i 1.000000  V3  a 1.000000  * / 1.000000  e r r r V0  * V5  V3  * * / * empty: 0 0 0 1 0 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=36.3 stackLen: 30 => V2  V4  1.000000  V3  V0  - V2  - * 1.000000  * - * empty: 0 1 1 0 1 0 1 1 1 0 0 1 0 1 0 0 0 1 1 1 1 0 1 1 1 1 0 1 0 0 
iteration = 0 	 best= 36.300000	stackLen: 30 => V2  V4  1.000000  V3  V0  - V2  - * 1.000000  * - * empty: 0 1 1 0 1 0 1 1 1 0 0 1 0 1 0 0 0 1 1 1 1 0 1 1 1 1 0 1 0 0 
iteration = 1 	 best= 36.300000	stackLen: 30 => V2  V4  1.000000  V3  V0  - V2  - * 1.000000  * - * empty: 0 1 1 0 1 0 1 1 1 0 0 1 0 1 0 0 0 1 1 1 1 0 1 1 1 1 0 1 0 0 
BEST SOLUTION! cost=36.0672 stackLen: 30 => 1.000000  V1  V5  V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 36.067222	stackLen: 30 => 1.000000  V1  V5  V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 36.067222	stackLen: 30 => 1.000000  V1  V5  V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 36.067222	stackLen: 30 => 1.000000  V1  V5  V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 36.067222	stackLen: 30 => 1.000000  V1  V5  V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 36.067222	stackLen: 30 => 1.000000  V1  V5  V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 36.067222	stackLen: 30 => 1.000000  V1  V5  V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=33.5894 stackLen: 30 => 1.000000  V1  V5  V5  + V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 33.589444	stackLen: 30 => 1.000000  V1  V5  V5  + V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 33.589444	stackLen: 30 => 1.000000  V1  V5  V5  + V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 33.589444	stackLen: 30 => 1.000000  V1  V5  V5  + V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 33.589444	stackLen: 30 => 1.000000  V1  V5  V5  + V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 33.589444	stackLen: 30 => 1.000000  V1  V5  V5  + V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 33.589444	stackLen: 30 => 1.000000  V1  V5  V5  + V0  - V1  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=28.8735 stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 28.873488	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V1  V5  V5  + V0  - V5  - i V1  1.000000  V5  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=28.0734 stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 28.073432	stackLen: 30 => 1.000000  1.000000  + 1.000000  * 1.000000  1.000000  + / V1  V5  V5  + V5  - V5  - i V1  1.000000  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.0307 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * 1.000000  1.000000  + / V1  * V5  + V5  - V5  - i V1  V5  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 26.030741	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * 1.000000  1.000000  + / V1  * V5  + V5  - V5  - i V1  V5  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 26.030741	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * 1.000000  1.000000  + / V1  * V5  + V5  - V5  - i V1  V5  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 26.030741	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * 1.000000  1.000000  + / V1  * V5  + V5  - V5  - i V1  V5  V0  a V4  / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=23.0798 stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 6 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 7 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 8 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 9 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 10 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 11 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 12 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 13 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 14 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 15 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 16 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 17 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 18 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 19 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 20 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 21 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 22 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 23 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 24 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 25 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 26 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 27 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 28 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 29 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 30 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 31 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 32 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 33 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 34 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 35 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 36 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 37 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 38 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 39 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 40 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 41 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 42 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 43 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 44 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 45 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 46 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 47 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 48 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
iteration = 49 	 best= 23.079827	stackLen: 30 => V0  a a r V4  / V5  V0  V1  + a * * empty: 0 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 28 92 25 89 59 34 21 13 18 86 
BEST SOLUTION! cost=30.9 stackLen: 30 => 1.000000  V0  a * r V0  a / V0  V5  V3  V1  + * * / empty: 0 1 0 1 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 30.900000	stackLen: 30 => 1.000000  V0  a * r V0  a / V0  V5  V3  V1  + * * / empty: 0 1 0 1 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 30.900000	stackLen: 30 => 1.000000  V0  a * r V0  a / V0  V5  V3  V1  + * * / empty: 0 1 0 1 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 0 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=25.6 stackLen: 30 => 1.000000  V2  a * r r a V1  1.000000  * * empty: 0 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 25.600000	stackLen: 30 => 1.000000  V2  a * r r a V1  1.000000  * * empty: 0 1 0 0 0 1 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=20.8 stackLen: 30 => 1.000000  V2  1.000000  * i * V3  * empty: 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 1 0 1 
iteration = 0 	 best= 20.800000	stackLen: 30 => 1.000000  V2  1.000000  * i * V3  * empty: 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 1 0 1 
iteration = 1 	 best= 20.800000	stackLen: 30 => 1.000000  V2  1.000000  * i * V3  * empty: 0 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 1 0 1 
BEST SOLUTION! cost=20.0723 stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 4 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 5 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 6 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 7 	 best= 20.072315	stackLen: 30 => 1.000000  e V3  a r V4  / i * a e V2  1.000000  V5  V2  + / * / empty: 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=17.6 stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.600000	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V4  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=13.5866 stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 13.586613	stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 22 33 93 30 1 16 81 46 82 12 
BEST SOLUTION! cost=41.6 stackLen: 30 => V2  a V2  V3  V2  a a 1.000000  / * V3  * i * * i V2  * empty: 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 41.600000	stackLen: 30 => V2  a V2  V3  V2  a a 1.000000  / * V3  * i * * i V2  * empty: 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=35.8 stackLen: 30 => 1.000000  1.000000  V2  1.000000  a * a r i V0  - / 1.000000  * * V1  * empty: 0 1 1 1 0 1 1 1 0 1 0 0 1 0 0 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 35.800000	stackLen: 30 => 1.000000  1.000000  V2  1.000000  a * a r i V0  - / 1.000000  * * V1  * empty: 0 1 1 1 0 1 1 1 0 1 0 0 1 0 0 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=27.6 stackLen: 30 => V5  V4  1.000000  * V1  - V4  - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 27.600000	stackLen: 30 => V5  V4  1.000000  * V1  - V4  - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 27.600000	stackLen: 30 => V5  V4  1.000000  * V1  - V4  - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 27.600000	stackLen: 30 => V5  V4  1.000000  * V1  - V4  - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 27.600000	stackLen: 30 => V5  V4  1.000000  * V1  - V4  - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 27.600000	stackLen: 30 => V5  V4  1.000000  * V1  - V4  - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 27.600000	stackLen: 30 => V5  V4  1.000000  * V1  - V4  - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=19.45 stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 0 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 1 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 2 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 3 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 4 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 5 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 6 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 7 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 8 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
iteration = 9 	 best= 19.450000	stackLen: 30 => V5  1.000000  1.000000  1.000000  1.000000  + 1.000000  * 1.000000  / V2  * V4  V1  - V4  - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 0 1 1 1 1 
BEST SOLUTION! cost=18.1695 stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.169460	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  / 1.000000  * V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.0326 stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.032563	stackLen: 30 => V5  1.000000  r 1.000000  1.000000  e 1.000000  + 1.000000  / V2  V4  - * V4  V2  V4  - V4  V1  - V4  - + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 41 3 73 57 63 79 72 69 58 65 
BEST SOLUTION! cost=38.474 stackLen: 30 => 1.000000  1.000000  + e 1.000000  a 1.000000  a V5  V5  * V3  / 1.000000  i * V0  a V4  i * * * * / empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 38.474001	stackLen: 30 => 1.000000  1.000000  + e 1.000000  a 1.000000  a V5  V5  * V3  / 1.000000  i * V0  a V4  i * * * * / empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=31.9 stackLen: 30 => 1.000000  V2  1.000000  V1  V1  V1  - + / * * empty: 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 31.900000	stackLen: 30 => 1.000000  V2  1.000000  V1  V1  V1  - + / * * empty: 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.0989 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  e r V5  / / * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 26.098938	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  e r V5  / / * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 26.098938	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  e r V5  / / * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 26.098938	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  e r V5  / / * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 26.098938	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  e r V5  / / * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 26.098938	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  e r V5  / / * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 26.098938	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  e r V5  / / * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=24.7089 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  / 1.000000  e * V5  V5  + / / * * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.708857	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  / 1.000000  e * V5  V5  + / / * * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.708857	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  / 1.000000  e * V5  V5  + / / * * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.708857	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  / 1.000000  e * V5  V5  + / / * * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.708857	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  / 1.000000  e * V5  V5  + / / * * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.708857	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  / 1.000000  e * V5  V5  + / / * * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.708857	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  / 1.000000  e * V5  V5  + / / * * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.1046 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.104594	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.104594	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.104594	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.104594	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.104594	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.104594	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 22.104594	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  / / 1.000000  e * V5  V5  V1  + + / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.9108 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.910769	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * V5  V5  - V5  V5  V0  V1  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.7333 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 17.733262	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 17.733262	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 17.733262	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 17.733262	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 17.733262	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 17.733262	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 17.733262	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r / 1.000000  e * + V5  i V5  V5  V0  V1  + + + + / * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=16.9333 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.933333	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  i r + V5  i V5  V5  V0  V0  + + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.2667 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.266667	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r + 1.000000  r r + V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.2546 stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.254601	stackLen: 30 => 1.000000  V5  V0  - 1.000000  1.000000  1.000000  1.000000  r e - r r e V5  i V5  V0  V4  V0  - + + + / * * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 60 12 54 44 74 15 91 24 37 45 
BEST SOLUTION! cost=45.9 stackLen: 30 => V0  V0  V1  + - 1.000000  a V0  / 1.000000  1.000000  / * * empty: 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 45.900000	stackLen: 30 => V0  V0  V1  + - 1.000000  a V0  / 1.000000  1.000000  / * * empty: 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 45.900000	stackLen: 30 => V0  V0  V1  + - 1.000000  a V0  / 1.000000  1.000000  / * * empty: 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 0 1 0 0 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=41.3062 stackLen: 30 => 1.000000  V1  a r V5  1.000000  1.000000  1.000000  e / 1.000000  V4  / * * * / / V0  * empty: 0 0 0 1 1 1 0 1 1 1 0 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 41.306215	stackLen: 30 => 1.000000  V1  a r V5  1.000000  1.000000  1.000000  e / 1.000000  V4  / * * * / / V0  * empty: 0 0 0 1 1 1 0 1 1 1 0 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 41.306215	stackLen: 30 => 1.000000  V1  a r V5  1.000000  1.000000  1.000000  e / 1.000000  V4  / * * * / / V0  * empty: 0 0 0 1 1 1 0 1 1 1 0 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 41.306215	stackLen: 30 => 1.000000  V1  a r V5  1.000000  1.000000  1.000000  e / 1.000000  V4  / * * * / / V0  * empty: 0 0 0 1 1 1 0 1 1 1 0 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=32.2 stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 0 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 1 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 2 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 3 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 4 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 5 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 6 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 7 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 8 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 9 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 10 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 11 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 12 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 13 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 14 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 15 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 16 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 17 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 18 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 19 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 20 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 21 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 22 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 23 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 24 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 25 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 26 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 27 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 28 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 29 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 30 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 31 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 32 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 33 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 34 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 35 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 36 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 37 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 38 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 39 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
iteration = 40 	 best= 32.200000	stackLen: 30 => 1.000000  V3  1.000000  V0  V4  + * - i V5  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 
BEST SOLUTION! cost=19.1 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 0 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 1 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 2 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 3 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 4 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 5 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 6 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 7 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 8 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 9 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 10 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 11 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 12 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 13 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 14 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 15 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 16 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 17 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 18 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 19 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 20 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 21 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 22 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 23 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 24 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 25 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 26 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 27 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 28 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 29 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
iteration = 30 	 best= 19.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / / + V3  V3  + 1.000000  V0  1.000000  * V4  V4  + + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 
BEST SOLUTION! cost=17.3 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.300000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + + V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.4056 stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.405550	stackLen: 30 => 1.000000  1.000000  1.000000  a / * e V3  V3  + V3  + 1.000000  V5  V4  - V2  V4  - + * - / V5  * V1  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=13.5866
stackLen: 30 => 1.000000  1.000000  - 1.000000  - a e a r r V1  / i V2  a i V2  V2  * / * V2  + 1.000000  * 1.000000  * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (v3 * (1 * (1 * (v2 + (((v2 * v2)/({v2^2})) * ((v1/\sqrt{\sqrt{{\exp({(1 - (1 - 1))^2})^2}}})))))))
Tempo de execucao: 1490.72 segundos
FIM
