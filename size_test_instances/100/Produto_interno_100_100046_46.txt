Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 38 94 68 33 67 22 57 81 55 48 
BEST SOLUTION! cost=25.8 stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
iteration = 0 	 best= 25.800000	stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
iteration = 1 	 best= 25.800000	stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
iteration = 2 	 best= 25.800000	stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
iteration = 3 	 best= 25.800000	stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
iteration = 4 	 best= 25.800000	stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
iteration = 5 	 best= 25.800000	stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
iteration = 6 	 best= 25.800000	stackLen: 30 => V5  V5  a V4  V3  + V4  V5  * * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 1 
BEST SOLUTION! cost=23.45 stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.450000	stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.450000	stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 23.450000	stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 23.450000	stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 23.450000	stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 23.450000	stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 23.450000	stackLen: 30 => V5  V5  V5  V5  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=17.7249 stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 17.724878	stackLen: 30 => V5  V5  V5  V2  + * a V4  V3  + V4  i i V5  + V5  V2  - + * / * V5  * V5  V5  V5  + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 61 52 31 74 42 22 43 36 45 81 
BEST SOLUTION! cost=32.2 stackLen: 30 => V3  1.000000  V4  a * V4  / 1.000000  V0  / * * 1.000000  * V4  1.000000  a * * empty: 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 32.200000	stackLen: 30 => V3  1.000000  V4  a * V4  / 1.000000  V0  / * * 1.000000  * V4  1.000000  a * * empty: 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 
iteration = 1 	 best= 32.200000	stackLen: 30 => V3  1.000000  V4  a * V4  / 1.000000  V0  / * * 1.000000  * V4  1.000000  a * * empty: 0 0 1 1 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 
BEST SOLUTION! cost=23.648 stackLen: 30 => V2  1.000000  * a V3  a / 1.000000  / r r r V3  V1  V0  - * * empty: 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 
iteration = 0 	 best= 23.648044	stackLen: 30 => V2  1.000000  * a V3  a / 1.000000  / r r r V3  V1  V0  - * * empty: 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 
iteration = 1 	 best= 23.648044	stackLen: 30 => V2  1.000000  * a V3  a / 1.000000  / r r r V3  V1  V0  - * * empty: 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 
iteration = 2 	 best= 23.648044	stackLen: 30 => V2  1.000000  * a V3  a / 1.000000  / r r r V3  V1  V0  - * * empty: 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 
iteration = 3 	 best= 23.648044	stackLen: 30 => V2  1.000000  * a V3  a / 1.000000  / r r r V3  V1  V0  - * * empty: 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 
iteration = 4 	 best= 23.648044	stackLen: 30 => V2  1.000000  * a V3  a / 1.000000  / r r r V3  V1  V0  - * * empty: 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 
iteration = 5 	 best= 23.648044	stackLen: 30 => V2  1.000000  * a V3  a / 1.000000  / r r r V3  V1  V0  - * * empty: 0 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 
BEST SOLUTION! cost=21.3192 stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 21.319164	stackLen: 30 => V2  1.000000  1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=19.9858 stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 19.985805	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 19.985805	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 19.985805	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 19.985805	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 19.985805	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 19.985805	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 19.985805	stackLen: 30 => V2  1.000000  1.000000  + 1.000000  / * a V3  a / 1.000000  1.000000  1.000000  / + / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=19.6504 stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 19.650429	stackLen: 30 => V2  1.000000  1.000000  * 1.000000  / * a V3  V3  + a / 1.000000  1.000000  1.000000  / * / r i r V3  V1  V0  V0  + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 94 57 55 1 68 26 8 38 51 91 
BEST SOLUTION! cost=43 stackLen: 30 => 1.000000  r V4  a V4  a V4  / * * V5  * empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 43.000000	stackLen: 30 => 1.000000  r V4  a V4  a V4  / * * V5  * empty: 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=42.6 stackLen: 30 => V5  V4  + V0  V5  V5  * r + + V5  - V2  1.000000  r a * * empty: 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 42.600000	stackLen: 30 => V5  V4  + V0  V5  V5  * r + + V5  - V2  1.000000  r a * * empty: 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 1 0 0 1 0 1 0 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=38.4102 stackLen: 30 => 1.000000  e r i i 1.000000  V5  V0  * * * empty: 0 1 1 1 1 0 0 1 1 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 38.410230	stackLen: 30 => 1.000000  e r i i 1.000000  V5  V0  * * * empty: 0 1 1 1 1 0 0 1 1 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 38.410230	stackLen: 30 => 1.000000  e r i i 1.000000  V5  V0  * * * empty: 0 1 1 1 1 0 0 1 1 1 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=31.4 stackLen: 30 => 1.000000  V5  V0  V4  1.000000  * + * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 31.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  * + * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 31.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  * + * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 31.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  * + * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 31.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  * + * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 31.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  * + * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 31.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  * + * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=30.4 stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  + 1.000000  / * + * * empty: 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 30.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  + 1.000000  / * + * * empty: 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 30.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  + 1.000000  / * + * * empty: 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 30.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  + 1.000000  / * + * * empty: 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 30.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  + 1.000000  / * + * * empty: 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 30.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  + 1.000000  / * + * * empty: 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 30.400000	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  + 1.000000  / * + * * empty: 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.4667 stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 27.466667	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 27.466667	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 27.466667	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 27.466667	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 27.466667	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 27.466667	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 27.466667	stackLen: 30 => 1.000000  V5  V0  V4  1.000000  1.000000  1.000000  + + 1.000000  1.000000  + / * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.3 stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 27.300000	stackLen: 30 => 1.000000  V4  V5  V4  V4  * V4  / 1.000000  1.000000  1.000000  * 1.000000  1.000000  V1  / * V1  * / / r * i V1  * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 42 70 79 21 63 94 75 39 88 60 
BEST SOLUTION! cost=22.1 stackLen: 30 => 1.000000  r V5  1.000000  a * / V4  * empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 22.100000	stackLen: 30 => 1.000000  r V5  1.000000  a * / V4  * empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 22.100000	stackLen: 30 => 1.000000  r V5  1.000000  a * / V4  * empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 22.100000	stackLen: 30 => 1.000000  r V5  1.000000  a * / V4  * empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 22.100000	stackLen: 30 => 1.000000  r V5  1.000000  a * / V4  * empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 22.100000	stackLen: 30 => 1.000000  r V5  1.000000  a * / V4  * empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 22.100000	stackLen: 30 => 1.000000  r V5  1.000000  a * / V4  * empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=20 stackLen: 30 => 1.000000  1.000000  / 1.000000  / V1  V5  + 1.000000  a * / V4  * empty: 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.000000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / V1  V5  + 1.000000  a * / V4  * empty: 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.000000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / V1  V5  + 1.000000  a * / V4  * empty: 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.000000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / V1  V5  + 1.000000  a * / V4  * empty: 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.000000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / V1  V5  + 1.000000  a * / V4  * empty: 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.2865 stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
iteration = 0 	 best= 17.286549	stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
iteration = 1 	 best= 17.286549	stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
iteration = 2 	 best= 17.286549	stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
iteration = 3 	 best= 17.286549	stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
iteration = 4 	 best= 17.286549	stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
iteration = 5 	 best= 17.286549	stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
iteration = 6 	 best= 17.286549	stackLen: 30 => V4  V5  * 1.000000  e r a V3  V1  V4  - * / + empty: 0 1 0 1 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 0 1 1 0 1 1 0 1 1 0 1 
BEST SOLUTION! cost=15.5 stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 15.500000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - + i * i 1.000000  1.000000  - a e V1  1.000000  * V0  * / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.2459 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.245895	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  1.000000  / e r * i r a i a i V1  V4  * a * r * V0  V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.7712 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V4  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.771157	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V4  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.771157	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V4  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.771157	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V4  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.771157	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V4  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.771157	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V4  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.771157	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V4  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=10.723 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 10.722959	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 6 95 48 96 67 58 54 94 43 10 
BEST SOLUTION! cost=18 stackLen: 30 => 1.000000  V1  * a r 1.000000  1.000000  V5  V4  - / / * empty: 0 1 0 1 1 0 0 0 1 1 0 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 18.000000	stackLen: 30 => 1.000000  V1  * a r 1.000000  1.000000  V5  V4  - / / * empty: 0 1 0 1 1 0 0 0 1 1 0 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=17.5 stackLen: 30 => 1.000000  1.000000  / r 1.000000  i V1  1.000000  * a V4  V5  * - / * empty: 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 0 1 
iteration = 0 	 best= 17.500000	stackLen: 30 => 1.000000  1.000000  / r 1.000000  i V1  1.000000  * a V4  V5  * - / * empty: 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 0 1 
iteration = 1 	 best= 17.500000	stackLen: 30 => 1.000000  1.000000  / r 1.000000  i V1  1.000000  * a V4  V5  * - / * empty: 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 0 1 
iteration = 2 	 best= 17.500000	stackLen: 30 => 1.000000  1.000000  / r 1.000000  i V1  1.000000  * a V4  V5  * - / * empty: 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 0 1 
iteration = 3 	 best= 17.500000	stackLen: 30 => 1.000000  1.000000  / r 1.000000  i V1  1.000000  * a V4  V5  * - / * empty: 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 0 1 
iteration = 4 	 best= 17.500000	stackLen: 30 => 1.000000  1.000000  / r 1.000000  i V1  1.000000  * a V4  V5  * - / * empty: 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 0 1 
iteration = 5 	 best= 17.500000	stackLen: 30 => 1.000000  1.000000  / r 1.000000  i V1  1.000000  * a V4  V5  * - / * empty: 0 0 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0 1 0 1 0 0 1 0 0 0 1 0 1 
BEST SOLUTION! cost=13.1 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 13.100000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 13.100000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 13.100000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 13.100000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 13.100000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 13.100000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 13.100000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + / r 1.000000  1.000000  + i r V3  a V4  V4  + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=12.2989 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.298896	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  / e / r 1.000000  r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.2816 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e / r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.281553	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e / r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.281553	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e / r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.281553	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e / r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.281553	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e / r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.281553	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e / r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.281553	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e / r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.2032 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.203213	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e - r + r + i r V3  a V4  V4  - V4  V4  + + V5  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.523 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.523045	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  r r r * r + i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.498 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.497999	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e e r * r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.4553 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.455294	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  1.000000  1.000000  e a r + r * i r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.4278 stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.427823	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  1.000000  1.000000  e r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.3373 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 11.337337	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  a * 1.000000  1.000000  + r r e r * r V1  a r V4  - V4  V4  - + V5  * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.723
stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  V3  / a r 1.000000  * a i a / V1  V4  * a * r r V0  V5  * - / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((v5 * v0) - \sqrt{\sqrt{({(v4 * v1)^2} * ({({(1 * \sqrt{{(v3/1)^2}})^2})^2}/1))}})/1)/1)/1)
Tempo de execucao: 1369.74 segundos
FIM
