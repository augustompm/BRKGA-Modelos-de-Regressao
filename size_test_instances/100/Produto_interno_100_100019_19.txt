Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 31 44 18 62 43 56 61 24 16 64 
BEST SOLUTION! cost=49.5 stackLen: 30 => V0  V0  - a 1.000000  1.000000  V4  / * i a V5  V2  * / * empty: 0 0 0 1 0 1 1 0 1 1 1 0 0 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 49.500000	stackLen: 30 => V0  V0  - a 1.000000  1.000000  V4  / * i a V5  V2  * / * empty: 0 0 0 1 0 1 1 0 1 1 1 0 0 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=16.253 stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 3 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 4 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 5 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 6 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 7 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
iteration = 8 	 best= 16.252995	stackLen: 30 => 1.000000  e V5  / V0  V1  V0  V3  + + - - V0  * empty: 0 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=14.9368 stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 14.936816	stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 14.936816	stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 14.936816	stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 14.936816	stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 14.936816	stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 14.936816	stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 14.936816	stackLen: 30 => 1.000000  1.000000  + e V5  V5  + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.9337 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 14.933691	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / * + e V5  V1  V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=14.7029 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 14.702935	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  1.000000  + 1.000000  / * + e V5  V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.0774 stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 14.077437	stackLen: 30 => 1.000000  1.000000  + e 1.000000  1.000000  + 1.000000  / V3  * i i V5  V1  + V5  + + / V0  V1  V0  V3  + + - - V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 22 7 0 12 52 69 16 33 68 56 
BEST SOLUTION! cost=46.6624 stackLen: 30 => 1.000000  V3  V0  * V3  * 1.000000  V4  / V4  i * 1.000000  / * * V3  * empty: 0 0 0 0 1 0 1 1 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 46.662412	stackLen: 30 => 1.000000  V3  V0  * V3  * 1.000000  V4  / V4  i * 1.000000  / * * V3  * empty: 0 0 0 0 1 0 1 1 0 1 1 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=38.448 stackLen: 30 => V4  a V1  V0  * V0  a i * / empty: 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 38.448043	stackLen: 30 => V4  a V1  V0  * V0  a i * / empty: 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=32.9059 stackLen: 30 => 1.000000  a e r 1.000000  V0  1.000000  V4  / a i r * * * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 32.905921	stackLen: 30 => 1.000000  a e r 1.000000  V0  1.000000  V4  / a i r * * * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=27.4 stackLen: 30 => 1.000000  1.000000  V3  V5  + V5  + * / V4  * empty: 0 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 27.400000	stackLen: 30 => 1.000000  1.000000  V3  V5  + V5  + * / V4  * empty: 0 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 27.400000	stackLen: 30 => 1.000000  1.000000  V3  V5  + V5  + * / V4  * empty: 0 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=24.1 stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 0 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 1 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 2 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 3 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 4 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 5 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 6 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 7 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 8 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
iteration = 9 	 best= 24.100000	stackLen: 30 => V1  V5  V0  - V0  + - V1  * empty: 0 1 0 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 
BEST SOLUTION! cost=23.6 stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 0 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 1 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 2 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 3 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 4 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 5 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 6 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 7 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 8 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 9 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 10 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 11 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 12 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 13 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 14 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 15 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 16 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 17 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 18 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 19 	 best= 23.600000	stackLen: 30 => V1  V5  V5  V5  V5  - V5  - - V3  - V0  V2  + - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
BEST SOLUTION! cost=23.2 stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 23.200000	stackLen: 30 => V1  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V2  + - V3  * 1.000000  1.000000  1.000000  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20 stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 20.000000	stackLen: 30 => V4  V1  - V5  V5  V5  V5  V5  - V5  - - - - - V3  - V3  V3  + - V3  1.000000  1.000000  1.000000  * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 4 2 72 22 69 21 26 15 91 82 
BEST SOLUTION! cost=30.2 stackLen: 30 => 1.000000  V5  V4  V0  1.000000  * + * * empty: 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 30.200000	stackLen: 30 => 1.000000  V5  V4  V0  1.000000  * + * * empty: 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 30.200000	stackLen: 30 => 1.000000  V5  V4  V0  1.000000  * + * * empty: 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 30.200000	stackLen: 30 => 1.000000  V5  V4  V0  1.000000  * + * * empty: 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=29.2 stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 1 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 2 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 3 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 4 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 5 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 6 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 7 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 8 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 9 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 10 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 11 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 12 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 13 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 14 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 15 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 16 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 17 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
iteration = 18 	 best= 29.200000	stackLen: 30 => 1.000000  V4  V1  V1  V5  V0  + - + 1.000000  a a * * * empty: 0 1 1 0 0 1 1 1 0 1 0 1 0 0 0 0 1 0 0 1 1 0 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=25.5 stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 0 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 1 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 2 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 3 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 4 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 5 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
BEST SOLUTION! cost=21.8 stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 15 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 16 	 best= 21.800000	stackLen: 30 => 1.000000  1.000000  i V4  V5  V1  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=20.5 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + i V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + - + - + 1.000000  a r * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=19.35 stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.350000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V5  V3  V1  V3  V3  V3  - + V0  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.45 stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.450000	stackLen: 30 => 1.000000  r 1.000000  1.000000  / + V4  V4  V3  V1  V3  V5  V3  - + V1  V0  + V0  + - + - + 1.000000  a * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 73 88 91 9 14 63 22 3 62 15 
BEST SOLUTION! cost=32.301 stackLen: 30 => V1  V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 
iteration = 0 	 best= 32.301043	stackLen: 30 => V1  V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 
iteration = 1 	 best= 32.301043	stackLen: 30 => V1  V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 
iteration = 2 	 best= 32.301043	stackLen: 30 => V1  V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 
iteration = 3 	 best= 32.301043	stackLen: 30 => V1  V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 
iteration = 4 	 best= 32.301043	stackLen: 30 => V1  V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 
iteration = 5 	 best= 32.301043	stackLen: 30 => V1  V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 
BEST SOLUTION! cost=30.6965 stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 30.696471	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 30.696471	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 30.696471	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 30.696471	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 30.696471	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 30.696471	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  * a e V2  / * empty: 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=28.1099 stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 15 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 16 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 17 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 18 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 19 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 20 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 21 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 22 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 23 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 24 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 25 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 26 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 27 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 28 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 29 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 30 	 best= 28.109893	stackLen: 30 => V1  V1  + V3  - V0  V3  V4  + - a 1.000000  V2  / / V4  V4  + * a e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=24.8726 stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.872644	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.872644	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.872644	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.872644	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.872644	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.872644	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.872644	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V0  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * i e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=24.4693 stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.469256	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.469256	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.469256	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.469256	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.469256	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.469256	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  / V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=23.0476 stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 23.047639	stackLen: 30 => V1  V1  V1  + V4  + - V3  - V5  V3  V4  + - a 1.000000  1.000000  + V2  / / V2  V0  + * e V2  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 39 96 85 47 98 38 45 7 57 15 
BEST SOLUTION! cost=12.3498 stackLen: 30 => 1.000000  e 1.000000  / V1  a V1  a V1  1.000000  V0  i * * * / * empty: 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 12.349761	stackLen: 30 => 1.000000  e 1.000000  / V1  a V1  a V1  1.000000  V0  i * * * / * empty: 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 12.349761	stackLen: 30 => 1.000000  e 1.000000  / V1  a V1  a V1  1.000000  V0  i * * * / * empty: 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 12.349761	stackLen: 30 => 1.000000  e 1.000000  / V1  a V1  a V1  1.000000  V0  i * * * / * empty: 0 1 1 0 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=11.7733 stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
iteration = 0 	 best= 11.773333	stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
iteration = 1 	 best= 11.773333	stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
iteration = 2 	 best= 11.773333	stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
iteration = 3 	 best= 11.773333	stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
iteration = 4 	 best= 11.773333	stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
iteration = 5 	 best= 11.773333	stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
iteration = 6 	 best= 11.773333	stackLen: 30 => V2  V1  + a V1  a r V2  / * empty: 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 0 1 0 1 0 1 
BEST SOLUTION! cost=9.35993 stackLen: 30 => V2  V1  V1  V1  - + + a V1  V1  * a r V2  V2  V2  + * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 9.359927	stackLen: 30 => V2  V1  V1  V1  - + + a V1  V1  * a r V2  V2  V2  + * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 9.359927	stackLen: 30 => V2  V1  V1  V1  - + + a V1  V1  * a r V2  V2  V2  + * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=8.14885 stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 0 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 1 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 2 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 3 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 4 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 5 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 6 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 7 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
iteration = 8 	 best= 8.148852	stackLen: 30 => V4  a V3  V4  - a V0  V3  * / * empty: 0 1 1 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 1 0 1 
BEST SOLUTION! cost=6.24316 stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 0 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 1 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 2 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 3 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 4 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 5 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 6 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 7 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 8 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 9 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 10 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 11 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 12 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 13 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 14 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 15 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 16 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 17 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 18 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 19 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 20 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 21 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 22 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 23 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 24 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 25 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 26 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 27 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 28 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 29 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 30 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 31 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 32 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
iteration = 33 	 best= 6.243157	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V0  + V3  V0  + * / * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 
BEST SOLUTION! cost=6.13945 stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 6.139454	stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=6.13945
stackLen: 30 => V4  a V3  V3  + V4  V4  + - a V0  V3  V3  V0  + + V1  + * / * 1.000000  1.000000  * * 1.000000  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (1 * (1 * ((1 * 1) * ((((v1 + ((v0 + v3) + v3)) * v0)/{((v4 + v4) - (v3 + v3))^2}) * {v4^2}))))
Tempo de execucao: 1362.08 segundos
FIM
