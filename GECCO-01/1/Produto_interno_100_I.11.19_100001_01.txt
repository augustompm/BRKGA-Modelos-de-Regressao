Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 11
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-9.00	-1.00	-8.00	-4.00	4.00	5.00	61.00
-2.00	-10.00	3.00	-9.00	-8.00	-10.00	73.00
-7.00	-4.00	-9.00	-2.00	4.00	-4.00	30.00
7.00	2.00	9.00	-5.00	8.00	4.00	1.00
3.00	-6.00	5.00	-8.00	-7.00	-7.00	-9.00
-10.00	-7.00	6.00	-9.00	-10.00	7.00	-54.00
5.00	-8.00	1.00	4.00	-10.00	10.00	-136.00
2.00	6.00	-7.00	3.00	-3.00	-3.00	0.00
10.00	-10.00	3.00	3.00	6.00	-8.00	-139.00
0.00	1.00	8.00	-10.00	-4.00	2.00	-88.00
-6.00	6.00	-8.00	-3.00	-3.00	8.00	-36.00
-3.00	-5.00	5.00	9.00	8.00	-8.00	-4.00
2.00	-2.00	7.00	6.00	-7.00	-5.00	73.00
7.00	-4.00	-9.00	1.00	-2.00	-8.00	-21.00
6.00	-7.00	-3.00	-8.00	-7.00	3.00	-39.00
-7.00	-9.00	6.00	-10.00	-3.00	-4.00	15.00
8.00	2.00	5.00	-4.00	5.00	5.00	21.00
9.00	-8.00	2.00	8.00	4.00	4.00	-40.00
6.00	9.00	10.00	4.00	-1.00	3.00	91.00
6.00	-8.00	-9.00	3.00	-8.00	8.00	-139.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
8.00	10.00	-3.00	-5.00	5.00	1.00	100.00
9.00	1.00	4.00	2.00	7.00	-2.00	3.00
4.00	-3.00	-5.00	7.00	-5.00	0.00	-47.00
-5.00	-9.00	-10.00	-4.00	1.00	-1.00	84.00
6.00	9.00	-9.00	5.00	6.00	9.00	63.00
-4.00	7.00	-5.00	8.00	-5.00	1.00	-73.00
0.00	0.00	-3.00	3.00	4.00	-5.00	-29.00
3.00	0.00	7.00	2.00	2.00	10.00	34.00
3.00	-5.00	-4.00	0.00	10.00	-10.00	-115.00
-6.00	-4.00	5.00	10.00	10.00	5.00	124.00
-4.00	-8.00	-9.00	-8.00	-1.00	6.00	98.00
-10.00	2.00	6.00	-9.00	-1.00	-5.00	-69.00
-10.00	2.00	-3.00	-8.00	6.00	-4.00	-20.00
3.00	-3.00	4.00	-2.00	-6.00	0.00	-17.00
-7.00	9.00	4.00	-7.00	5.00	-4.00	-111.00
-1.00	9.00	-5.00	-7.00	5.00	10.00	76.00
8.00	3.00	3.00	-9.00	4.00	2.00	5.00
0.00	2.00	4.00	-3.00	-2.00	-6.00	0.00
-6.00	10.00	-6.00	1.00	5.00	2.00	-56.00
-5.00	-9.00	-8.00	-6.00	9.00	-3.00	66.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=5
run_brkga:
best=inf
SELECTED: [45 72 43 97 29 60 75 96 2 81 ]
BEST SOLUTION! cost=19.7 stackLen: 10 => V1  V2  V3  + * empty: 0 1 1 0 1 1 1 0 0 0 
iteration = 0 	 best= 19.700000	stackLen: 10 => V1  V2  V3  + * empty: 0 1 1 0 1 1 1 0 0 0 
iteration = 1 	 best= 19.700000	stackLen: 10 => V1  V2  V3  + * empty: 0 1 1 0 1 1 1 0 0 0 
iteration = 2 	 best= 19.700000	stackLen: 10 => V1  V2  V3  + * empty: 0 1 1 0 1 1 1 0 0 0 
BEST SOLUTION! cost=16.5 stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 16.500000	stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 16.500000	stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 16.500000	stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
iteration = 3 	 best= 16.500000	stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
iteration = 4 	 best= 16.500000	stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
iteration = 5 	 best= 16.500000	stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
iteration = 6 	 best= 16.500000	stackLen: 10 => V1  1.00  1.00  + V2  / * empty: 0 0 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=13.931 stackLen: 10 => 1.00  e V1  V0  V2  + * / empty: 0 0 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 13.931018	stackLen: 10 => 1.00  e V1  V0  V2  + * / empty: 0 0 0 1 0 1 0 0 0 0 
iteration = 1 	 best= 13.931018	stackLen: 10 => 1.00  e V1  V0  V2  + * / empty: 0 0 0 1 0 1 0 0 0 0 
BEST SOLUTION! cost=13.7585 stackLen: 10 => 1.00  e V2  V5  V1  + * / empty: 0 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 13.758471	stackLen: 10 => 1.00  e V2  V5  V1  + * / empty: 0 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 13.758471	stackLen: 10 => 1.00  e V2  V5  V1  + * / empty: 0 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=12.872 stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 2 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 3 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 4 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 5 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 6 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 7 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 8 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 9 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 10 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 11 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 12 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 13 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 14 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 15 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 16 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 17 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 18 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 19 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 20 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 21 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 22 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 23 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 24 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 25 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 26 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 27 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 28 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 29 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 30 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 31 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 32 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 33 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 34 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 35 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 36 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 37 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 38 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 39 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 40 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 41 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 42 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 43 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 44 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 45 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 46 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 47 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 48 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 49 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 50 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 51 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 52 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 53 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 54 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 55 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 56 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 57 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 58 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 59 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 60 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 61 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 62 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 63 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 64 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 65 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 66 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 67 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 68 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 69 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 70 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 71 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 72 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 73 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 74 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 75 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 76 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 77 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 78 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 79 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 80 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 81 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 82 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 83 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 84 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 85 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 86 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 87 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 88 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 89 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 90 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 91 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 92 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 93 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 94 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 95 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 96 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 97 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 98 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
iteration = 99 	 best= 12.872000	stackLen: 10 => 1.00  e r V1  V1  V0  - * / empty: 0 0 0 0 0 1 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [23 71 58 38 13 29 79 5 26 22 ]
BEST SOLUTION! cost=23.3 stackLen: 15 => 1.00  V5  / V3  * empty: 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 
iteration = 0 	 best= 23.300000	stackLen: 15 => 1.00  V5  / V3  * empty: 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 
iteration = 1 	 best= 23.300000	stackLen: 15 => 1.00  V5  / V3  * empty: 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 
iteration = 2 	 best= 23.300000	stackLen: 15 => 1.00  V5  / V3  * empty: 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 
iteration = 3 	 best= 23.300000	stackLen: 15 => 1.00  V5  / V3  * empty: 0 1 1 0 1 0 1 1 1 1 1 1 1 0 0 
BEST SOLUTION! cost=19.5 stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 6 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 7 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 8 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 9 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 10 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 11 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 12 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 13 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 14 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 15 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 16 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 17 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 18 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 19 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 20 	 best= 19.500000	stackLen: 15 => 1.00  V4  V1  V5  + - * V3  * empty: 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=13.8 stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.800000	stackLen: 15 => 1.00  i 1.00  1.00  + V4  / V1  V5  + - * V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.324 stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 11.324034	stackLen: 15 => 1.00  e 1.00  1.00  + V4  V1  V5  + - * V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [81 23 41 32 92 91 76 19 46 61 ]
BEST SOLUTION! cost=35.9 stackLen: 22 => 1.00  V4  * 1.00  V2  / V5  - * empty: 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 0 0 0 1 0 1 
iteration = 0 	 best= 35.900000	stackLen: 22 => 1.00  V4  * 1.00  V2  / V5  - * empty: 0 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 0 0 0 1 0 1 
BEST SOLUTION! cost=26.8254 stackLen: 22 => V1  V2  V0  1.00  e 1.00  1.00  + 1.00  / * * - * empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 26.825375	stackLen: 22 => V1  V2  V0  1.00  e 1.00  1.00  + 1.00  / * * - * empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 1 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=26 stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 6 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 7 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 8 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 9 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 10 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 11 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 12 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 13 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 14 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 15 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 16 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 17 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 18 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 19 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 20 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 21 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
iteration = 22 	 best= 26.000000	stackLen: 22 => V5  V4  V2  + * empty: 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=25.9801 stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 0 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 1 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 2 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 3 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 4 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 5 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 6 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 7 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 8 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 9 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 10 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 11 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 12 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 13 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 14 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 15 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 16 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 17 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 18 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 19 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 20 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 21 	 best= 25.980108	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
BEST SOLUTION! cost=23.9431 stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.943105	stackLen: 22 => 1.00  V4  V4  - V4  + 1.00  1.00  + r 1.00  * r * 1.00  * / V2  + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.2 stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 5 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 6 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 7 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 8 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 9 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 10 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 11 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 12 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 13 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 14 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 15 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 16 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 17 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 18 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 19 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 20 	 best= 22.200000	stackLen: 22 => 1.00  V5  a V1  V2  V0  V1  + - * - * empty: 0 1 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=21 stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 0 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 1 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 2 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 3 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 4 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 5 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 6 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 7 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 8 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 9 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 10 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 11 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 12 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 13 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
iteration = 14 	 best= 21.000000	stackLen: 22 => 1.00  V5  a V1  V2  V2  + V0  V0  V1  - + - * - 1.00  * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 
BEST SOLUTION! cost=17.7 stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 2 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 3 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 4 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 5 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 6 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 7 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 8 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 9 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 10 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 11 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 12 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 13 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 14 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 15 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 16 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 17 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 18 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 19 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 20 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 21 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 22 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 23 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 24 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
iteration = 25 	 best= 17.700000	stackLen: 22 => V4  1.00  V4  a r * V5  V2  1.00  V0  * - * / * empty: 0 0 1 0 1 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=17.15 stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 17.150000	stackLen: 22 => V4  1.00  1.00  + V4  a r * V5  V2  V2  V2  + + 1.00  V0  * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [66 86 95 30 93 59 80 64 38 2 ]
BEST SOLUTION! cost=24 stackLen: 30 => V4  V3  i V2  + V0  V5  1.00  r V2  / + + - * empty: 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 24.000000	stackLen: 30 => V4  V3  i V2  + V0  V5  1.00  r V2  / + + - * empty: 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 24.000000	stackLen: 30 => V4  V3  i V2  + V0  V5  1.00  r V2  / + + - * empty: 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 2 	 best= 24.000000	stackLen: 30 => V4  V3  i V2  + V0  V5  1.00  r V2  / + + - * empty: 0 1 1 1 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=16.3 stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 0 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 1 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 2 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 3 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 4 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 5 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 6 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 7 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 8 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 9 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 10 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 11 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
iteration = 12 	 best= 16.300000	stackLen: 30 => V1  1.00  1.00  * * V1  * empty: 0 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 
BEST SOLUTION! cost=12.9209 stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 6 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 7 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 8 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 9 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 10 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 11 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 12 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 13 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 14 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 15 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 16 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 17 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 18 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 19 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 20 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 21 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 22 	 best= 12.920947	stackLen: 30 => 1.00  e V4  V1  V1  V1  + + - V0  + / V1  * empty: 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=12.4329 stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 15 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 16 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 17 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 18 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 19 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 20 	 best= 12.432930	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  - V2  V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=11.1616 stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 15 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 16 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 17 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 18 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 19 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 20 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 21 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 22 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 23 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 24 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 25 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 26 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 27 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 28 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 29 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 30 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 31 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 32 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 33 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 34 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 35 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 36 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 37 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 38 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 39 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 40 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 41 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 42 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 43 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 44 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 45 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 46 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 47 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 48 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 49 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 50 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 51 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 52 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 53 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 54 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 55 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 56 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 57 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 58 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 59 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 60 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 61 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 62 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 63 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 64 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 65 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 66 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 67 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 68 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 69 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 70 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 71 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 72 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 73 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 74 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 75 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 76 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 77 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 78 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 79 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 80 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 81 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 82 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 83 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 84 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 85 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 86 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 87 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 88 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 89 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 90 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 91 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 92 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 93 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 94 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 95 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 96 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 97 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 98 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 99 	 best= 11.161559	stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [38 78 62 49 50 21 66 86 75 56 ]
BEST SOLUTION! cost=15.0399 stackLen: 30 => 1.00  i e V1  V0  V5  - + V4  - / V0  - V0  * empty: 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 15.039948	stackLen: 30 => 1.00  i e V1  V0  V5  - + V4  - / V0  - V0  * empty: 0 1 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=13.5614 stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 0 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 1 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 2 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 3 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 4 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 5 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 6 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 7 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 8 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 9 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 10 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 11 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 12 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 13 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 14 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 15 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 16 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 17 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 18 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 19 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
iteration = 20 	 best= 13.561429	stackLen: 30 => 1.00  V3  V5  * 1.00  * / a r r V3  * empty: 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 1 1 0 1 0 1 0 0 1 1 0 0 
BEST SOLUTION! cost=13.3526 stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 13.352609	stackLen: 30 => 1.00  1.00  1.00  + 1.00  / + V3  V3  + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=12.9087 stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 15 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 16 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 17 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 18 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 19 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 20 	 best= 12.908721	stackLen: 30 => 1.00  1.00  + 1.00  1.00  + 1.00  / + V3  V3  V3  + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=12.497 stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 50 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 51 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 52 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 53 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 54 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 55 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 56 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 57 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 58 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 59 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 60 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 61 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 62 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 63 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 64 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 65 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 66 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 67 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 68 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 69 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 70 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 71 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 72 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 73 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 74 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 75 	 best= 12.496966	stackLen: 30 => 1.00  1.00  + 1.00  1.00  * 1.00  / * V3  V3  - V3  V3  V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=12.3466 stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 50 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 51 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 52 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 53 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 54 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 55 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 56 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 57 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 58 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 59 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 60 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 61 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 62 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 63 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 64 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 65 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 66 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 67 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 68 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 69 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 70 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 71 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 72 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 73 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 74 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 75 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 76 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 77 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 78 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 79 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 80 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 81 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 82 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 83 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 84 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 85 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 86 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 87 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 88 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 89 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 90 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 91 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 92 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 93 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 94 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 95 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 96 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 97 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 98 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 99 	 best= 12.346608	stackLen: 30 => 1.00  1.00  + 1.00  + 1.00  * V3  1.00  V3  / V3  i V3  + V1  + + + V5  * 1.00  * / a r r V3  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=11.1616
stackLen: 30 => 1.00  e V4  V4  V1  V1  V5  V5  - + + + - V0  V0  V3  + - V2  V2  + V0  + - + / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
trueStackSize=28
printSolution2: (V1 * ((((V0 + (V2 + V2)) - ((V3 + V0) - V0)) + (((((V5 - V5) + V1) + V1) + V4) - V4))/\exp(1)))
Tempo de execucao: 2105.23 segundos
FIM
