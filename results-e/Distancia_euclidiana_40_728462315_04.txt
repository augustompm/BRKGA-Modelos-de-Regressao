|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 40 1
-10.00	8.00	-9.00	9.00	25.46
-1.00	-5.00	-1.00	4.00	6.40
-3.00	-7.00	4.00	5.00	4.12
8.00	-5.00	-5.00	4.00	15.81
3.00	-5.00	1.00	-8.00	12.04
-5.00	-7.00	10.00	0.00	10.20
1.00	10.00	-10.00	1.00	14.21
6.00	-3.00	4.00	-3.00	11.40
-7.00	5.00	-3.00	-6.00	12.37
0.00	-6.00	-4.00	-1.00	6.71
10.00	6.00	-9.00	0.00	9.85
-7.00	5.00	-7.00	-10.00	12.37
4.00	-1.00	-5.00	-4.00	5.10
8.00	3.00	0.00	7.00	8.60
8.00	-1.00	3.00	0.00	9.49
-5.00	7.00	4.00	4.00	12.00
-6.00	-7.00	-2.00	1.00	3.16
1.00	0.00	-5.00	-5.00	1.00
3.00	-1.00	-3.00	-2.00	4.12
-1.00	5.00	6.00	-5.00	12.53
2.00	-6.00	3.00	8.00	9.43
-3.00	10.00	-10.00	7.00	21.40
-1.00	4.00	10.00	10.00	5.00
0.00	4.00	-1.00	-1.00	4.00
10.00	-6.00	6.00	6.00	16.00
-4.00	-2.00	3.00	-5.00	8.25
-2.00	-4.00	2.00	-2.00	4.47
-4.00	7.00	-5.00	5.00	14.87
2.00	-10.00	4.00	9.00	13.00
4.00	0.00	8.00	10.00	4.47
1.00	9.00	10.00	-9.00	20.62
-8.00	2.00	3.00	-1.00	10.77
1.00	-7.00	-8.00	1.00	12.04
8.00	8.00	4.00	-4.00	8.00
5.00	-7.00	2.00	-3.00	13.00
-10.00	-9.00	-9.00	-3.00	6.08
5.00	-3.00	-6.00	-7.00	8.06
-3.00	1.00	-4.00	-9.00	6.40
0.00	-3.00	7.00	1.00	6.71
0.00	-4.00	4.00	-2.00	7.21
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=40
run_brkga:
best=inf
restart = 0 	 best= inf	stackLen: 30 => + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=12190.8 stackLen: 30 => V1  V0  e V2  V0  e r e i V1  a V0  i e e V3  1.000000  * / * * * * * empty: 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 
COST2 IS BETTER!!!9.91833
restart = 0 	 best= 9.918328	stackLen: 30 => V1  V0  e V2  V0  e r e i V1  a V0  i e e V3  V3  - 1.000000  * / * * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=9.67588 stackLen: 30 => 1.000000  e 1.000000  * 1.000000  e / V0  / empty: 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 
restart = 0 	 best= 9.675885	stackLen: 30 => 1.000000  e 1.000000  * 1.000000  e / V0  / empty: 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 
restart = 1 	 best= 9.675885	stackLen: 30 => 1.000000  e 1.000000  * 1.000000  e / V0  / empty: 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 
restart = 2 	 best= 9.675885	stackLen: 30 => 1.000000  e 1.000000  * 1.000000  e / V0  / empty: 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 
restart = 3 	 best= 9.675885	stackLen: 30 => 1.000000  e 1.000000  * 1.000000  e / V0  / empty: 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 
restart = 4 	 best= 9.675885	stackLen: 30 => 1.000000  e 1.000000  * 1.000000  e / V0  / empty: 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 
restart = 5 	 best= 9.675885	stackLen: 30 => 1.000000  e 1.000000  * 1.000000  e / V0  / empty: 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 0 1 0 1 
BEST SOLUTION! cost=9.29333 stackLen: 30 => 1.000000  e 1.000000  1.000000  e / 1.000000  * / V1  / V0  1.000000  * - empty: 0 1 1 0 0 1 0 1 1 1 0 0 1 1 0 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 
restart = 0 	 best= 9.293328	stackLen: 30 => 1.000000  e 1.000000  1.000000  e / 1.000000  * / V1  / V0  1.000000  * - empty: 0 1 1 0 0 1 0 1 1 1 0 0 1 1 0 1 0 0 0 1 1 0 0 0 1 1 0 0 1 1 
BEST SOLUTION! cost=5.60517 stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 0 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 1 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 2 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 3 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 4 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 5 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 6 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
restart = 7 	 best= 5.605173	stackLen: 30 => 1.000000  1.000000  V2  a / r * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 0 1 
BEST SOLUTION! cost=4.12344 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + i i V1  a r 1.000000  * * * / empty: 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
restart = 0 	 best= 4.123435	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + i i V1  a r 1.000000  * * * / empty: 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
restart = 1 	 best= 4.123435	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + i i V1  a r 1.000000  * * * / empty: 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
restart = 2 	 best= 4.123435	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + i i V1  a r 1.000000  * * * / empty: 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
restart = 3 	 best= 4.123435	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + i i V1  a r 1.000000  * * * / empty: 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
restart = 4 	 best= 4.123435	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + i i V1  a r 1.000000  * * * / empty: 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
restart = 5 	 best= 4.123435	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + i i V1  a r 1.000000  * * * / empty: 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=4.06833 stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 0 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 1 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 2 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 3 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 4 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 5 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 6 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 7 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 8 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 9 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
restart = 10 	 best= 4.068328	stackLen: 30 => 1.000000  1.000000  V2  V3  - * a r * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 1 1 0 1 1 1 1 0 0 1 0 1 
BEST SOLUTION! cost=3.42789 stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 0 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 1 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 2 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 3 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 4 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 5 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 6 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 7 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 8 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 9 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 10 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 11 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
restart = 12 	 best= 3.427889	stackLen: 30 => 1.000000  1.000000  V2  V3  V3  + - * a r * 1.000000  * empty: 0 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=2.99591 stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 0 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 1 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 2 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 3 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 4 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 5 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 6 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 7 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 8 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 9 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 10 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 11 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 12 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 13 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 14 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 15 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 16 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 17 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 18 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 19 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 20 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 21 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 22 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 23 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 24 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 25 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 26 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 27 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 28 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 29 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 30 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 31 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 32 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 33 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 34 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 35 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 36 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 37 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 38 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 39 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 40 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 41 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 42 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 43 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 44 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 45 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 46 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 47 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 48 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 49 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 50 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 51 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 52 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 53 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 54 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 55 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 56 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 57 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 58 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 59 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 60 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 61 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 62 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 63 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 64 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 65 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 66 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 67 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 68 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 69 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 70 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 71 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 72 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 73 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 74 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 75 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 76 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 77 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 78 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 79 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 80 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 81 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 82 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 83 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 84 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 85 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 86 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 87 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 88 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 89 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 90 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 91 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 92 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 93 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 94 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 95 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 96 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 97 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 98 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
restart = 99 	 best= 2.995907	stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
FINISHED BRKGP!
best=2.99591
stackLen: 30 => 1.000000  1.000000  + i 1.000000  1.000000  V2  V2  + V3  V3  + V3  + - * a r * 1.000000  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
trueStackSize=22
printSolution2: ((1 * (\sqrt{{(((v3 + (v3 + v3)) - (v2 + v2)) * 1)^2}} * 1))/((1 + 1)))
Tempo de execucao: 655.565 segundos
FIM
