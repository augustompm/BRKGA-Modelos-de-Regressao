Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [97 25 91 42 70 20 36 65 21 14 ]
BEST SOLUTION! cost=35.4 stackLen: 30 => V4  V3  a r 1.000000  1.000000  * V3  V2  * / / * empty: 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 35.400000	stackLen: 30 => V4  V3  a r 1.000000  1.000000  * V3  V2  * / / * empty: 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=23.3301 stackLen: 30 => V0  V5  + 1.000000  V2  V0  V4  * V0  a a V2  / * * * * V0  * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.330087	stackLen: 30 => V0  V5  + 1.000000  V2  V0  V4  * V0  a a V2  / * * * * V0  * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.330087	stackLen: 30 => V0  V5  + 1.000000  V2  V0  V4  * V0  a a V2  / * * * * V0  * empty: 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=23.1 stackLen: 30 => 1.000000  V0  1.000000  * 1.000000  1.000000  * * V4  + V1  * * empty: 0 0 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 23.100000	stackLen: 30 => 1.000000  V0  1.000000  * 1.000000  1.000000  * * V4  + V1  * * empty: 0 0 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=22.3 stackLen: 30 => 1.000000  V1  V5  - i * V4  V3  - + V2  - V1  * empty: 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 22.300000	stackLen: 30 => 1.000000  V1  V5  - i * V4  V3  - + V2  - V1  * empty: 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 22.300000	stackLen: 30 => 1.000000  V1  V5  - i * V4  V3  - + V2  - V1  * empty: 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 22.300000	stackLen: 30 => 1.000000  V1  V5  - i * V4  V3  - + V2  - V1  * empty: 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0 
iteration = 3 	 best= 22.300000	stackLen: 30 => 1.000000  V1  V5  - i * V4  V3  - + V2  - V1  * empty: 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0 
iteration = 4 	 best= 22.300000	stackLen: 30 => 1.000000  V1  V5  - i * V4  V3  - + V2  - V1  * empty: 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=20.2228 stackLen: 30 => V2  V0  V2  + - V0  a V2  1.000000  1.000000  * V2  V5  V0  + * * * / * empty: 0 0 1 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 20.222778	stackLen: 30 => V2  V0  V2  + - V0  a V2  1.000000  1.000000  * V2  V5  V0  + * * * / * empty: 0 0 1 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 20.222778	stackLen: 30 => V2  V0  V2  + - V0  a V2  1.000000  1.000000  * V2  V5  V0  + * * * / * empty: 0 0 1 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 20.222778	stackLen: 30 => V2  V0  V2  + - V0  a V2  1.000000  1.000000  * V2  V5  V0  + * * * / * empty: 0 0 1 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 20.222778	stackLen: 30 => V2  V0  V2  + - V0  a V2  1.000000  1.000000  * V2  V5  V0  + * * * / * empty: 0 0 1 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 20.222778	stackLen: 30 => V2  V0  V2  + - V0  a V2  1.000000  1.000000  * V2  V5  V0  + * * * / * empty: 0 0 1 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 
iteration = 5 	 best= 20.222778	stackLen: 30 => V2  V0  V2  + - V0  a V2  1.000000  1.000000  * V2  V5  V0  + * * * / * empty: 0 0 1 0 0 1 0 1 1 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=17.2193 stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * * V2  V5  V0  + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 17.219321	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * * V2  V5  V0  + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 17.219321	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * * V2  V5  V0  + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 17.219321	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * * V2  V5  V0  + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 17.219321	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * * V2  V5  V0  + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 17.219321	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * * V2  V5  V0  + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 17.219321	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * * V2  V5  V0  + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=10.2575 stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 10.257548	stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [12 19 76 48 83 33 98 43 93 73 ]
BEST SOLUTION! cost=47.5491 stackLen: 30 => 1.000000  1.000000  1.000000  * e r V0  a / / empty: 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 1 
iteration = 0 	 best= 47.549143	stackLen: 30 => 1.000000  1.000000  1.000000  * e r V0  a / / empty: 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 1 
BEST SOLUTION! cost=17.9 stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 0 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 1 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 2 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 3 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 4 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 5 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 6 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 7 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 8 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 9 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 10 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 11 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 12 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 13 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 14 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 15 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 16 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 17 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 18 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 19 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 20 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 21 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 22 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 23 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 24 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 25 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 26 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 27 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 28 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 29 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 30 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 31 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 32 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 33 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 34 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 35 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 36 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 37 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 38 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 39 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 40 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 41 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 42 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 43 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 44 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 45 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 46 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 47 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 48 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
iteration = 49 	 best= 17.900000	stackLen: 30 => 1.000000  V1  / V2  1.000000  * V5  1.000000  V0  * - - * empty: 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [62 88 27 53 67 95 12 55 28 39 ]
BEST SOLUTION! cost=41.6 stackLen: 30 => V3  a V5  V4  - V5  V3  * a i V3  / * * V5  * V5  * empty: 0 0 0 0 1 1 1 1 0 0 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 0 0 1 0 
iteration = 0 	 best= 41.600000	stackLen: 30 => V3  a V5  V4  - V5  V3  * a i V3  / * * V5  * V5  * empty: 0 0 0 0 1 1 1 1 0 0 0 1 0 0 1 1 0 1 1 1 1 0 0 0 0 0 0 0 1 0 
BEST SOLUTION! cost=39.4 stackLen: 30 => V3  V4  1.000000  V0  1.000000  1.000000  i V2  * * + * + * empty: 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 39.400000	stackLen: 30 => V3  V4  1.000000  V0  1.000000  1.000000  i V2  * * + * + * empty: 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=35.2 stackLen: 30 => V4  V2  - 1.000000  * V2  - V3  V1  + a r 1.000000  V4  / - * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 35.200000	stackLen: 30 => V4  V2  - 1.000000  * V2  - V3  V1  + a r 1.000000  V4  / - * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 
iteration = 1 	 best= 35.200000	stackLen: 30 => V4  V2  - 1.000000  * V2  - V3  V1  + a r 1.000000  V4  / - * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 
iteration = 2 	 best= 35.200000	stackLen: 30 => V4  V2  - 1.000000  * V2  - V3  V1  + a r 1.000000  V4  / - * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 
iteration = 3 	 best= 35.200000	stackLen: 30 => V4  V2  - 1.000000  * V2  - V3  V1  + a r 1.000000  V4  / - * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 
iteration = 4 	 best= 35.200000	stackLen: 30 => V4  V2  - 1.000000  * V2  - V3  V1  + a r 1.000000  V4  / - * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 
iteration = 5 	 best= 35.200000	stackLen: 30 => V4  V2  - 1.000000  * V2  - V3  V1  + a r 1.000000  V4  / - * empty: 0 0 0 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=29.3 stackLen: 30 => V4  V2  - 1.000000  V2  / V2  V2  + - - V3  V3  + V1  V1  + + a r 1.000000  1.000000  + V4  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 29.300000	stackLen: 30 => V4  V2  - 1.000000  V2  / V2  V2  + - - V3  V3  + V1  V1  + + a r 1.000000  1.000000  + V4  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 29.300000	stackLen: 30 => V4  V2  - 1.000000  V2  / V2  V2  + - - V3  V3  + V1  V1  + + a r 1.000000  1.000000  + V4  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 29.300000	stackLen: 30 => V4  V2  - 1.000000  V2  / V2  V2  + - - V3  V3  + V1  V1  + + a r 1.000000  1.000000  + V4  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 29.300000	stackLen: 30 => V4  V2  - 1.000000  V2  / V2  V2  + - - V3  V3  + V1  V1  + + a r 1.000000  1.000000  + V4  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 29.300000	stackLen: 30 => V4  V2  - 1.000000  V2  / V2  V2  + - - V3  V3  + V1  V1  + + a r 1.000000  1.000000  + V4  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 29.300000	stackLen: 30 => V4  V2  - 1.000000  V2  / V2  V2  + - - V3  V3  + V1  V1  + + a r 1.000000  1.000000  + V4  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=23.15 stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.150000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V3  + V1  V1  + + a r 1.000000  1.000000  + V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.4 stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 21.400000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  1.000000  * V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.5 stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.500000	stackLen: 30 => V4  V2  - 1.000000  1.000000  / * V2  V2  V2  + - - V0  V1  + V1  V1  + + a r 1.000000  1.000000  * V1  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [62 10 92 15 7 88 87 72 4 45 ]
BEST SOLUTION! cost=35.8 stackLen: 30 => V5  a r 1.000000  1.000000  - V1  V0  * * i r - i a 1.000000  * empty: 0 0 1 1 1 0 1 0 1 1 1 0 0 0 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 35.800000	stackLen: 30 => V5  a r 1.000000  1.000000  - V1  V0  * * i r - i a 1.000000  * empty: 0 0 1 1 1 0 1 0 1 1 1 0 0 0 1 0 0 1 0 1 0 1 0 1 0 1 0 0 0 0 
BEST SOLUTION! cost=26 stackLen: 30 => V0  V0  - 1.000000  V4  / V4  1.000000  V1  * i - + - V4  i V1  + - V5  * empty: 0 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 26.000000	stackLen: 30 => V0  V0  - 1.000000  V4  / V4  1.000000  V1  * i - + - V4  i V1  + - V5  * empty: 0 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=23 stackLen: 30 => 1.000000  1.000000  - i V3  * V0  - i V3  * empty: 0 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 23.000000	stackLen: 30 => 1.000000  1.000000  - i V3  * V0  - i V3  * empty: 0 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 23.000000	stackLen: 30 => 1.000000  1.000000  - i V3  * V0  - i V3  * empty: 0 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
iteration = 2 	 best= 23.000000	stackLen: 30 => 1.000000  1.000000  - i V3  * V0  - i V3  * empty: 0 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=21.2015 stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 0 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 1 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 2 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 3 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 4 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 5 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 6 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 7 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 8 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 9 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 10 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 11 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 12 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
iteration = 13 	 best= 21.201522	stackLen: 30 => V3  1.000000  1.000000  + e V3  / 1.000000  1.000000  / V0  / - * empty: 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 1 1 1 1 0 0 0 1 0 1 
BEST SOLUTION! cost=21.1384 stackLen: 30 => V3  1.000000  1.000000  1.000000  * 1.000000  + + e V3  V3  + V3  + / 1.000000  1.000000  / V0  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.138420	stackLen: 30 => V3  1.000000  1.000000  1.000000  * 1.000000  + + e V3  V3  + V3  + / 1.000000  1.000000  / V0  / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=19.5657 stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
iteration = 0 	 best= 19.565675	stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
iteration = 1 	 best= 19.565675	stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
iteration = 2 	 best= 19.565675	stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
iteration = 3 	 best= 19.565675	stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
iteration = 4 	 best= 19.565675	stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
iteration = 5 	 best= 19.565675	stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
iteration = 6 	 best= 19.565675	stackLen: 30 => 1.000000  e i 1.000000  i / i V3  * V2  1.000000  * V2  V0  + + * empty: 0 1 0 0 1 0 0 1 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 
BEST SOLUTION! cost=18.8065 stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 0 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 1 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 2 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 3 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 4 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 5 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 6 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
iteration = 7 	 best= 18.806531	stackLen: 30 => 1.000000  e i 1.000000  1.000000  * i / r 1.000000  V3  * V2  1.000000  * V2  V2  - V0  + + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 
BEST SOLUTION! cost=18.7203 stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.720260	stackLen: 30 => 1.000000  e i 1.000000  1.000000  1.000000  + * r / i 1.000000  V3  * V2  V2  - V2  + 1.000000  V0  V2  V2  - + * + * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [64 23 69 52 48 12 57 90 78 87 ]
BEST SOLUTION! cost=54.3 stackLen: 30 => V0  a r V2  V0  a a r * / empty: 0 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 0 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 54.300000	stackLen: 30 => V0  a r V2  V0  a a r * / empty: 0 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 0 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 54.300000	stackLen: 30 => V0  a r V2  V0  a a r * / empty: 0 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 0 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=48.4 stackLen: 30 => 1.000000  V4  a r V3  + 1.000000  V5  a r i V5  V4  + a r - / * * empty: 0 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 48.400000	stackLen: 30 => 1.000000  V4  a r V3  + 1.000000  V5  a r i V5  V4  + a r - / * * empty: 0 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 48.400000	stackLen: 30 => 1.000000  V4  a r V3  + 1.000000  V5  a r i V5  V4  + a r - / * * empty: 0 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 48.400000	stackLen: 30 => 1.000000  V4  a r V3  + 1.000000  V5  a r i V5  V4  + a r - / * * empty: 0 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 48.400000	stackLen: 30 => 1.000000  V4  a r V3  + 1.000000  V5  a r i V5  V4  + a r - / * * empty: 0 0 1 1 0 1 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=40.5389 stackLen: 30 => V0  a 1.000000  1.000000  1.000000  e - * e * r V2  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 40.538869	stackLen: 30 => V0  a 1.000000  1.000000  1.000000  e - * e * r V2  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 40.538869	stackLen: 30 => V0  a 1.000000  1.000000  1.000000  e - * e * r V2  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 40.538869	stackLen: 30 => V0  a 1.000000  1.000000  1.000000  e - * e * r V2  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 40.538869	stackLen: 30 => V0  a 1.000000  1.000000  1.000000  e - * e * r V2  * empty: 0 1 1 0 0 1 1 1 1 1 1 1 0 1 0 0 1 0 1 1 1 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=40.4 stackLen: 30 => V1  V0  V5  V5  + 1.000000  V1  1.000000  * * 1.000000  * - + * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 
iteration = 0 	 best= 40.400000	stackLen: 30 => V1  V0  V5  V5  + 1.000000  V1  1.000000  * * 1.000000  * - + * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 
iteration = 1 	 best= 40.400000	stackLen: 30 => V1  V0  V5  V5  + 1.000000  V1  1.000000  * * 1.000000  * - + * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 
iteration = 2 	 best= 40.400000	stackLen: 30 => V1  V0  V5  V5  + 1.000000  V1  1.000000  * * 1.000000  * - + * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 
iteration = 3 	 best= 40.400000	stackLen: 30 => V1  V0  V5  V5  + 1.000000  V1  1.000000  * * 1.000000  * - + * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 
iteration = 4 	 best= 40.400000	stackLen: 30 => V1  V0  V5  V5  + 1.000000  V1  1.000000  * * 1.000000  * - + * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 
iteration = 5 	 best= 40.400000	stackLen: 30 => V1  V0  V5  V5  + 1.000000  V1  1.000000  * * 1.000000  * - + * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 0 1 
BEST SOLUTION! cost=33.5 stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 33.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  / V1  1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=32.5 stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 32.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 32.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 32.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 32.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 32.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 32.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 32.500000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + 1.000000  * * 1.000000  * - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=30.35 stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 30.350000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V1  - V1  + 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=29.6 stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 29.600000	stackLen: 30 => V1  V0  V0  + V5  V5  + 1.000000  1.000000  1.000000  1.000000  + 1.000000  / V1  V4  + V4  + V1  - 1.000000  * * * / - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.2575
stackLen: 30 => V2  V0  V4  + - V0  a V2  1.000000  1.000000  1.000000  / - 1.000000  + 1.000000  1.000000  * / V2  V1  V0  V5  + + * * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (((((((v5 + v0) + v1) * v2) * ((1 * 1)/(1 + ((1/1) - 1)))) * v2)/{v0^2}) * ((v4 + v0) - v2))
Tempo de execucao: 908.373 segundos
FIM
