Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [77 76 16 19 50 43 3 45 15 41 ]
BEST SOLUTION! cost=10040.7 stackLen: 30 => 1.000000  e V5  V1  - V5  V1  V1  - r * * * empty: 0 1 1 1 0 0 1 1 0 1 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 0 1 
COST2 IS BETTER!!!40.7
iteration = 0 	 best= 40.700000	stackLen: 30 => 1.000000  e V5  V5  + V1  - V5  V1  V1  - r * * * empty: 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=21.7 stackLen: 30 => V4  a V4  a 1.000000  V4  / * V5  * / empty: 0 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 21.700000	stackLen: 30 => V4  a V4  a 1.000000  V4  / * V5  * / empty: 0 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 21.700000	stackLen: 30 => V4  a V4  a 1.000000  V4  / * V5  * / empty: 0 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 21.700000	stackLen: 30 => V4  a V4  a 1.000000  V4  / * V5  * / empty: 0 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 21.700000	stackLen: 30 => V4  a V4  a 1.000000  V4  / * V5  * / empty: 0 0 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=20.6936 stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  i e - - r 1.000000  r V4  V5  i * / * * empty: 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.693600	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  i e - - r 1.000000  r V4  V5  i * / * * empty: 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.693600	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  i e - - r 1.000000  r V4  V5  i * / * * empty: 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.693600	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  i e - - r 1.000000  r V4  V5  i * / * * empty: 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.693600	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  i e - - r 1.000000  r V4  V5  i * / * * empty: 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.693600	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  i e - - r 1.000000  r V4  V5  i * / * * empty: 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.693600	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  i e - - r 1.000000  r V4  V5  i * / * * empty: 0 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20.5175 stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  / 1.000000  e - i i - i V5  V5  - V4  + V5  i * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 20.517466	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  / 1.000000  e - i i - i V5  V5  - V4  + V5  i * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 20.517466	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  / 1.000000  e - i i - i V5  V5  - V4  + V5  i * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 20.517466	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  / 1.000000  e - i i - i V5  V5  - V4  + V5  i * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 20.517466	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  / 1.000000  e - i i - i V5  V5  - V4  + V5  i * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 20.517466	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  / 1.000000  e - i i - i V5  V5  - V4  + V5  i * / 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=15.8493 stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.849306	stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.849306	stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.849306	stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.849306	stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.849306	stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.849306	stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.849306	stackLen: 30 => V4  1.000000  e r 1.000000  V1  V5  V3  - 1.000000  1.000000  V2  / * - - * / * empty: 0 0 0 1 0 0 1 1 1 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.3552 stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 14.355199	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V5  - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=12.756 stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.756009	stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [18 41 28 61 37 95 71 20 38 45 ]
BEST SOLUTION! cost=40.8 stackLen: 30 => 1.000000  V0  V0  - / a V3  a r a V1  / * V2  * empty: 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 
iteration = 0 	 best= 40.800000	stackLen: 30 => 1.000000  V0  V0  - / a V3  a r a V1  / * V2  * empty: 0 1 0 0 0 1 0 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 
BEST SOLUTION! cost=30.8 stackLen: 30 => V4  1.000000  V4  i / V1  1.000000  * - a r a r + V4  - V5  - V2  * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 30.800000	stackLen: 30 => V4  1.000000  V4  i / V1  1.000000  * - a r a r + V4  - V5  - V2  * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=30 stackLen: 30 => 1.000000  1.000000  V5  * i a r * V5  a / V3  * empty: 0 1 1 0 0 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 0 0 
iteration = 0 	 best= 30.000000	stackLen: 30 => 1.000000  1.000000  V5  * i a r * V5  a / V3  * empty: 0 1 1 0 0 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 0 0 
iteration = 1 	 best= 30.000000	stackLen: 30 => 1.000000  1.000000  V5  * i a r * V5  a / V3  * empty: 0 1 1 0 0 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 0 0 
iteration = 2 	 best= 30.000000	stackLen: 30 => 1.000000  1.000000  V5  * i a r * V5  a / V3  * empty: 0 1 1 0 0 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 0 0 
iteration = 3 	 best= 30.000000	stackLen: 30 => 1.000000  1.000000  V5  * i a r * V5  a / V3  * empty: 0 1 1 0 0 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 0 0 
BEST SOLUTION! cost=28.4721 stackLen: 30 => V3  V2  - V0  V1  - V4  V3  - - + a V0  V2  V0  i a * * / empty: 0 1 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 28.472070	stackLen: 30 => V3  V2  - V0  V1  - V4  V3  - - + a V0  V2  V0  i a * * / empty: 0 1 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=28.2 stackLen: 30 => 1.000000  V4  V3  - V2  * / empty: 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 28.200000	stackLen: 30 => 1.000000  V4  V3  - V2  * / empty: 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 28.200000	stackLen: 30 => 1.000000  V4  V3  - V2  * / empty: 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 28.200000	stackLen: 30 => 1.000000  V4  V3  - V2  * / empty: 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 28.200000	stackLen: 30 => 1.000000  V4  V3  - V2  * / empty: 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 28.200000	stackLen: 30 => 1.000000  V4  V3  - V2  * / empty: 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 28.200000	stackLen: 30 => 1.000000  V4  V3  - V2  * / empty: 0 1 1 1 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=25.2 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 0 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 1 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 2 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 3 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 4 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 5 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 6 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 7 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
iteration = 8 	 best= 25.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * 1.000000  V4  V2  V2  + V3  - V2  + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 0 0 
BEST SOLUTION! cost=17.9 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 0 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 1 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 2 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 3 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 4 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 5 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 6 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 7 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 8 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 9 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 10 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 11 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 12 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 13 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 14 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 15 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 16 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
iteration = 17 	 best= 17.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  1.000000  * V5  V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 
BEST SOLUTION! cost=17 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  + 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.6684 stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.668357	stackLen: 30 => 1.000000  i 1.000000  1.000000  1.000000  e 1.000000  V3  * V5  V5  + - / V1  * V4  V2  V2  + V3  - V2  + * + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [13 96 91 70 34 45 23 77 53 92 ]
BEST SOLUTION! cost=28.8017 stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  e r * V0  V4  * / V2  i V3  * - * empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 28.801714	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  e r * V0  V4  * / V2  i V3  * - * empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 28.801714	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  e r * V0  V4  * / V2  i V3  * - * empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 28.801714	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  e r * V0  V4  * / V2  i V3  * - * empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 28.801714	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  e r * V0  V4  * / V2  i V3  * - * empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 28.801714	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  e r * V0  V4  * / V2  i V3  * - * empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 28.801714	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  e r * V0  V4  * / V2  i V3  * - * empty: 0 1 0 1 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=28.4539 stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 28.453919	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / e r * V0  V4  * / V2  i V3  * - * empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=19.7 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  - 1.000000  * e r / i i V0  * V5  * V2  a r 1.000000  a V3  V2  V2  - - / * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [83 99 66 68 72 23 57 31 41 33 ]
BEST SOLUTION! cost=41.8 stackLen: 30 => V5  i V2  V2  - + V4  * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 0 1 1 1 
iteration = 0 	 best= 41.800000	stackLen: 30 => V5  i V2  V2  - + V4  * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 0 1 1 1 
iteration = 1 	 best= 41.800000	stackLen: 30 => V5  i V2  V2  - + V4  * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 0 1 1 1 
iteration = 2 	 best= 41.800000	stackLen: 30 => V5  i V2  V2  - + V4  * 1.000000  * empty: 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 0 1 1 1 
BEST SOLUTION! cost=41.4519 stackLen: 30 => 1.000000  V4  i * V0  V5  1.000000  V4  * a V0  / * * * empty: 0 0 0 1 0 1 0 0 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 41.451905	stackLen: 30 => 1.000000  V4  i * V0  V5  1.000000  V4  * a V0  / * * * empty: 0 0 0 1 0 1 0 0 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=31.3 stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  V5  V0  V5  - - / / * * empty: 0 1 1 0 1 1 1 0 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  V5  V0  V5  - - / / * * empty: 0 1 1 0 1 1 1 0 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  V5  V0  V5  - - / / * * empty: 0 1 1 0 1 1 1 0 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  V5  V0  V5  - - / / * * empty: 0 1 1 0 1 1 1 0 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  V5  V0  V5  - - / / * * empty: 0 1 1 0 1 1 1 0 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  V5  V0  V5  - - / / * * empty: 0 1 1 0 1 1 1 0 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  V5  V0  V5  - - / / * * empty: 0 1 1 0 1 1 1 0 1 0 0 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=29.2 stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 29.200000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V1  - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=29.15 stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V0  + V1  V3  - V1  + - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 29.150000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V0  + V1  V3  - V1  + - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 29.150000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V0  + V1  V3  - V1  + - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 29.150000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V0  + V1  V3  - V1  + - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 29.150000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V0  + V1  V3  - V1  + - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 29.150000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V0  + V1  V3  - V1  + - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 29.150000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + * 1.000000  V0  V0  V0  + V1  V3  - V1  + - - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=28.65 stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + 1.000000  * * V2  V0  V0  V0  + V1  V3  V3  + - V1  + - - - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.650000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + 1.000000  * * V2  V0  V0  V0  + V1  V3  V3  + - V1  + - - - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.650000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + 1.000000  * * V2  V0  V0  V0  + V1  V3  V3  + - V1  + - - - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.650000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + 1.000000  * * V2  V0  V0  V0  + V1  V3  V3  + - V1  + - - - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.650000	stackLen: 30 => 1.000000  1.000000  V4  / 1.000000  1.000000  1.000000  + 1.000000  * * V2  V0  V0  V0  + V1  V3  V3  + - V1  + - - - / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=28.385 stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 1 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 2 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 3 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 4 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 5 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 6 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
iteration = 7 	 best= 28.384969	stackLen: 30 => 1.000000  a V0  i 1.000000  e V1  / - * V4  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=24.6 stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  * a V0  / 1.000000  * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.5 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 20.500000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * a V0  / 1.000000  * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=20.0098 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.009831	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e a V0  V0  V0  + V0  + + / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.1155 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 19.115509	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V0  V0  V0  + V0  + - / * 1.000000  V3  * + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.3161 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.316060	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  e i V5  V0  V0  + 1.000000  * - / * 1.000000  V3  / + / * V1  * V5  i V4  * i + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [90 53 91 0 33 39 51 99 9 29 ]
BEST SOLUTION! cost=45.9 stackLen: 30 => V2  V5  - 1.000000  V1  a * r V1  / a 1.000000  * * V0  * empty: 0 1 0 0 0 1 0 1 0 1 0 0 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 
iteration = 0 	 best= 45.900000	stackLen: 30 => V2  V5  - 1.000000  V1  a * r V1  / a 1.000000  * * V0  * empty: 0 1 0 0 0 1 0 1 0 1 0 0 1 1 0 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 
BEST SOLUTION! cost=41.2273 stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 0 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 1 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 2 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 3 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 4 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 5 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 6 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 7 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 8 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 9 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 10 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 11 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 12 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 13 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 14 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 15 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 16 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 17 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 18 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 19 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 20 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 21 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 22 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 23 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 24 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 25 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 26 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 27 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 28 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 29 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 30 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 31 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 32 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
iteration = 33 	 best= 41.227271	stackLen: 30 => V4  V4  V1  * a V2  V3  1.000000  * * V0  * V2  a * / * empty: 0 1 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 1 0 1 0 0 1 
BEST SOLUTION! cost=36.6 stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 36.600000	stackLen: 30 => V0  a i V0  / i a i V5  i a r V3  - 1.000000  * 1.000000  1.000000  V0  V0  * / 1.000000  * * * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.756
stackLen: 30 => V4  1.000000  1.000000  / e i 1.000000  V1  V1  V2  V1  V1  - + - V3  - 1.000000  1.000000  + 1.000000  V5  / * - - / / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((((v5/1) * (1 + 1)) - (v3 - (((v1 - v1) + v2) - v1))) - v1)/1)/(\exp((1/1)))) * v4)
Tempo de execucao: 1360.74 segundos
FIM
