|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'rad / s'
var unit: 'm'
out unit: 'rad / m'
has_solution='HAS_SOLUTION' => ' v1 c0 / a  c1 v0 / a  - r'
SOLUTION IS: ' v1 c0 / a  c1 v0 / a  - r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: 'rad'
const unit: 'm / s'
3.5) SETUP UNITS
UNITS: rad ; s ; m ; 
4) FINISHED READING PROBLEM
2 40 2
162000000000000000000.00	3855.00	541000000000.00
285000000000000000000.00	5347.00	951000000000.00
184000000000000000000.00	4991.00	612000000000.00
576000000000000000000.00	3318.00	1920000000000.00
647000000000000000000.00	8021.00	2160000000000.00
460000000000000000000.00	5356.00	1530000000000.00
182000000000000000000.00	1916.00	605000000000.00
853000000000000000000.00	4357.00	2840000000000.00
499000000000000000000.00	2056.00	1660000000000.00
636000000000000000000.00	7146.00	2120000000000.00
61100000000000000000.00	5774.00	204000000000.00
295000000000000000000.00	5963.00	984000000000.00
404000000000000000000.00	5404.00	1350000000000.00
785000000000000000000.00	5921.00	2620000000000.00
34000000000000000000.00	9025.00	113000000000.00
407000000000000000000.00	4798.00	1360000000000.00
804000000000000000000.00	4462.00	2680000000000.00
91300000000000000000.00	4330.00	304000000000.00
345000000000000000000.00	4306.00	1150000000000.00
596000000000000000000.00	3989.00	1990000000000.00
273000000000000000000.00	7882.00	910000000000.00
374000000000000000000.00	3334.00	1250000000000.00
268000000000000000000.00	7249.00	895000000000.00
453000000000000000000.00	3462.00	1510000000000.00
95400000000000000000.00	5633.00	318000000000.00
296000000000000000000.00	8141.00	986000000000.00
216000000000000000000.00	1777.00	720000000000.00
495000000000000000000.00	8117.00	1650000000000.00
233000000000000000000.00	9439.00	775000000000.00
743000000000000000000.00	1134.00	2480000000000.00
695000000000000000000.00	6997.00	2320000000000.00
684000000000000000000.00	5837.00	2280000000000.00
560000000000000000000.00	1049.00	1870000000000.00
442000000000000000000.00	9684.00	1470000000000.00
147000000000000000000.00	8930.00	489000000000.00
128000000000000000000.00	7411.00	427000000000.00
814000000000000000000.00	8875.00	2710000000000.00
425000000000000000000.00	5198.00	1420000000000.00
85800000000000000000.00	2744.00	286000000000.00
878000000000000000000.00	7914.00	2930000000000.00
3.1416	3.1416
300000000.0000	300000000.0000
isSquared? 0
varUnits: rad / s m 
outUnit: rad / m
training=40
run_brkga:
best=inf
BEST SOLUTION! cost=10000 stackLen: 30 => V0  300000000.000000  V1  / i / e V0  V1  * 3.141593  300000000.000000  * i V1  3.141593  / / * * empty: 0 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 
COST2 IS BETTER!!!0
restart = 0 	 best= 0.000000	stackLen: 30 => V0  300000000.000000  V1  V1  * / i / e V0  V1  * 3.141593  300000000.000000  * i V1  3.141593  / / * * empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => V0  300000000.000000  V1  V1  * / i / e V0  V1  * 3.141593  300000000.000000  * i V1  3.141593  / / * * empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 
trueStackSize=22
printSolution2: ((((3.14159/v1)/((3e+08 * 3.14159))) * (v1 * v0)) * \exp(((((v1 * v1)/3e+08))/v0)))
Tempo de execucao: 4.54508 segundos
FIM
