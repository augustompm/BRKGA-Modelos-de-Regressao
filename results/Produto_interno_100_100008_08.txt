Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [80 62 7 70 18 88 64 78 59 20 ]
BEST SOLUTION! cost=24.9024 stackLen: 30 => V0  V4  * a V0  / V5  * a r V1  a 1.000000  V4  * V1  * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 1 0 0 1 0 1 
iteration = 0 	 best= 24.902391	stackLen: 30 => V0  V4  * a V0  / V5  * a r V1  a 1.000000  V4  * V1  * * * empty: 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 0 1 0 0 1 0 1 
BEST SOLUTION! cost=20.1511 stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 20.151140	stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 20.151140	stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
iteration = 2 	 best= 20.151140	stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
iteration = 3 	 best= 20.151140	stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
iteration = 4 	 best= 20.151140	stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
iteration = 5 	 best= 20.151140	stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
iteration = 6 	 best= 20.151140	stackLen: 30 => 1.000000  1.000000  + r V4  V0  * a r V4  a / r V4  V1  * / * empty: 0 0 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 
BEST SOLUTION! cost=17.2 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 15 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 16 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 17 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 18 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 19 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 20 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 21 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 22 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 23 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 24 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 25 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 26 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 27 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 28 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 29 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 30 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 31 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 32 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 33 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 34 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 35 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 36 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 37 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 38 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 39 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 40 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 41 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 42 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 43 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 44 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 45 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 46 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 47 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 48 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 49 	 best= 17.200000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [66 17 84 24 32 89 34 62 0 41 ]
BEST SOLUTION! cost=30 stackLen: 30 => 1.000000  V1  / V5  V0  V0  - - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 30.000000	stackLen: 30 => 1.000000  V1  / V5  V0  V0  - - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 30.000000	stackLen: 30 => 1.000000  V1  / V5  V0  V0  - - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 30.000000	stackLen: 30 => 1.000000  V1  / V5  V0  V0  - - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 30.000000	stackLen: 30 => 1.000000  V1  / V5  V0  V0  - - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 30.000000	stackLen: 30 => 1.000000  V1  / V5  V0  V0  - - * empty: 0 1 1 1 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=25.372 stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 5 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 6 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 7 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 8 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 9 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 10 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 11 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 12 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 13 	 best= 25.371996	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  e V5  V5  * V5  i / / V2  * * V5  - * empty: 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=25 stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 0 	 best= 25.000000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 1 	 best= 25.000000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 2 	 best= 25.000000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 3 	 best= 25.000000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 4 	 best= 25.000000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
iteration = 5 	 best= 25.000000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
BEST SOLUTION! cost=23.8 stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.800000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.800000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 23.800000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 23.800000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 23.800000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 23.800000	stackLen: 30 => V5  1.000000  i 1.000000  / V0  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=22.7 stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 22.700000	stackLen: 30 => V5  1.000000  i 1.000000  / V4  * 1.000000  r V5  V5  + V5  * V5  V5  + i / / V2  * * V2  - * V4  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [22 78 52 91 64 62 10 89 60 3 ]
BEST SOLUTION! cost=42.1504 stackLen: 30 => V3  V5  + V4  - V3  V4  i a V3  * * r r 1.000000  * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 42.150430	stackLen: 30 => V3  V5  + V4  - V3  V4  i a V3  * * r r 1.000000  * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 42.150430	stackLen: 30 => V3  V5  + V4  - V3  V4  i a V3  * * r r 1.000000  * * empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=35.5 stackLen: 30 => V5  V0  a r + 1.000000  V4  / * empty: 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 35.500000	stackLen: 30 => V5  V0  a r + 1.000000  V4  / * empty: 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 1 	 best= 35.500000	stackLen: 30 => V5  V0  a r + 1.000000  V4  / * empty: 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 2 	 best= 35.500000	stackLen: 30 => V5  V0  a r + 1.000000  V4  / * empty: 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 3 	 best= 35.500000	stackLen: 30 => V5  V0  a r + 1.000000  V4  / * empty: 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 4 	 best= 35.500000	stackLen: 30 => V5  V0  a r + 1.000000  V4  / * empty: 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 5 	 best= 35.500000	stackLen: 30 => V5  V0  a r + 1.000000  V4  / * empty: 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=28.8 stackLen: 30 => V5  V5  + V0  a r + 1.000000  V4  / * empty: 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 28.800000	stackLen: 30 => V5  V5  + V0  a r + 1.000000  V4  / * empty: 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 28.800000	stackLen: 30 => V5  V5  + V0  a r + 1.000000  V4  / * empty: 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 28.800000	stackLen: 30 => V5  V5  + V0  a r + 1.000000  V4  / * empty: 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 28.800000	stackLen: 30 => V5  V5  + V0  a r + 1.000000  V4  / * empty: 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 28.800000	stackLen: 30 => V5  V5  + V0  a r + 1.000000  V4  / * empty: 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 28.800000	stackLen: 30 => V5  V5  + V0  a r + 1.000000  V4  / * empty: 0 0 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=24.8 stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.800000	stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.800000	stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.800000	stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.800000	stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.800000	stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.800000	stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 24.800000	stackLen: 30 => V5  V5  V5  - V5  - + V3  + V5  + V0  V0  + a r + 1.000000  1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=23.8333 stackLen: 30 => V5  V5  V5  + V5  - V5  - + V5  + V5  + 1.000000  * V0  V0  + a r + 1.000000  1.000000  + 1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.833333	stackLen: 30 => V5  V5  V5  + V5  - V5  - + V5  + V5  + 1.000000  * V0  V0  + a r + 1.000000  1.000000  + 1.000000  + V4  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.7 stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 2 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 3 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 4 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 5 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 6 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 7 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 8 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 9 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 10 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 11 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 12 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 13 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 14 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 15 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 16 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 17 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 18 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 19 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 20 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 21 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 22 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 23 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 24 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 25 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 26 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 27 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 28 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 29 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 30 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 31 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 32 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 33 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 34 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 35 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 36 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 37 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 38 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 39 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 40 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 41 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 42 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 43 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 44 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 45 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 46 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 47 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 48 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
iteration = 49 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * r a 1.000000  V1  / 1.000000  V5  * i + V3  + * V4  * empty: 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [75 54 34 58 89 20 40 17 76 1 ]
BEST SOLUTION! cost=38 stackLen: 30 => V0  V1  a V1  V1  a * / * empty: 0 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 
iteration = 0 	 best= 38.000000	stackLen: 30 => V0  V1  a V1  V1  a * / * empty: 0 0 1 1 1 1 1 0 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 
BEST SOLUTION! cost=37.1 stackLen: 30 => 1.000000  V5  1.000000  V4  1.000000  * * * * empty: 0 1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 37.100000	stackLen: 30 => 1.000000  V5  1.000000  V4  1.000000  * * * * empty: 0 1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=32.3 stackLen: 30 => V3  1.000000  1.000000  V1  V4  i 1.000000  V4  V5  + * + - / / * empty: 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 0 0 1 1 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 32.300000	stackLen: 30 => V3  1.000000  1.000000  V1  V4  i 1.000000  V4  V5  + * + - / / * empty: 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 0 0 1 1 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=29.9 stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 5 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 6 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 7 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 8 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 9 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 10 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 11 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 12 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 13 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 14 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 15 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 16 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 17 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 18 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 19 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 20 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 21 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 22 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 23 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 24 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 25 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 26 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 27 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 28 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 29 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 30 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 31 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 32 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 33 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 34 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 35 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 36 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 37 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 38 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 39 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 40 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 41 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 42 	 best= 29.900000	stackLen: 30 => 1.000000  1.000000  / V1  a V4  1.000000  * / V1  i a V3  V5  + * * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=26.55 stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 26.550000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 26.550000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 26.550000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 26.550000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 26.550000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 26.550000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=24.8 stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 24.800000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  V3  + V2  + V5  + V1  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=24.6 stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 24.600000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  / V1  a V4  1.000000  * / V1  i a V3  1.000000  * V2  + V5  + V5  V1  + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [89 99 38 18 98 24 4 23 2 8 ]
BEST SOLUTION! cost=42.0629 stackLen: 30 => 1.000000  1.000000  i 1.000000  / e r V1  V1  V0  + * / / empty: 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 42.062856	stackLen: 30 => 1.000000  1.000000  i 1.000000  / e r V1  V1  V0  + * / / empty: 0 0 1 0 1 1 0 0 1 1 1 1 1 1 0 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=38 stackLen: 30 => 1.000000  V5  a 1.000000  1.000000  i * a / r 1.000000  / a 1.000000  * / empty: 0 1 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 38.000000	stackLen: 30 => 1.000000  V5  a 1.000000  1.000000  i * a / r 1.000000  / a 1.000000  * / empty: 0 1 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 38.000000	stackLen: 30 => 1.000000  V5  a 1.000000  1.000000  i * a / r 1.000000  / a 1.000000  * / empty: 0 1 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 38.000000	stackLen: 30 => 1.000000  V5  a 1.000000  1.000000  i * a / r 1.000000  / a 1.000000  * / empty: 0 1 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 38.000000	stackLen: 30 => 1.000000  V5  a 1.000000  1.000000  i * a / r 1.000000  / a 1.000000  * / empty: 0 1 1 1 1 0 1 1 0 1 0 0 0 1 0 0 0 1 0 0 1 1 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=37.4 stackLen: 30 => 1.000000  V3  * V3  V0  V5  V1  V1  V0  - + a r + - + - V5  * empty: 0 1 0 1 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 37.400000	stackLen: 30 => 1.000000  V3  * V3  V0  V5  V1  V1  V0  - + a r + - + - V5  * empty: 0 1 0 1 1 1 1 0 0 1 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=33.6 stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 0 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 1 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 2 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 3 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 4 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 5 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 6 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 7 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 8 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 9 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
iteration = 10 	 best= 33.600000	stackLen: 30 => V4  V3  - V2  - V5  * empty: 0 1 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 
BEST SOLUTION! cost=33.2 stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  + 1.000000  / / * V5  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 33.200000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  + 1.000000  / / * V5  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 33.200000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  + 1.000000  / / * V5  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 33.200000	stackLen: 30 => V4  V3  - 1.000000  1.000000  1.000000  + 1.000000  / / * V5  - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=32.6 stackLen: 30 => 1.000000  V1  / a V3  V2  1.000000  1.000000  V1  1.000000  * * * + * + empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 32.600000	stackLen: 30 => 1.000000  V1  / a V3  V2  1.000000  1.000000  V1  1.000000  * * * + * + empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 32.600000	stackLen: 30 => 1.000000  V1  / a V3  V2  1.000000  1.000000  V1  1.000000  * * * + * + empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 32.600000	stackLen: 30 => 1.000000  V1  / a V3  V2  1.000000  1.000000  V1  1.000000  * * * + * + empty: 0 1 1 1 1 1 0 1 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=31.6233 stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 0 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 1 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 2 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 3 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 4 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 5 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 6 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
iteration = 7 	 best= 31.623340	stackLen: 30 => V5  a r V4  - V1  * 1.000000  V5  a / * a r r empty: 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 0 0 1 0 0 1 0 1 0 0 1 
BEST SOLUTION! cost=30.3642 stackLen: 30 => V4  V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 30.364233	stackLen: 30 => V4  V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 30.364233	stackLen: 30 => V4  V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 30.364233	stackLen: 30 => V4  V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 30.364233	stackLen: 30 => V4  V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 30.364233	stackLen: 30 => V4  V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 30.364233	stackLen: 30 => V4  V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=29.8271 stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 15 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 16 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 17 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 18 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 19 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 20 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 21 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 22 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 23 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 24 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 25 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 26 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 27 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 28 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 29 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 30 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 31 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 32 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 33 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 34 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 35 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 36 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 37 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 38 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 39 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 40 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 41 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 42 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 43 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 44 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 45 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 46 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 47 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 48 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 49 	 best= 29.827072	stackLen: 30 => V4  V4  + V5  + a r V4  - V1  V1  + * 1.000000  1.000000  + 1.000000  1.000000  / + V5  a / * a r r i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=17.2
stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * + 1.000000  V4  1.000000  * a * V1  V1  + a / r V4  V1  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
trueStackSize=24
printSolution2: (((v1 * v4) * \sqrt{({(v1 + v1)^2}/({(1 * v4)^2} * 1))})/((1 * 1) + (1 * 1)))
Tempo de execucao: 1122.25 segundos
FIM
