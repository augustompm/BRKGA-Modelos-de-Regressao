Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [71 38 28 56 98 35 69 30 53 80 ]
BEST SOLUTION! cost=33.5 stackLen: 30 => V4  a V0  1.000000  V4  a 1.000000  * V2  / * * * empty: 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 33.500000	stackLen: 30 => V4  a V0  1.000000  V4  a 1.000000  * V2  / * * * empty: 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 33.500000	stackLen: 30 => V4  a V0  1.000000  V4  a 1.000000  * V2  / * * * empty: 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 0 0 1 
iteration = 2 	 best= 33.500000	stackLen: 30 => V4  a V0  1.000000  V4  a 1.000000  * V2  / * * * empty: 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=27.7293 stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 6 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 7 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 8 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 9 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 10 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 11 	 best= 27.729256	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  1.000000  V3  * a V0  / i * - * * empty: 0 0 0 0 1 1 1 1 0 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=23.8071 stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 24 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 25 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 26 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 27 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 28 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 29 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 30 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 31 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 32 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 33 	 best= 23.807083	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V1  * 1.000000  1.000000  * V3  * a V0  / i * / - * empty: 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=22.0225 stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 22.022452	stackLen: 30 => V3  V4  - 1.000000  a * V2  1.000000  V1  V5  * 1.000000  1.000000  * 1.000000  1.000000  / * V3  * a V0  V4  - / i * / - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [47 69 20 72 82 29 42 88 34 60 ]
BEST SOLUTION! cost=26.7 stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 0 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 1 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 2 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 3 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 4 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 5 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 6 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 7 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 8 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 9 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
iteration = 10 	 best= 26.700000	stackLen: 30 => V4  1.000000  * 1.000000  i 1.000000  * * a V1  V0  i * 1.000000  * - empty: 0 0 0 1 0 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 
BEST SOLUTION! cost=21.8 stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 21.800000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 21.800000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 21.800000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 21.800000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 21.800000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 21.800000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 21.800000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  - / i * V5  a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=18.6 stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 0 	 best= 18.600000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 1 	 best= 18.600000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 2 	 best= 18.600000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 3 	 best= 18.600000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 4 	 best= 18.600000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 5 	 best= 18.600000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 6 	 best= 18.600000	stackLen: 30 => V4  V5  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - a V1  V0  i * 1.000000  1.000000  / * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
BEST SOLUTION! cost=11 stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 11.000000	stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [79 5 86 28 96 64 56 75 51 84 ]
BEST SOLUTION! cost=33.6 stackLen: 30 => V1  V0  + V1  a r 1.000000  * - 1.000000  * V3  * empty: 0 0 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 
iteration = 0 	 best= 33.600000	stackLen: 30 => V1  V0  + V1  a r 1.000000  * - 1.000000  * V3  * empty: 0 0 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 
iteration = 1 	 best= 33.600000	stackLen: 30 => V1  V0  + V1  a r 1.000000  * - 1.000000  * V3  * empty: 0 0 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 
BEST SOLUTION! cost=33.4 stackLen: 30 => V4  1.000000  * V5  * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 0 	 best= 33.400000	stackLen: 30 => V4  1.000000  * V5  * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 1 	 best= 33.400000	stackLen: 30 => V4  1.000000  * V5  * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 
BEST SOLUTION! cost=29 stackLen: 30 => 1.000000  V0  1.000000  V5  * + 1.000000  * / V4  * empty: 0 0 0 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 29.000000	stackLen: 30 => 1.000000  V0  1.000000  V5  * + 1.000000  * / V4  * empty: 0 0 0 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 29.000000	stackLen: 30 => 1.000000  V0  1.000000  V5  * + 1.000000  * / V4  * empty: 0 0 0 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 2 	 best= 29.000000	stackLen: 30 => 1.000000  V0  1.000000  V5  * + 1.000000  * / V4  * empty: 0 0 0 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 3 	 best= 29.000000	stackLen: 30 => 1.000000  V0  1.000000  V5  * + 1.000000  * / V4  * empty: 0 0 0 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 4 	 best= 29.000000	stackLen: 30 => 1.000000  V0  1.000000  V5  * + 1.000000  * / V4  * empty: 0 0 0 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 5 	 best= 29.000000	stackLen: 30 => 1.000000  V0  1.000000  V5  * + 1.000000  * / V4  * empty: 0 0 0 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=28.35 stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 0 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 1 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 2 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 3 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 4 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 5 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 6 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 7 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 8 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 9 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
iteration = 10 	 best= 28.350000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  - * + 1.000000  * / V4  - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
BEST SOLUTION! cost=24.9 stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  V5  V5  - + - * + 1.000000  1.000000  - * / V4  V2  + - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 24.900000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  V5  V5  - + - * + 1.000000  1.000000  - * / V4  V2  + - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 24.900000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  V5  V5  - + - * + 1.000000  1.000000  - * / V4  V2  + - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 24.900000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  V5  V5  - + - * + 1.000000  1.000000  - * / V4  V2  + - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 24.900000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  V5  V5  - + - * + 1.000000  1.000000  - * / V4  V2  + - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 24.900000	stackLen: 30 => 1.000000  1.000000  + V0  1.000000  V5  V5  V5  V5  - + - * + 1.000000  1.000000  - * / V4  V2  + - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=23.8 stackLen: 30 => 1.000000  V4  V0  - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 
iteration = 0 	 best= 23.800000	stackLen: 30 => 1.000000  V4  V0  - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 
iteration = 1 	 best= 23.800000	stackLen: 30 => 1.000000  V4  V0  - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 
iteration = 2 	 best= 23.800000	stackLen: 30 => 1.000000  V4  V0  - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 
iteration = 3 	 best= 23.800000	stackLen: 30 => 1.000000  V4  V0  - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 
iteration = 4 	 best= 23.800000	stackLen: 30 => 1.000000  V4  V0  - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 
iteration = 5 	 best= 23.800000	stackLen: 30 => 1.000000  V4  V0  - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 
BEST SOLUTION! cost=21.7 stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.700000	stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.700000	stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.700000	stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.700000	stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.700000	stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.700000	stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 21.700000	stackLen: 30 => 1.000000  V4  V0  V0  - - V5  * 1.000000  V0  V1  * * - / empty: 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18 stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 18.000000	stackLen: 30 => 1.000000  1.000000  1.000000  - + V4  V0  V2  + V0  - - V5  * 1.000000  V0  V1  * * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [67 43 10 44 15 46 90 82 18 75 ]
BEST SOLUTION! cost=32.3184 stackLen: 30 => V2  1.000000  1.000000  + r 1.000000  V3  * / * empty: 0 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 32.318377	stackLen: 30 => V2  1.000000  1.000000  + r 1.000000  V3  * / * empty: 0 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=28.5 stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 6 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 7 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 8 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 9 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 10 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 11 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 12 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 13 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 14 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 15 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 16 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 17 	 best= 28.500000	stackLen: 30 => 1.000000  V4  i * 1.000000  1.000000  + 1.000000  V5  / * * empty: 0 0 0 1 1 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=26.7 stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 26.700000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  1.000000  + 1.000000  1.000000  + V1  * / V5  V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.35 stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 25.350000	stackLen: 30 => 1.000000  1.000000  i * 1.000000  / a 1.000000  1.000000  + 1.000000  V5  * V1  * / V5  V5  - V4  - V5  V5  - V5  - * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [88 77 74 34 71 0 6 24 41 11 ]
BEST SOLUTION! cost=35.1 stackLen: 30 => V4  a V0  V3  V4  V3  - - a V4  V1  - / * * empty: 0 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 1 0 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 35.100000	stackLen: 30 => V4  a V0  V3  V4  V3  - - a V4  V1  - / * * empty: 0 1 1 0 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 0 1 0 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=26.1143 stackLen: 30 => V4  V5  - V0  - 1.000000  1.000000  / 1.000000  e - V1  / * empty: 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 26.114304	stackLen: 30 => V4  V5  - V0  - 1.000000  1.000000  / 1.000000  e - V1  / * empty: 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 26.114304	stackLen: 30 => V4  V5  - V0  - 1.000000  1.000000  / 1.000000  e - V1  / * empty: 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 26.114304	stackLen: 30 => V4  V5  - V0  - 1.000000  1.000000  / 1.000000  e - V1  / * empty: 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 26.114304	stackLen: 30 => V4  V5  - V0  - 1.000000  1.000000  / 1.000000  e - V1  / * empty: 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 26.114304	stackLen: 30 => V4  V5  - V0  - 1.000000  1.000000  / 1.000000  e - V1  / * empty: 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 26.114304	stackLen: 30 => V4  V5  - V0  - 1.000000  1.000000  / 1.000000  e - V1  / * empty: 0 0 0 0 1 1 0 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=21.15 stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 21.150000	stackLen: 30 => V4  V5  V5  + - V0  - 1.000000  1.000000  - 1.000000  1.000000  / 1.000000  + - V1  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=11
stackLen: 30 => V4  V5  + V2  * 1.000000  1.000000  1.000000  + 1.000000  - / i * V5  V5  - V5  - a V1  V0  i 1.000000  1.000000  * * * - - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (((((1 * 1) * (v0)) * v1) - {(v5 - (v5 - v5))^2}) - ((((1 - (1 + 1))/1)) * (v2 * (v5 + v4))))
Tempo de execucao: 943.177 segundos
FIM
