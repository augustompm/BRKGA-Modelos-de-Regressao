Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [71 42 53 12 48 52 13 32 22 15 ]
BEST SOLUTION! cost=78.4401 stackLen: 30 => V4  a V4  1.000000  V1  / V0  - * / i V0  V5  * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 78.440079	stackLen: 30 => V4  a V4  1.000000  V1  / V0  - * / i V0  V5  * * empty: 0 1 1 1 0 0 1 1 1 1 0 1 0 0 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=47.8 stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V2  - 1.000000  1.000000  * * * * * empty: 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 47.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V2  - 1.000000  1.000000  * * * * * empty: 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 47.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V2  - 1.000000  1.000000  * * * * * empty: 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 47.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V2  - 1.000000  1.000000  * * * * * empty: 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 47.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V2  - 1.000000  1.000000  * * * * * empty: 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 47.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V2  - 1.000000  1.000000  * * * * * empty: 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 47.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V2  - 1.000000  1.000000  * * * * * empty: 0 1 0 1 0 1 0 0 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=42.7 stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 42.700000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  V1  V1  + V2  - 1.000000  1.000000  * * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=35.8 stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 0 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 1 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 2 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 3 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 4 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 5 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 6 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 7 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 8 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 9 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 10 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 11 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 12 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 13 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 14 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 15 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 16 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 17 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 18 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 19 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 20 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 21 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 22 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 23 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 24 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 25 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 26 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 27 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 28 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 29 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 30 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 31 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 32 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 33 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 34 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 35 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 36 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 37 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 38 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 39 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 40 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 41 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 42 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 43 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 44 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 45 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 46 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 47 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 48 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 49 	 best= 35.800000	stackLen: 30 => V5  1.000000  * 1.000000  1.000000  - 1.000000  1.000000  / i - V5  V1  V1  + + / - 1.000000  V4  * * 1.000000  * V3  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [62 0 38 13 27 92 3 47 74 12 ]
BEST SOLUTION! cost=41.2 stackLen: 30 => 1.000000  V2  * 1.000000  V5  V5  * r V1  / / * V3  * empty: 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 41.200000	stackLen: 30 => 1.000000  V2  * 1.000000  V5  V5  * r V1  / / * V3  * empty: 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=39.7 stackLen: 30 => V0  i 1.000000  V2  V0  1.000000  * 1.000000  * - * * 1.000000  * empty: 0 0 1 0 1 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 39.700000	stackLen: 30 => V0  i 1.000000  V2  V0  1.000000  * 1.000000  * - * * 1.000000  * empty: 0 0 1 0 1 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=32.6098 stackLen: 30 => V0  i V1  V4  V3  - 1.000000  V4  a V1  / / * * * empty: 0 0 1 1 1 1 0 0 1 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 32.609831	stackLen: 30 => V0  i V1  V4  V3  - 1.000000  V4  a V1  / / * * * empty: 0 0 1 1 1 1 0 0 1 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 32.609831	stackLen: 30 => V0  i V1  V4  V3  - 1.000000  V4  a V1  / / * * * empty: 0 0 1 1 1 1 0 0 1 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=32.3 stackLen: 30 => V2  V2  V2  * i V0  V4  1.000000  V0  / + * / V2  1.000000  * * * empty: 0 1 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 32.300000	stackLen: 30 => V2  V2  V2  * i V0  V4  1.000000  V0  / + * / V2  1.000000  * * * empty: 0 1 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 32.300000	stackLen: 30 => V2  V2  V2  * i V0  V4  1.000000  V0  / + * / V2  1.000000  * * * empty: 0 1 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 1 0 0 0 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=31.8162 stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 6 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 7 	 best= 31.816151	stackLen: 30 => 1.000000  V3  * 1.000000  e r * V0  * empty: 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=31.7535 stackLen: 30 => 1.000000  V3  / 1.000000  1.000000  1.000000  1.000000  / * 1.000000  / e - V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 31.753546	stackLen: 30 => 1.000000  V3  / 1.000000  1.000000  1.000000  1.000000  / * 1.000000  / e - V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 31.753546	stackLen: 30 => 1.000000  V3  / 1.000000  1.000000  1.000000  1.000000  / * 1.000000  / e - V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 31.753546	stackLen: 30 => 1.000000  V3  / 1.000000  1.000000  1.000000  1.000000  / * 1.000000  / e - V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 31.753546	stackLen: 30 => 1.000000  V3  / 1.000000  1.000000  1.000000  1.000000  / * 1.000000  / e - V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 31.753546	stackLen: 30 => 1.000000  V3  / 1.000000  1.000000  1.000000  1.000000  / * 1.000000  / e - V0  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=22.2188 stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 22.218843	stackLen: 30 => V0  V3  * V1  V4  a V2  V1  - / * 1.000000  * r * empty: 0 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=21.4327 stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  + 1.000000  * * r * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.432737	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  + 1.000000  * * r * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.432737	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  + 1.000000  * * r * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.432737	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  + 1.000000  * * r * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.432737	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  + 1.000000  * * r * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.432737	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  + 1.000000  * * r * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.432737	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  + 1.000000  * * r * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=21.2126 stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 10 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 11 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 12 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 13 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 14 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 15 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 16 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 17 	 best= 21.212578	stackLen: 30 => V0  V3  * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=13.5287 stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 13.528711	stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [87 59 44 33 25 65 56 29 88 92 ]
BEST SOLUTION! cost=22.2843 stackLen: 30 => V0  V1  * a r r V4  - 1.000000  a * V4  * empty: 0 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 22.284303	stackLen: 30 => V0  V1  * a r r V4  - 1.000000  a * V4  * empty: 0 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=19.3 stackLen: 30 => 1.000000  V5  i i / V1  V1  V1  V4  + - - * empty: 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 19.300000	stackLen: 30 => 1.000000  V5  i i / V1  V1  V1  V4  + - - * empty: 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=18.1 stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 6 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 7 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 8 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 9 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 10 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 11 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 12 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 13 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 14 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 15 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 16 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 17 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 18 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 19 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 20 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 21 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 22 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 23 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 24 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 25 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 26 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 27 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 28 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 29 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 30 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 31 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 32 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 33 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 34 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 35 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 36 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 37 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 38 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 39 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 40 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 41 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 42 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 43 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 44 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 45 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 46 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 47 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 48 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 49 	 best= 18.100000	stackLen: 30 => V1  1.000000  V4  * 1.000000  V0  * - * empty: 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [72 34 39 92 8 17 1 7 57 19 ]
BEST SOLUTION! cost=28.1 stackLen: 30 => 1.000000  V0  1.000000  1.000000  V5  / V1  - / * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 28.100000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  V5  / V1  - / * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 28.100000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  V5  / V1  - / * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 28.100000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  V5  / V1  - / * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 28.100000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  V5  / V1  - / * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 28.100000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  V5  / V1  - / * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 28.100000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  V5  / V1  - / * / empty: 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=25.4 stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 25.400000	stackLen: 30 => 1.000000  V0  1.000000  1.000000  1.000000  / 1.000000  / 1.000000  * V2  V5  + V1  - / / * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=24.4807 stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.480706	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.480706	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.480706	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.480706	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.480706	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.480706	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 24.480706	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V4  V2  + V5  V1  - V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=24.4181 stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 24.418118	stackLen: 30 => 1.000000  V0  1.000000  1.000000  * 1.000000  1.000000  * 1.000000  a e / V5  V2  + V1  V1  + V5  - + V2  V1  - - / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [89 62 17 72 56 51 91 68 58 0 ]
BEST SOLUTION! cost=30.6675 stackLen: 30 => V4  1.000000  1.000000  e V1  a * V5  / / V2  * V2  * * empty: 0 0 1 1 0 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 0 1 0 1 1 0 0 1 0 1 
COST2 IS BETTER!!!26.6259
iteration = 0 	 best= 26.625945	stackLen: 30 => V4  V4  + 1.000000  1.000000  e V1  a * V5  / / V2  * V2  * * empty: 0 0 0 0 1 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.625945	stackLen: 30 => V4  V4  + 1.000000  1.000000  e V1  a * V5  / / V2  * V2  * * empty: 0 0 0 0 1 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.96 stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 0 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 1 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 2 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 3 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 4 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 5 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 6 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 7 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
iteration = 8 	 best= 25.960000	stackLen: 30 => V3  a i r V1  / V5  1.000000  V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 0 
BEST SOLUTION! cost=21.3167 stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 21.316667	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  - 1.000000  + 1.000000  + V5  V0  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.35 stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 15 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 16 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 17 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 18 	 best= 16.350000	stackLen: 30 => V3  a i r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * / 1.000000  + V3  V0  V5  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=16.1089 stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 16.108889	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  1.000000  * 1.000000  1.000000  1.000000  / * + 1.000000  + V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=15.128 stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 15.127994	stackLen: 30 => V3  V3  * a r r V1  / V5  1.000000  a * 1.000000  1.000000  1.000000  * / * 1.000000  e V3  V0  V5  + V0  + + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=13.5287
stackLen: 30 => V0  V3  V0  V3  - + * V1  V5  a V2  V1  - / * 1.000000  1.000000  1.000000  * 1.000000  + 1.000000  / + 1.000000  * * r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (\sqrt{((1 * ((1/(1 + (1 * 1))) + 1)) * (((v1 - v2)/{v5^2}) * v1))} * (((v3 - v0) + v3) * v0))
Tempo de execucao: 1167.47 segundos
FIM
