Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:37
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [18 68 61 86 72 90 7 83 16 1 ]
BEST SOLUTION! cost=33.4 stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 0 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 1 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 2 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 3 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 4 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 5 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 6 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 7 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 8 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 9 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 10 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 11 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 12 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 13 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 14 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
iteration = 15 	 best= 33.400000	stackLen: 10 => V4  V1  * empty: 0 1 1 1 0 1 1 1 0 1 
BEST SOLUTION! cost=28.3 stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 28.300000	stackLen: 10 => V2  V3  1.000000  * * V4  V1  * + empty: 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [28 9 82 16 49 12 33 96 89 26 ]
BEST SOLUTION! cost=43.4 stackLen: 15 => V0  V4  V1  V1  1.000000  * + + * empty: 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 43.400000	stackLen: 15 => V0  V4  V1  V1  1.000000  * + + * empty: 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 1 	 best= 43.400000	stackLen: 15 => V0  V4  V1  V1  1.000000  * + + * empty: 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 2 	 best= 43.400000	stackLen: 15 => V0  V4  V1  V1  1.000000  * + + * empty: 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 3 	 best= 43.400000	stackLen: 15 => V0  V4  V1  V1  1.000000  * + + * empty: 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=35.3 stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 6 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 7 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 8 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 9 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 10 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 11 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 12 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 13 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 14 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 15 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 16 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 17 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 18 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 19 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 20 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 21 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 22 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 23 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
iteration = 24 	 best= 35.300000	stackLen: 15 => 1.000000  V5  V0  V4  - * / empty: 0 1 1 1 0 0 0 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=33.1 stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 33.100000	stackLen: 15 => 1.000000  V5  / V4  * i V0  1.000000  V0  V3  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [99 64 14 43 24 77 65 3 62 47 ]
BEST SOLUTION! cost=37.2 stackLen: 22 => 1.000000  i a V1  V5  + V4  * / empty: 0 0 0 1 1 1 1 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 
iteration = 0 	 best= 37.200000	stackLen: 22 => 1.000000  i a V1  V5  + V4  * / empty: 0 0 0 1 1 1 1 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 
iteration = 1 	 best= 37.200000	stackLen: 22 => 1.000000  i a V1  V5  + V4  * / empty: 0 0 0 1 1 1 1 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 
BEST SOLUTION! cost=33.3 stackLen: 22 => 1.000000  V5  V3  V1  + + V2  * / empty: 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 33.300000	stackLen: 22 => 1.000000  V5  V3  V1  + + V2  * / empty: 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 33.300000	stackLen: 22 => 1.000000  V5  V3  V1  + + V2  * / empty: 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 33.300000	stackLen: 22 => 1.000000  V5  V3  V1  + + V2  * / empty: 0 1 1 1 1 0 1 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=30.8 stackLen: 22 => 1.000000  V1  a / V0  V3  V1  - V0  V0  V3  V5  + + + + * - empty: 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 30.800000	stackLen: 22 => 1.000000  V1  a / V0  V3  V1  - V0  V0  V3  V5  + + + + * - empty: 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 30.800000	stackLen: 22 => 1.000000  V1  a / V0  V3  V1  - V0  V0  V3  V5  + + + + * - empty: 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 30.800000	stackLen: 22 => 1.000000  V1  a / V0  V3  V1  - V0  V0  V3  V5  + + + + * - empty: 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=26 stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 1 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 2 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 3 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 4 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 5 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 6 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
iteration = 7 	 best= 26.000000	stackLen: 22 => V0  V3  V3  V1  + i - V0  V4  - - V5  - * empty: 0 0 1 0 0 0 1 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 
BEST SOLUTION! cost=23.4 stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 6 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 7 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 8 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 9 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 10 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 11 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 12 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 13 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 14 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 15 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 16 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
iteration = 17 	 best= 23.400000	stackLen: 22 => 1.000000  V2  / V3  V4  1.000000  * - + V5  * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=19.6775 stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 19.677505	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + r e * V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.5695 stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 19.569516	stackLen: 22 => 1.000000  1.000000  / 1.000000  1.000000  + + e r V0  / V3  1.000000  V4  V2  + * - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [87 59 56 93 94 30 54 69 12 70 ]
BEST SOLUTION! cost=46.7 stackLen: 30 => 1.000000  1.000000  1.000000  V3  a V3  V2  V3  * * / / a / / empty: 0 1 0 1 0 0 0 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 46.700000	stackLen: 30 => 1.000000  1.000000  1.000000  V3  a V3  V2  V3  * * / / a / / empty: 0 1 0 1 0 0 0 1 1 1 1 1 0 0 1 0 0 0 1 1 0 1 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=41.3524 stackLen: 30 => V0  1.000000  * V5  V0  V3  a 1.000000  e V5  * / * * * empty: 0 1 0 1 0 1 1 0 1 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 41.352436	stackLen: 30 => V0  1.000000  * V5  V0  V3  a 1.000000  e V5  * / * * * empty: 0 1 0 1 0 1 1 0 1 1 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=38 stackLen: 30 => V2  V4  1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 0 0 1 
COST2 IS BETTER!!!36.1
iteration = 0 	 best= 36.100000	stackLen: 30 => V2  V4  V4  + 1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 36.100000	stackLen: 30 => V2  V4  V4  + 1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 36.100000	stackLen: 30 => V2  V4  V4  + 1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 36.100000	stackLen: 30 => V2  V4  V4  + 1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 36.100000	stackLen: 30 => V2  V4  V4  + 1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 36.100000	stackLen: 30 => V2  V4  V4  + 1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 36.100000	stackLen: 30 => V2  V4  V4  + 1.000000  V2  1.000000  * / - 1.000000  1.000000  * * * empty: 0 0 0 0 1 1 0 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=29 stackLen: 30 => 1.000000  V2  V2  V1  1.000000  a V5  * + + * * empty: 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 
iteration = 0 	 best= 29.000000	stackLen: 30 => 1.000000  V2  V2  V1  1.000000  a V5  * + + * * empty: 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 
BEST SOLUTION! cost=27.6 stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 27.600000	stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 1 	 best= 27.600000	stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 2 	 best= 27.600000	stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 3 	 best= 27.600000	stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 4 	 best= 27.600000	stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 5 	 best= 27.600000	stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 6 	 best= 27.600000	stackLen: 30 => V1  V5  1.000000  1.000000  / V4  i * - * empty: 0 1 0 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=22.4598 stackLen: 30 => 1.000000  1.000000  * e V5  * V1  V5  * a r r - V1  * empty: 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 0 1 
iteration = 0 	 best= 22.459814	stackLen: 30 => 1.000000  1.000000  * e V5  * V1  V5  * a r r - V1  * empty: 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 0 1 
iteration = 1 	 best= 22.459814	stackLen: 30 => 1.000000  1.000000  * e V5  * V1  V5  * a r r - V1  * empty: 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 0 1 
iteration = 2 	 best= 22.459814	stackLen: 30 => 1.000000  1.000000  * e V5  * V1  V5  * a r r - V1  * empty: 0 1 0 1 1 1 0 0 1 0 1 0 1 1 0 1 0 0 1 0 0 0 1 0 0 1 1 1 0 1 
BEST SOLUTION! cost=14.8 stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.800000	stackLen: 30 => V1  V5  1.000000  V1  * V5  + V1  1.000000  * V0  + - - * empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [43 92 84 73 99 1 11 19 21 64 ]
BEST SOLUTION! cost=29.4 stackLen: 45 => 1.000000  V2  * V1  * V2  1.000000  V2  a V0  / * * * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
iteration = 0 	 best= 29.400000	stackLen: 45 => 1.000000  V2  * V1  * V2  1.000000  V2  a V0  / * * * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 0 1 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 1 
BEST SOLUTION! cost=22.5 stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 6 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 7 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 8 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 9 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 10 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 11 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 12 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 13 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 14 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 15 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 16 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 17 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 18 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 19 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 20 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 21 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 22 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 23 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 24 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 25 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 26 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 27 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 28 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 29 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 30 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 31 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 32 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 33 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 34 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 35 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 36 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
iteration = 37 	 best= 22.500000	stackLen: 45 => 1.000000  a 1.000000  V2  V4  V1  - 1.000000  * 1.000000  1.000000  * * V3  V5  - - * * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=21.4 stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 0 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 1 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 2 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 3 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 4 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 5 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 6 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 7 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 8 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 9 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 10 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 11 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 12 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 13 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 14 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 15 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 16 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 17 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 18 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 19 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 20 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 21 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 22 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 23 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 24 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 25 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 26 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 27 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 28 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 29 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 30 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 31 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 32 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 33 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 34 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 35 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 36 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 37 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 38 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 39 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 40 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 41 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 42 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 43 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 44 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 45 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 46 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 47 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 48 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
iteration = 49 	 best= 21.400000	stackLen: 45 => 1.000000  1.000000  / r a 1.000000  V2  V4  V4  V4  - V1  + - 1.000000  * 1.000000  1.000000  * * V3  V0  V5  V5  V5  - + + - - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14.8
stackLen: 45 => 1.000000  V4  V3  V1  - V0  * V1  V1  / V0  - + + - r * * * r r * r V1  V3  empty: 0 1 1 0 0 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 1 0 
trueStackSize=15
