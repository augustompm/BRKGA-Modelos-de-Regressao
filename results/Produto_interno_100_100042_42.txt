Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [61 0 25 44 42 2 59 51 46 94 ]
BEST SOLUTION! cost=27.0438 stackLen: 30 => V2  1.000000  V3  a i V3  V5  V0  * * / / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 27.043810	stackLen: 30 => V2  1.000000  V3  a i V3  V5  V0  * * / / * empty: 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.4 stackLen: 30 => V4  a r V1  V2  a V2  i V2  * / * * empty: 0 1 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 26.400000	stackLen: 30 => V4  a r V1  V2  a V2  i V2  * / * * empty: 0 1 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=25.4797 stackLen: 30 => 1.000000  V3  a / V1  / V5  * e r V0  * i V2  1.000000  * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 0 0 1 
iteration = 0 	 best= 25.479708	stackLen: 30 => 1.000000  V3  a / V1  / V5  * e r V0  * i V2  1.000000  * * empty: 0 1 1 1 1 0 1 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 0 0 1 
BEST SOLUTION! cost=21.3958 stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 2 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 3 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 4 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 5 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 6 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 7 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
iteration = 8 	 best= 21.395837	stackLen: 30 => V5  1.000000  1.000000  1.000000  r + r V0  * / * empty: 0 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=21.2847 stackLen: 30 => V5  1.000000  1.000000  1.000000  / 1.000000  1.000000  1.000000  + * r r + r V0  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.284685	stackLen: 30 => V5  1.000000  1.000000  1.000000  / 1.000000  1.000000  1.000000  + * r r + r V0  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.284685	stackLen: 30 => V5  1.000000  1.000000  1.000000  / 1.000000  1.000000  1.000000  + * r r + r V0  * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.7 stackLen: 30 => V3  V5  1.000000  V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 17.700000	stackLen: 30 => V3  V5  1.000000  V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 17.700000	stackLen: 30 => V3  V5  1.000000  V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 17.700000	stackLen: 30 => V3  V5  1.000000  V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 1 
iteration = 3 	 best= 17.700000	stackLen: 30 => V3  V5  1.000000  V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 1 
iteration = 4 	 best= 17.700000	stackLen: 30 => V3  V5  1.000000  V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 1 
iteration = 5 	 best= 17.700000	stackLen: 30 => V3  V5  1.000000  V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=13.6 stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 13.600000	stackLen: 30 => V3  V5  1.000000  1.000000  + V3  / + 1.000000  V3  a r / V1  / * * empty: 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=12.5667 stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 12.566667	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  1.000000  + * + V3  V3  + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=12.38 stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 18 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 19 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 20 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 21 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 22 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 23 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 24 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 25 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 26 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 27 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 28 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 29 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 30 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 31 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 32 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 33 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 34 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 35 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 36 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 37 	 best= 12.380000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V3  + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=12.24 stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.240000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V0  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.94 stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 11.940000	stackLen: 30 => V3  V5  1.000000  1.000000  1.000000  + 1.000000  1.000000  + * + V3  V3  V2  V3  - + + / + 1.000000  V3  a r / V1  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [35 85 56 84 93 3 54 75 94 53 ]
BEST SOLUTION! cost=36.5 stackLen: 30 => 1.000000  V2  1.000000  i a V3  * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 36.500000	stackLen: 30 => 1.000000  V2  1.000000  i a V3  * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 36.500000	stackLen: 30 => 1.000000  V2  1.000000  i a V3  * * * empty: 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=28.7 stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 4 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 5 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
iteration = 6 	 best= 28.700000	stackLen: 30 => 1.000000  1.000000  r V4  / i / V5  * empty: 0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=23.7404 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * 1.000000  * r e V0  V2  * i / V5  V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 0 
iteration = 0 	 best= 23.740419	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * 1.000000  * r e V0  V2  * i / V5  V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 0 
iteration = 1 	 best= 23.740419	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * 1.000000  * r e V0  V2  * i / V5  V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 0 
iteration = 2 	 best= 23.740419	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * 1.000000  * r e V0  V2  * i / V5  V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 0 
iteration = 3 	 best= 23.740419	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * 1.000000  * r e V0  V2  * i / V5  V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 0 
iteration = 4 	 best= 23.740419	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * 1.000000  * r e V0  V2  * i / V5  V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 0 
iteration = 5 	 best= 23.740419	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / 1.000000  + * 1.000000  * r e V0  V2  * i / V5  V4  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 0 
BEST SOLUTION! cost=21.1 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / i + * 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / i + * 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / i + * 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / i + * 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / i + * 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / i + * 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.100000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / i + * 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.0029 stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.002944	stackLen: 30 => 1.000000  1.000000  1.000000  i / i + r 1.000000  1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20.9746 stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 20.974612	stackLen: 30 => 1.000000  1.000000  1.000000  i / i e r r 1.000000  * + r a V2  V2  + i / V0  V4  V4  - V4  + - + V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [25 65 54 18 9 79 40 91 35 23 ]
BEST SOLUTION! cost=30.2 stackLen: 30 => V5  V2  a r a r 1.000000  1.000000  1.000000  V0  V4  + / * * - * empty: 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 30.200000	stackLen: 30 => V5  V2  a r a r 1.000000  1.000000  1.000000  V0  V4  + / * * - * empty: 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 30.200000	stackLen: 30 => V5  V2  a r a r 1.000000  1.000000  1.000000  V0  V4  + / * * - * empty: 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 0 
iteration = 2 	 best= 30.200000	stackLen: 30 => V5  V2  a r a r 1.000000  1.000000  1.000000  V0  V4  + / * * - * empty: 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=18.3 stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 0 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 1 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 2 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 3 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 4 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 5 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 6 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 7 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
iteration = 8 	 best= 18.300000	stackLen: 30 => 1.000000  i V2  V2  i * i / V5  V4  * + empty: 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 0 0 
BEST SOLUTION! cost=18.2062 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + / e V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.206174	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + / e V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.206174	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + / e V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.206174	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + / e V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.206174	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + / e V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.206174	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + / e V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.206174	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  + / e V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=17.746 stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 17.745969	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 17.745969	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 17.745969	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 17.745969	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 17.745969	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 17.745969	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 17.745969	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  1.000000  + * r V2  V2  + i V2  * i i / V5  V4  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=17.6327 stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.632704	stackLen: 30 => 1.000000  a 1.000000  / e 1.000000  + 1.000000  1.000000  + + r V2  V2  i i + i V2  * i i / V5  1.000000  V4  * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [9 53 41 77 83 56 42 10 6 30 ]
BEST SOLUTION! cost=30.4123 stackLen: 30 => 1.000000  V3  V5  + a 1.000000  i V2  / V0  - / V1  V3  V4  * * * * empty: 0 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 30.412327	stackLen: 30 => 1.000000  V3  V5  + a 1.000000  i V2  / V0  - / V1  V3  V4  * * * * empty: 0 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=20.9 stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * V2  * V3  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  * 1.000000  1.000000  * * V2  * V3  * empty: 0 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=18.9581 stackLen: 30 => 1.000000  V2  V3  * 1.000000  1.000000  e * 1.000000  / a e * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 
iteration = 0 	 best= 18.958064	stackLen: 30 => 1.000000  V2  V3  * 1.000000  1.000000  e * 1.000000  / a e * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 
BEST SOLUTION! cost=15.9 stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 5 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 6 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 7 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 8 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 9 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 10 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 11 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 12 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 13 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 14 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 15 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 16 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 17 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 18 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 19 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 20 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 21 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 22 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 23 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 24 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 25 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 26 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 27 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 28 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 29 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 30 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 31 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 32 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 33 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 34 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 35 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 36 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 37 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 38 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 39 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 40 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 41 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
iteration = 42 	 best= 15.900000	stackLen: 30 => V3  1.000000  1.000000  i * V2  * i 1.000000  V0  * + * empty: 0 1 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=15.7444 stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  * V2  - / 1.000000  V0  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  * V2  - / 1.000000  V0  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  * V2  - / 1.000000  V0  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  * V2  - / 1.000000  V0  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  * V2  - / 1.000000  V0  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  * V2  - / 1.000000  V0  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  * V2  - / 1.000000  V0  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.6834 stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 15.683419	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / r V0  V0  + * V2  - / 1.000000  V0  V0  + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=15.2556 stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.255556	stackLen: 30 => V3  1.000000  1.000000  1.000000  + 1.000000  + 1.000000  / a V0  V5  + * V2  - * 1.000000  V0  V0  V0  V0  + V0  - + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=15.1333 stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.133333	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.133333	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.133333	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.133333	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.133333	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.133333	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.133333	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V5  - * V2  - * V3  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=11.8778 stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V4  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.877778	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V4  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.877778	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V4  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.877778	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V4  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.877778	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V4  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.877778	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V4  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.877778	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V4  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=11.7444 stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 11.744444	stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [96 50 61 40 14 35 69 60 98 37 ]
BEST SOLUTION! cost=36.3 stackLen: 30 => V4  V5  + 1.000000  a i 1.000000  / * V3  * empty: 0 1 1 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 36.300000	stackLen: 30 => V4  V5  + 1.000000  a i 1.000000  / * V3  * empty: 0 1 1 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 36.300000	stackLen: 30 => V4  V5  + 1.000000  a i 1.000000  / * V3  * empty: 0 1 1 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=24.2 stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 0 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 1 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 2 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 3 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 4 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 5 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 6 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 7 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 8 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 9 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
iteration = 10 	 best= 24.200000	stackLen: 30 => V5  1.000000  1.000000  a V2  a r / V4  - * * empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 1 
BEST SOLUTION! cost=23.3727 stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 23.372661	stackLen: 30 => V5  1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / r r V2  a r * V4  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=11.7444
stackLen: 30 => V3  1.000000  1.000000  1.000000  / + 1.000000  + 1.000000  / a V1  V0  - * V2  - * V5  V0  V4  V0  V0  + V0  - + + * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (((((v0 - (v0 + v0)) + v4) + v0) * v5) + ((v2 - ((v0 - v1) * {(1/(1 + ((1/1) + 1)))^2})) * v3))
Tempo de execucao: 1230.43 segundos
FIM
