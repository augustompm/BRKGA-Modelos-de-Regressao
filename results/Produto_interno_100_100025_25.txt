Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:37
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [97 85 28 64 44 13 56 37 54 32 ]
BEST SOLUTION! cost=28.9 stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 0 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 1 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 2 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 3 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 4 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 5 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 6 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 7 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 8 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 9 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 10 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 11 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 12 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 13 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 14 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 15 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 16 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 17 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 18 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 19 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 20 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 21 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 22 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 23 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
iteration = 24 	 best= 28.900000	stackLen: 10 => V5  V3  + V2  * empty: 0 0 1 0 1 0 1 0 1 1 
BEST SOLUTION! cost=27.6 stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 27.600000	stackLen: 10 => 1.000000  r V3  * i V0  V2  - * empty: 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [66 49 89 82 20 0 54 79 16 22 ]
BEST SOLUTION! cost=34.9 stackLen: 15 => V4  1.000000  V5  * * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 
iteration = 0 	 best= 34.900000	stackLen: 15 => V4  1.000000  V5  * * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 
iteration = 1 	 best= 34.900000	stackLen: 15 => V4  1.000000  V5  * * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 
iteration = 2 	 best= 34.900000	stackLen: 15 => V4  1.000000  V5  * * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 
iteration = 3 	 best= 34.900000	stackLen: 15 => V4  1.000000  V5  * * empty: 0 1 1 1 1 1 0 1 1 0 0 1 1 0 0 
BEST SOLUTION! cost=33.2 stackLen: 15 => 1.000000  V3  V4  a r V2  - * / empty: 0 0 1 0 0 1 1 0 0 1 1 0 1 0 0 
iteration = 0 	 best= 33.200000	stackLen: 15 => 1.000000  V3  V4  a r V2  - * / empty: 0 0 1 0 0 1 1 0 0 1 1 0 1 0 0 
BEST SOLUTION! cost=33.1 stackLen: 15 => V1  1.000000  * V0  * V5  V4  * - empty: 0 1 0 0 0 0 1 1 1 0 1 1 0 0 0 
iteration = 0 	 best= 33.100000	stackLen: 15 => V1  1.000000  * V0  * V5  V4  * - empty: 0 1 0 0 0 0 1 1 1 0 1 1 0 0 0 
iteration = 1 	 best= 33.100000	stackLen: 15 => V1  1.000000  * V0  * V5  V4  * - empty: 0 1 0 0 0 0 1 1 1 0 1 1 0 0 0 
iteration = 2 	 best= 33.100000	stackLen: 15 => V1  1.000000  * V0  * V5  V4  * - empty: 0 1 0 0 0 0 1 1 1 0 1 1 0 0 0 
iteration = 3 	 best= 33.100000	stackLen: 15 => V1  1.000000  * V0  * V5  V4  * - empty: 0 1 0 0 0 0 1 1 1 0 1 1 0 0 0 
BEST SOLUTION! cost=29.6 stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 29.600000	stackLen: 15 => V5  V4  * V1  a r V1  * + empty: 0 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=26.9 stackLen: 15 => V5  V4  * 1.000000  V1  / V0  V5  - - a r V1  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 26.900000	stackLen: 15 => V5  V4  * 1.000000  V1  / V0  V5  - - a r V1  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 26.900000	stackLen: 15 => V5  V4  * 1.000000  V1  / V0  V5  - - a r V1  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 26.900000	stackLen: 15 => V5  V4  * 1.000000  V1  / V0  V5  - - a r V1  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 26.900000	stackLen: 15 => V5  V4  * 1.000000  V1  / V0  V5  - - a r V1  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 26.900000	stackLen: 15 => V5  V4  * 1.000000  V1  / V0  V5  - - a r V1  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 26.900000	stackLen: 15 => V5  V4  * 1.000000  V1  / V0  V5  - - a r V1  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=25.6 stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 0 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 1 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 2 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 3 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 4 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 5 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 6 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 7 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 8 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 9 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 10 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 11 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 12 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 13 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 14 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 15 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 16 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 17 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 18 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 19 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 20 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 21 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 22 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 23 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 24 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 25 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 26 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 27 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 28 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 29 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 30 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 31 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
iteration = 32 	 best= 25.600000	stackLen: 15 => V3  V1  V4  V2  - - * empty: 0 1 1 1 1 0 0 1 1 0 0 0 1 0 1 
BEST SOLUTION! cost=24.7667 stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 24.766667	stackLen: 15 => V3  1.000000  1.000000  1.000000  + 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=22.3005 stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 22.300456	stackLen: 15 => V3  1.000000  1.000000  e 1.000000  / + V1  V4  V2  - - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.1204 stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 22.120435	stackLen: 15 => V3  V3  + 1.000000  e 1.000000  / * V1  V4  V2  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [72 0 30 63 49 79 37 95 43 45 ]
BEST SOLUTION! cost=38.3062 stackLen: 22 => 1.000000  e V2  V3  V4  1.000000  V1  / - V4  - + - / V5  * empty: 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 38.306174	stackLen: 22 => 1.000000  e V2  V3  V4  1.000000  V1  / - V4  - + - / V5  * empty: 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.3 stackLen: 22 => V2  1.000000  * V3  1.000000  * * empty: 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 30.300000	stackLen: 22 => V2  1.000000  * V3  1.000000  * * empty: 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 30.300000	stackLen: 22 => V2  1.000000  * V3  1.000000  * * empty: 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 30.300000	stackLen: 22 => V2  1.000000  * V3  1.000000  * * empty: 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=16.5 stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 0 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 1 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 2 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 3 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 4 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 5 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 6 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 7 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 8 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 9 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 10 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 11 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 12 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 13 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 14 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 15 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 16 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 17 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 18 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 19 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 20 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 21 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 22 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 23 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 24 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 25 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 26 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 27 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 28 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 29 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 30 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 31 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 32 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 33 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 34 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 35 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
iteration = 36 	 best= 16.500000	stackLen: 22 => V4  V4  V4  - V2  - - V3  * empty: 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 0 0 1 1 0 0 0 
BEST SOLUTION! cost=15.6579 stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.657878	stackLen: 22 => 1.000000  1.000000  1.000000  + e V4  V4  - V4  + / V4  i + V2  - 1.000000  V3  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.5529 stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.552899	stackLen: 22 => 1.000000  1.000000  + 1.000000  r e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.5267 stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.526660	stackLen: 22 => 1.000000  1.000000  e 1.000000  e e + V4  V4  + / V4  i + V2  - 1.000000  V3  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.4935 stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.493455	stackLen: 22 => 1.000000  1.000000  e e + 1.000000  a e + V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.4644 stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.464429	stackLen: 22 => 1.000000  1.000000  e a * 1.000000  a e * V4  V4  + / V4  + V2  - 1.000000  V3  / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.3887 stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.388713	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a e * V3  V4  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=14.5748 stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.574833	stackLen: 22 => 1.000000  1.000000  e a - 1.000000  a r * V3  V1  - / V4  + V2  - 1.000000  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [18 88 38 86 99 95 3 21 35 34 ]
BEST SOLUTION! cost=34.8 stackLen: 30 => V3  1.000000  1.000000  / i V5  / * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 1 
iteration = 0 	 best= 34.800000	stackLen: 30 => V3  1.000000  1.000000  / i V5  / * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 1 
BEST SOLUTION! cost=30.1 stackLen: 30 => 1.000000  V3  a i i V3  a / V2  a 1.000000  * / * 1.000000  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 30.100000	stackLen: 30 => 1.000000  V3  a i i V3  a / V2  a 1.000000  * / * 1.000000  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 30.100000	stackLen: 30 => 1.000000  V3  a i i V3  a / V2  a 1.000000  * / * 1.000000  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 
iteration = 2 	 best= 30.100000	stackLen: 30 => 1.000000  V3  a i i V3  a / V2  a 1.000000  * / * 1.000000  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 
iteration = 3 	 best= 30.100000	stackLen: 30 => 1.000000  V3  a i i V3  a / V2  a 1.000000  * / * 1.000000  * empty: 0 0 0 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 0 0 0 0 
BEST SOLUTION! cost=28.7375 stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 0 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 1 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 2 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 3 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 4 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 5 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 6 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 7 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 8 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 9 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
iteration = 10 	 best= 28.737500	stackLen: 30 => 1.000000  V3  a r V0  V1  i * / V3  + V2  * / empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 0 1 0 0 0 
BEST SOLUTION! cost=26.6792 stackLen: 30 => 1.000000  1.000000  + V3  a r V0  V1  V1  + i * / V3  + V2  * / empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.679167	stackLen: 30 => 1.000000  1.000000  + V3  a r V0  V1  V1  + i * / V3  + V2  * / empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.679167	stackLen: 30 => 1.000000  1.000000  + V3  a r V0  V1  V1  + i * / V3  + V2  * / empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.679167	stackLen: 30 => 1.000000  1.000000  + V3  a r V0  V1  V1  + i * / V3  + V2  * / empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.679167	stackLen: 30 => 1.000000  1.000000  + V3  a r V0  V1  V1  + i * / V3  + V2  * / empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.679167	stackLen: 30 => 1.000000  1.000000  + V3  a r V0  V1  V1  + i * / V3  + V2  * / empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.679167	stackLen: 30 => 1.000000  1.000000  + V3  a r V0  V1  V1  + i * / V3  + V2  * / empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.2442 stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 1 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 2 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 3 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 4 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 5 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 6 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 7 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 8 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 9 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 10 	 best= 25.244210	stackLen: 30 => V0  1.000000  V3  a V0  / / 1.000000  * * r r r r V2  * V2  * empty: 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
BEST SOLUTION! cost=25.1597 stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 0 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 1 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 2 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 3 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 4 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 5 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 6 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 7 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 8 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 9 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 10 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 11 	 best= 25.159652	stackLen: 30 => V0  1.000000  1.000000  * 1.000000  * V3  a V0  / / 1.000000  1.000000  * * * r r r r r V2  V2  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
BEST SOLUTION! cost=24.6828 stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 24.682788	stackLen: 30 => V0  1.000000  1.000000  1.000000  1.000000  * V3  a V0  V5  V0  - + / / 1.000000  * * * * r r r i r V2  * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [91 55 17 52 56 53 58 4 71 32 ]
BEST SOLUTION! cost=36.2556 stackLen: 45 => V1  a 1.000000  V5  V2  V4  + V3  V1  1.000000  * * a r * * * / empty: 0 1 1 1 1 1 0 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 36.255556	stackLen: 45 => V1  a 1.000000  V5  V2  V4  + V3  V1  1.000000  * * a r * * * / empty: 0 1 1 1 1 1 0 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 36.255556	stackLen: 45 => V1  a 1.000000  V5  V2  V4  + V3  V1  1.000000  * * a r * * * / empty: 0 1 1 1 1 1 0 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 
iteration = 2 	 best= 36.255556	stackLen: 45 => V1  a 1.000000  V5  V2  V4  + V3  V1  1.000000  * * a r * * * / empty: 0 1 1 1 1 1 0 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 
iteration = 3 	 best= 36.255556	stackLen: 45 => V1  a 1.000000  V5  V2  V4  + V3  V1  1.000000  * * a r * * * / empty: 0 1 1 1 1 1 0 0 1 0 0 1 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=31.8011 stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 6 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 7 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 8 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 9 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 10 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 11 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 12 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 13 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 14 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 15 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 16 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 17 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 18 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 19 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 20 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 21 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 22 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 23 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 24 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 25 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 26 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 27 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 28 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 29 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 30 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 31 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 32 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 33 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 34 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 35 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 36 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 37 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 38 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 39 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 40 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 41 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 42 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 43 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 44 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 45 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 46 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 47 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 48 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
iteration = 49 	 best= 31.801061	stackLen: 45 => V4  1.000000  r V3  i 1.000000  * a / V5  V0  * V0  * / * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14.5748
stackLen: 45 => V5  1.000000  a r / V5  r i + V5  V0  + * V0  - V1  * V3  V3  / - / * V5  - * / V2  - a V5  a V3  a r / V0  a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 
trueStackSize=21
