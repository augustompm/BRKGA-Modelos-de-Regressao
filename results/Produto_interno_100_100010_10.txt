Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:37
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [54 4 88 47 96 30 11 34 77 7 ]
BEST SOLUTION! cost=30.2 stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 0 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 1 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 2 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 3 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 4 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 5 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 6 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 7 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 8 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 9 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 10 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 11 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 12 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 13 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 14 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 15 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 16 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 17 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 18 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 19 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 20 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 21 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 22 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 23 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 24 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 25 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 26 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 27 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 28 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 29 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 30 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 31 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 32 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 33 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 34 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 35 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 36 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 37 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 38 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 39 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 40 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 41 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 42 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 43 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 44 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 45 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
iteration = 46 	 best= 30.200000	stackLen: 10 => V4  a V2  a - empty: 0 1 0 0 1 1 1 0 1 0 
BEST SOLUTION! cost=28.9 stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 28.900000	stackLen: 10 => V4  V2  + V1  1.000000  V3  / + * empty: 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [4 40 1 85 83 75 31 50 25 73 ]
BEST SOLUTION! cost=28.7 stackLen: 15 => V4  V2  - V0  * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 
iteration = 0 	 best= 28.700000	stackLen: 15 => V4  V2  - V0  * empty: 0 1 1 0 0 1 1 1 1 1 0 1 1 0 1 
BEST SOLUTION! cost=28 stackLen: 15 => V5  V4  + i V2  * empty: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 28.000000	stackLen: 15 => V5  V4  + i V2  * empty: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 28.000000	stackLen: 15 => V5  V4  + i V2  * empty: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 28.000000	stackLen: 15 => V5  V4  + i V2  * empty: 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=20.6 stackLen: 15 => V2  V1  V4  V4  + V0  + - * empty: 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 20.600000	stackLen: 15 => V2  V1  V4  V4  + V0  + - * empty: 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 20.600000	stackLen: 15 => V2  V1  V4  V4  + V0  + - * empty: 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 20.600000	stackLen: 15 => V2  V1  V4  V4  + V0  + - * empty: 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 20.600000	stackLen: 15 => V2  V1  V4  V4  + V0  + - * empty: 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 20.600000	stackLen: 15 => V2  V1  V4  V4  + V0  + - * empty: 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 20.600000	stackLen: 15 => V2  V1  V4  V4  + V0  + - * empty: 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=20.5 stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 0 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 1 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 2 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 3 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 4 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 5 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 6 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 7 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 8 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 9 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 10 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 11 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 12 	 best= 20.500000	stackLen: 15 => V2  V1  V5  V4  + V5  + - * empty: 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 
BEST SOLUTION! cost=18.75 stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 18.750000	stackLen: 15 => V2  V1  V5  V4  1.000000  1.000000  + V4  / V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=16.7 stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.700000	stackLen: 15 => V2  V1  V4  V4  V3  i V4  - V0  + + + - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [11 49 36 28 38 94 86 29 90 22 ]
BEST SOLUTION! cost=39.8 stackLen: 22 => V1  V5  * i 1.000000  V2  V1  * * - empty: 0 0 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 39.800000	stackLen: 22 => V1  V5  * i 1.000000  V2  V1  * * - empty: 0 0 0 0 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=29 stackLen: 22 => V4  1.000000  V5  1.000000  V1  / + * * empty: 0 1 0 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 0 1 0 
iteration = 0 	 best= 29.000000	stackLen: 22 => V4  1.000000  V5  1.000000  V1  / + * * empty: 0 1 0 1 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 0 1 0 
BEST SOLUTION! cost=28.9586 stackLen: 22 => V3  V2  1.000000  1.000000  + 1.000000  / r * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 1 0 0 0 
iteration = 0 	 best= 28.958579	stackLen: 22 => V3  V2  1.000000  1.000000  + 1.000000  / r * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 1 0 0 0 
iteration = 1 	 best= 28.958579	stackLen: 22 => V3  V2  1.000000  1.000000  + 1.000000  / r * * empty: 0 1 0 1 1 1 1 1 1 0 1 1 1 0 0 0 0 1 1 0 0 0 
BEST SOLUTION! cost=27.0957 stackLen: 22 => 1.000000  e 1.000000  * V3  / V0  V2  - * empty: 0 0 0 1 1 0 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 
iteration = 0 	 best= 27.095737	stackLen: 22 => 1.000000  e 1.000000  * V3  / V0  V2  - * empty: 0 0 0 1 1 0 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 
iteration = 1 	 best= 27.095737	stackLen: 22 => 1.000000  e 1.000000  * V3  / V0  V2  - * empty: 0 0 0 1 1 0 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 
iteration = 2 	 best= 27.095737	stackLen: 22 => 1.000000  e 1.000000  * V3  / V0  V2  - * empty: 0 0 0 1 1 0 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 1 
BEST SOLUTION! cost=26.1 stackLen: 22 => 1.000000  1.000000  V0  V5  V5  - - V3  * * / empty: 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 26.100000	stackLen: 22 => 1.000000  1.000000  V0  V5  V5  - - V3  * * / empty: 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 26.100000	stackLen: 22 => 1.000000  1.000000  V0  V5  V5  - - V3  * * / empty: 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 26.100000	stackLen: 22 => 1.000000  1.000000  V0  V5  V5  - - V3  * * / empty: 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=25.7 stackLen: 22 => V3  a r 1.000000  V4  V0  - * * empty: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 0 	 best= 25.700000	stackLen: 22 => V3  a r 1.000000  V4  V0  - * * empty: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 1 	 best= 25.700000	stackLen: 22 => V3  a r 1.000000  V4  V0  - * * empty: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 2 	 best= 25.700000	stackLen: 22 => V3  a r 1.000000  V4  V0  - * * empty: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 
iteration = 3 	 best= 25.700000	stackLen: 22 => V3  a r 1.000000  V4  V0  - * * empty: 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 
BEST SOLUTION! cost=22.7 stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 0 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 1 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 2 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 3 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 4 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 5 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 6 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 7 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 8 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 9 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 10 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 11 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
iteration = 12 	 best= 22.700000	stackLen: 22 => 1.000000  V0  a r * V1  - i V2  * empty: 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 0 
BEST SOLUTION! cost=22.05 stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 22.050000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  / V1  * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=20.4 stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 20.400000	stackLen: 22 => 1.000000  1.000000  / V0  a r * 1.000000  1.000000  + 1.000000  + 1.000000  / V1  V1  + * - i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [68 36 3 80 47 15 8 65 73 37 ]
BEST SOLUTION! cost=25.9 stackLen: 30 => V2  1.000000  * V1  V1  a 1.000000  V1  V2  * / / * * empty: 0 0 1 1 0 1 1 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 25.900000	stackLen: 30 => V2  1.000000  * V1  V1  a 1.000000  V1  V2  * / / * * empty: 0 0 1 1 0 1 1 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 25.900000	stackLen: 30 => V2  1.000000  * V1  V1  a 1.000000  V1  V2  * / / * * empty: 0 0 1 1 0 1 1 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=14.3 stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 1 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 2 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 3 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 4 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 5 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 6 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 7 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 8 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 9 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 10 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 11 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 12 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 13 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 14 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 15 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 16 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 17 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 18 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 19 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 20 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 21 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 22 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 23 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 24 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 25 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 26 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 27 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 28 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 29 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 30 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 31 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 32 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 33 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 34 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 35 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 36 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 37 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 38 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 39 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 40 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 41 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 42 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 43 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 44 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 45 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 46 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 47 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 48 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
iteration = 49 	 best= 14.300000	stackLen: 30 => V5  V5  - V2  + V2  * V3  V4  - V3  V1  + V5  - 1.000000  * * + empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [24 41 4 97 81 26 69 75 11 28 ]
BEST SOLUTION! cost=10057.2 stackLen: 45 => V5  V5  V4  V4  - * V2  V2  * * * empty: 0 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 10057.200000	stackLen: 45 => V5  V5  V4  V4  - * V2  V2  * * * empty: 0 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=38.4534 stackLen: 45 => 1.000000  e r r r a r a V3  a r 1.000000  a i a V4  V2  * * V0  * / * empty: 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 38.453392	stackLen: 45 => 1.000000  e r r r a r a V3  a r 1.000000  a i a V4  V2  * * V0  * / * empty: 0 1 0 0 1 1 0 0 1 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 1 0 0 0 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=38.3 stackLen: 45 => V5  1.000000  1.000000  V2  1.000000  1.000000  i 1.000000  i i * / * * / * empty: 0 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 38.300000	stackLen: 45 => V5  1.000000  1.000000  V2  1.000000  1.000000  i 1.000000  i i * / * * / * empty: 0 1 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=33.772 stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 0 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 1 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 2 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 3 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 4 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 5 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 6 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 7 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 8 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 9 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 10 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 11 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
iteration = 12 	 best= 33.771999	stackLen: 45 => V0  V4  V1  + a V0  a a r r V0  * / 1.000000  V3  * * * empty: 0 1 0 1 0 0 1 1 1 0 1 1 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 1 0 1 
BEST SOLUTION! cost=30.9379 stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 30.937910	stackLen: 45 => V0  V0  + V4  V1  + a V1  a a r r V0  * / 1.000000  V3  1.000000  1.000000  / * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=29.8171 stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 29.817051	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  1.000000  V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=24.8623 stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 24.862279	stackLen: 45 => V0  V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  / V3  V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=24.3269 stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 24.326889	stackLen: 45 => V0  V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  / V3  V3  + V3  + 1.000000  * 1.000000  1.000000  + V3  / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=23.925 stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 23.925009	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * 1.000000  V1  * + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=23.2902 stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 23.290184	stackLen: 45 => V0  V0  + V0  + V0  + V4  V1  V1  + + a V1  a a r r V0  * / 1.000000  1.000000  + 1.000000  + 1.000000  / V3  V3  + V3  V3  1.000000  * V5  V1  - + + + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14.3
stackLen: 45 => V3  V1  * V3  + V2  + V2  V5  / V4  V2  * V3  / 1.000000  + / / V0  V5  r e - e V4  V2  V3  V4  empty: 0 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 0 0 1 0 
trueStackSize=19
printSolution2: v4
Tempo de execucao: 966.064 segundos
FIM
