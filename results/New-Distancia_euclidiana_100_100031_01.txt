Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 100 1
1.00	8.00	-7.00	4.00	13.04
9.00	7.00	-1.00	-1.00	2.00
10.00	6.00	-2.00	-10.00	8.94
8.00	-5.00	7.00	7.00	13.00
-1.00	10.00	-1.00	-9.00	13.60
-9.00	0.00	5.00	-6.00	14.21
8.00	-4.00	-1.00	-1.00	12.00
-5.00	-6.00	3.00	5.00	2.24
-3.00	0.00	-9.00	-1.00	8.54
10.00	-3.00	3.00	5.00	13.15
4.00	0.00	-7.00	-8.00	4.12
3.00	1.00	-1.00	9.00	10.20
-1.00	4.00	-4.00	5.00	10.30
-9.00	-2.00	-3.00	-6.00	7.62
-2.00	5.00	3.00	-8.00	13.04
-10.00	-1.00	2.00	1.00	9.06
8.00	10.00	-8.00	-6.00	2.83
-1.00	7.00	-6.00	-9.00	8.54
4.00	10.00	-7.00	5.00	13.42
-9.00	6.00	-1.00	-8.00	16.55
-9.00	0.00	5.00	-7.00	15.00
-2.00	6.00	5.00	-9.00	16.12
7.00	5.00	3.00	1.00	2.83
9.00	7.00	-4.00	-5.00	2.24
4.00	3.00	-3.00	8.00	11.05
-1.00	4.00	-4.00	-2.00	5.39
-9.00	-9.00	8.00	1.00	7.00
-1.00	1.00	1.00	-1.00	2.83
-4.00	-6.00	5.00	2.00	3.61
-7.00	1.00	5.00	-5.00	12.81
1.00	-8.00	-2.00	4.00	10.82
-10.00	-3.00	5.00	-6.00	13.04
1.00	-9.00	3.00	10.00	12.21
-4.00	0.00	2.00	-4.00	7.21
0.00	10.00	-1.00	10.00	14.87
4.00	5.00	-9.00	-1.00	8.06
3.00	-6.00	10.00	-9.00	21.02
2.00	-4.00	5.00	5.00	6.00
4.00	5.00	-9.00	7.00	16.03
2.00	1.00	-5.00	-2.00	3.16
9.00	8.00	6.00	1.00	5.10
10.00	-6.00	4.00	-9.00	20.62
-8.00	6.00	8.00	3.00	14.87
7.00	-6.00	-1.00	-9.00	15.26
1.00	-9.00	-7.00	3.00	14.14
-9.00	1.00	-3.00	0.00	10.44
5.00	4.00	5.00	-1.00	6.08
9.00	-1.00	1.00	-5.00	11.66
-7.00	-3.00	2.00	-7.00	9.85
-1.00	6.00	1.00	0.00	7.07
-10.00	0.00	-4.00	3.00	12.21
2.00	-10.00	-4.00	7.00	16.28
9.00	0.00	9.00	-2.00	14.21
-6.00	2.00	2.00	6.00	8.94
3.00	-1.00	1.00	10.00	9.85
7.00	9.00	-2.00	-4.00	2.83
5.00	-1.00	-8.00	10.00	18.97
-7.00	3.00	-10.00	-9.00	10.05
-7.00	1.00	0.00	-9.00	12.04
-5.00	-10.00	-4.00	5.00	10.30
-5.00	1.00	-8.00	-8.00	6.00
9.00	2.00	1.00	2.00	7.07
-2.00	1.00	-7.00	4.00	11.40
7.00	1.00	-4.00	-10.00	8.49
4.00	-8.00	6.00	9.00	12.37
2.00	0.00	4.00	0.00	4.47
-4.00	6.00	-8.00	-4.00	10.77
8.00	7.00	-2.00	-6.00	4.12
-3.00	-9.00	3.00	-8.00	12.53
1.00	-2.00	7.00	-4.00	11.40
-3.00	-4.00	6.00	0.00	6.08
-2.00	-6.00	3.00	1.00	4.47
-3.00	-3.00	7.00	3.00	4.00
5.00	-8.00	10.00	0.00	16.40
10.00	-4.00	-10.00	-1.00	16.64
-9.00	-5.00	-7.00	6.00	13.60
7.00	-5.00	-6.00	-4.00	12.17
-3.00	4.00	2.00	9.00	9.90
7.00	3.00	8.00	-1.00	9.85
8.00	1.00	-5.00	6.00	13.04
0.00	-10.00	-4.00	6.00	14.14
8.00	10.00	-1.00	-6.00	5.39
3.00	2.00	-4.00	-5.00	1.41
8.00	-4.00	10.00	4.00	13.42
-4.00	1.00	0.00	2.00	5.39
-2.00	4.00	0.00	2.00	6.32
9.00	0.00	2.00	8.00	10.82
8.00	-5.00	8.00	-4.00	17.69
-7.00	9.00	0.00	-3.00	16.28
0.00	0.00	-10.00	-7.00	3.00
9.00	-3.00	2.00	-1.00	12.37
-9.00	6.00	-7.00	7.00	20.52
2.00	-5.00	7.00	4.00	7.62
3.00	7.00	8.00	8.00	4.00
5.00	-6.00	-2.00	4.00	12.53
-6.00	4.00	-5.00	-9.00	10.77
5.00	5.00	8.00	-8.00	16.00
-7.00	8.00	-10.00	8.00	23.43
4.00	-2.00	6.00	-3.00	10.82
6.00	1.00	4.00	-8.00	13.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=100
run_brkga:
best=inf
Selecionados os seguintes indices: 71 38 28 56 98 35 69 30 53 80 
BEST SOLUTION! cost=4.06156 stackLen: 30 => 1.000000  r 1.000000  1.000000  + a e 1.000000  + r r r V2  a r V2  a / * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 4.061564	stackLen: 30 => 1.000000  r 1.000000  1.000000  + a e 1.000000  + r r r V2  a r V2  a / * / empty: 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=2.02663 stackLen: 30 => 1.000000  1.000000  V2  V3  - a * r / empty: 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 1 0 0 1 1 0 1 
iteration = 0 	 best= 2.026630	stackLen: 30 => 1.000000  1.000000  V2  V3  - a * r / empty: 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 1 0 0 1 1 0 1 
iteration = 1 	 best= 2.026630	stackLen: 30 => 1.000000  1.000000  V2  V3  - a * r / empty: 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 1 0 0 1 1 0 1 
iteration = 2 	 best= 2.026630	stackLen: 30 => 1.000000  1.000000  V2  V3  - a * r / empty: 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 1 1 1 1 0 0 1 1 0 1 
BEST SOLUTION! cost=1.47384 stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 1.473841	stackLen: 30 => 1.000000  1.000000  * 1.000000  V3  V3  * 1.000000  V2  V3  - a / + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
Selecionados os seguintes indices: 15 85 70 34 25 68 84 10 17 73 
BEST SOLUTION! cost=6.46094 stackLen: 30 => 1.000000  i V1  * 1.000000  V0  V3  + / + V1  - i empty: 0 1 0 1 1 1 0 0 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 1 
iteration = 0 	 best= 6.460939	stackLen: 30 => 1.000000  i V1  * 1.000000  V0  V3  + / + V1  - i empty: 0 1 0 1 1 1 0 0 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 1 1 0 0 0 1 1 
BEST SOLUTION! cost=3.14211 stackLen: 30 => 1.000000  1.000000  V0  V1  a r i - / / empty: 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 1 
iteration = 0 	 best= 3.142110	stackLen: 30 => 1.000000  1.000000  V0  V1  a r i - / / empty: 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 1 
iteration = 1 	 best= 3.142110	stackLen: 30 => 1.000000  1.000000  V0  V1  a r i - / / empty: 0 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 1 1 
BEST SOLUTION! cost=2.57324 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * 1.000000  1.000000  V0  V1  V1  V1  + + a r - / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
iteration = 0 	 best= 2.573236	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  * 1.000000  1.000000  V0  V1  V1  V1  + + a r - / / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
BEST SOLUTION! cost=2.16974 stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 6 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 7 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 8 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
iteration = 9 	 best= 2.169739	stackLen: 30 => 1.000000  1.000000  V0  V1  1.000000  * - a r * 1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
Selecionados os seguintes indices: 9 5 76 10 36 64 34 16 0 82 
BEST SOLUTION! cost=3.01945 stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 0 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 1 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 2 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 3 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 4 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 5 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 6 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 7 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 8 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
iteration = 9 	 best= 3.019447	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * 1.000000  * r V1  - a r * / empty: 0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 1 1 1 1 1 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
Selecionados os seguintes indices: 13 8 17 60 41 62 34 35 71 48 
BEST SOLUTION! cost=8.74553 stackLen: 30 => V3  a V3  V2  + a V1  V3  * V0  1.000000  V3  V3  1.000000  * * * * * / / empty: 0 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 8.745530	stackLen: 30 => V3  a V3  V2  + a V1  V3  * V0  1.000000  V3  V3  1.000000  * * * * * / / empty: 0 1 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=3.27994 stackLen: 30 => 1.000000  1.000000  V2  a V3  a + r / a / r empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 3.279940	stackLen: 30 => 1.000000  1.000000  V2  a V3  a + r / a / r empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 1 
iteration = 1 	 best= 3.279940	stackLen: 30 => 1.000000  1.000000  V2  a V3  a + r / a / r empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=1.32282 stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 8 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 9 	 best= 1.322819	stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
Selecionados os seguintes indices: 4 56 3 37 74 71 53 65 52 24 
BEST SOLUTION! cost=7.69124 stackLen: 30 => V0  V3  - V3  - a a r V0  V2  i a * / empty: 0 0 0 1 1 1 1 0 0 0 1 1 1 0 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 0 
iteration = 0 	 best= 7.691242	stackLen: 30 => V0  V3  - V3  - a a r V0  V2  i a * / empty: 0 0 0 1 1 1 1 0 0 0 1 1 1 0 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 0 
BEST SOLUTION! cost=3.49753 stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  e - * empty: 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 0 1 
iteration = 0 	 best= 3.497530	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  e - * empty: 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 0 1 
iteration = 1 	 best= 3.497530	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  e - * empty: 0 1 0 1 1 0 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 0 1 
BEST SOLUTION! cost=3.4105 stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 3.410498	stackLen: 30 => V0  a r 1.000000  * 1.000000  1.000000  1.000000  + 1.000000  / e * * empty: 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=1.32282
stackLen: 30 => 1.000000  1.000000  - 1.000000  + 1.000000  1.000000  / 1.000000  V3  a V2  V3  - a + r * a / r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
trueStackSize=22
printSolution2: (\sqrt{({(\sqrt{({(v3 - v2)^2} + {v3^2})} * 1)^2}/(1/1))}/(1 + (1 - 1)))
Tempo de execucao: 174.094 segundos
FIM
