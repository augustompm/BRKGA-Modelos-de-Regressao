|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 20 1
-10.00	8.00	-9.00	9.00	25.46
-1.00	-5.00	-1.00	4.00	6.40
-3.00	-7.00	4.00	5.00	4.12
8.00	-5.00	-5.00	4.00	15.81
3.00	-5.00	1.00	-8.00	12.04
-5.00	-7.00	10.00	0.00	10.20
1.00	10.00	-10.00	1.00	14.21
6.00	-3.00	4.00	-3.00	11.40
-7.00	5.00	-3.00	-6.00	12.37
0.00	-6.00	-4.00	-1.00	6.71
10.00	6.00	-9.00	0.00	9.85
-7.00	5.00	-7.00	-10.00	12.37
4.00	-1.00	-5.00	-4.00	5.10
8.00	3.00	0.00	7.00	8.60
8.00	-1.00	3.00	0.00	9.49
-5.00	7.00	4.00	4.00	12.00
-6.00	-7.00	-2.00	1.00	3.16
1.00	0.00	-5.00	-5.00	1.00
3.00	-1.00	-3.00	-2.00	4.12
-1.00	5.00	6.00	-5.00	12.53
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=20
run_brkga:
best=inf
BEST SOLUTION! cost=9.51245 stackLen: 30 => 1.000000  1.000000  V0  * * empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 
restart = 0 	 best= 9.512451	stackLen: 30 => 1.000000  1.000000  V0  * * empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 
restart = 1 	 best= 9.512451	stackLen: 30 => 1.000000  1.000000  V0  * * empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=8.69734 stackLen: 30 => 1.000000  V2  V0  V0  V2  1.000000  * - V2  - - - 1.000000  * / empty: 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 1 
restart = 0 	 best= 8.697337	stackLen: 30 => 1.000000  V2  V0  V0  V2  1.000000  * - V2  - - - 1.000000  * / empty: 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 1 
restart = 1 	 best= 8.697337	stackLen: 30 => 1.000000  V2  V0  V0  V2  1.000000  * - V2  - - - 1.000000  * / empty: 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 1 
restart = 2 	 best= 8.697337	stackLen: 30 => 1.000000  V2  V0  V0  V2  1.000000  * - V2  - - - 1.000000  * / empty: 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 1 
restart = 3 	 best= 8.697337	stackLen: 30 => 1.000000  V2  V0  V0  V2  1.000000  * - V2  - - - 1.000000  * / empty: 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 1 1 
BEST SOLUTION! cost=5.29622 stackLen: 30 => 1.000000  1.000000  1.000000  V0  a r 1.000000  a * * * * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 1 
restart = 0 	 best= 5.296224	stackLen: 30 => 1.000000  1.000000  1.000000  V0  a r 1.000000  a * * * * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 1 
restart = 1 	 best= 5.296224	stackLen: 30 => 1.000000  1.000000  1.000000  V0  a r 1.000000  a * * * * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 1 
restart = 2 	 best= 5.296224	stackLen: 30 => 1.000000  1.000000  1.000000  V0  a r 1.000000  a * * * * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=1.77578 stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 0 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 1 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 2 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 3 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 4 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 5 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 6 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 7 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 8 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 9 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 10 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 11 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 12 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
restart = 13 	 best= 1.775780	stackLen: 30 => 1.000000  i V2  a V0  V1  - a + r * empty: 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  i a V2  V3  V2  V2  - + - a V0  V1  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  i a V2  V3  V2  V2  - + - a V0  V1  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  i a V2  V3  V2  V2  - + - a V0  V1  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
trueStackSize=18
printSolution2: (\sqrt{({(v1 - v0)^2} + {(((v2 - v2) + v3) - v2)^2})} * {(1)^2})
Tempo de execucao: 63.8488 segundos
FIM
