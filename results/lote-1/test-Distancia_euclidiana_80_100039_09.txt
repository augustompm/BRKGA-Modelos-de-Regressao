Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 80 1
0.00	4.00	-1.00	10.00	11.70
-6.00	1.00	0.00	3.00	7.62
-5.00	4.00	6.00	3.00	9.49
0.00	-1.00	-5.00	5.00	10.05
6.00	-1.00	4.00	-4.00	10.63
-8.00	3.00	-7.00	1.00	13.60
5.00	1.00	8.00	10.00	4.47
-10.00	0.00	1.00	-9.00	14.14
-6.00	7.00	3.00	6.00	13.34
6.00	-4.00	3.00	7.00	10.77
6.00	2.00	-10.00	7.00	17.46
-5.00	4.00	-5.00	-8.00	9.49
2.00	3.00	-7.00	-1.00	6.08
-9.00	-5.00	0.00	-6.00	7.21
10.00	0.00	-10.00	1.00	14.87
-6.00	9.00	-10.00	6.00	21.93
-7.00	-4.00	3.00	0.00	4.24
7.00	1.00	-7.00	-5.00	6.32
-7.00	-6.00	8.00	-2.00	10.05
2.00	-2.00	-6.00	-10.00	5.66
-8.00	-9.00	4.00	0.00	4.12
-3.00	-2.00	-7.00	-2.00	5.10
-6.00	1.00	7.00	-6.00	14.76
3.00	-8.00	-3.00	-1.00	11.18
7.00	-10.00	6.00	-4.00	19.72
-5.00	2.00	-2.00	-9.00	9.90
5.00	7.00	-9.00	2.00	11.18
7.00	-1.00	4.00	3.00	8.06
3.00	-3.00	5.00	-2.00	9.22
-5.00	2.00	6.00	-1.00	9.90
-10.00	2.00	-3.00	-6.00	12.37
-1.00	-3.00	-1.00	-4.00	3.61
-6.00	2.00	3.00	-4.00	10.63
1.00	5.00	-6.00	-1.00	6.40
4.00	7.00	-9.00	10.00	19.24
-8.00	-1.00	7.00	10.00	7.62
5.00	-10.00	-9.00	0.00	17.49
5.00	-1.00	-2.00	-10.00	10.00
10.00	3.00	8.00	-7.00	16.55
1.00	-8.00	-2.00	10.00	15.00
-10.00	8.00	-9.00	9.00	25.46
-1.00	-5.00	-1.00	4.00	6.40
-3.00	-7.00	4.00	5.00	4.12
8.00	-5.00	-5.00	4.00	15.81
3.00	-5.00	1.00	-8.00	12.04
-5.00	-7.00	10.00	0.00	10.20
1.00	10.00	-10.00	1.00	14.21
6.00	-3.00	4.00	-3.00	11.40
-7.00	5.00	-3.00	-6.00	12.37
0.00	-6.00	-4.00	-1.00	6.71
10.00	6.00	-9.00	0.00	9.85
-7.00	5.00	-7.00	-10.00	12.37
4.00	-1.00	-5.00	-4.00	5.10
8.00	3.00	0.00	7.00	8.60
8.00	-1.00	3.00	0.00	9.49
-5.00	7.00	4.00	4.00	12.00
-6.00	-7.00	-2.00	1.00	3.16
1.00	0.00	-5.00	-5.00	1.00
3.00	-1.00	-3.00	-2.00	4.12
-1.00	5.00	6.00	-5.00	12.53
2.00	-6.00	3.00	8.00	9.43
-3.00	10.00	-10.00	7.00	21.40
-1.00	4.00	10.00	10.00	5.00
0.00	4.00	-1.00	-1.00	4.00
10.00	-6.00	6.00	6.00	16.00
-4.00	-2.00	3.00	-5.00	8.25
-2.00	-4.00	2.00	-2.00	4.47
-4.00	7.00	-5.00	5.00	14.87
2.00	-10.00	4.00	9.00	13.00
4.00	0.00	8.00	10.00	4.47
1.00	9.00	10.00	-9.00	20.62
-8.00	2.00	3.00	-1.00	10.77
1.00	-7.00	-8.00	1.00	12.04
8.00	8.00	4.00	-4.00	8.00
5.00	-7.00	2.00	-3.00	13.00
-10.00	-9.00	-9.00	-3.00	6.08
5.00	-3.00	-6.00	-7.00	8.06
-3.00	1.00	-4.00	-9.00	6.40
0.00	-3.00	7.00	1.00	6.71
0.00	-4.00	4.00	-2.00	7.21
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=80
run_brkga:
best=inf
BEST SOLUTION! cost=9.88652 stackLen: 30 => V2  1.000000  * V3  1.000000  1.000000  1.000000  / * * - empty: 0 1 0 1 0 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 1 
restart = 0 	 best= 9.886518	stackLen: 30 => V2  1.000000  * V3  1.000000  1.000000  1.000000  / * * - empty: 0 1 0 1 0 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=4.7242 stackLen: 30 => 1.000000  i 1.000000  e r V2  a r * * empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 1 
restart = 0 	 best= 4.724196	stackLen: 30 => 1.000000  i 1.000000  e r V2  a r * * empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 1 
restart = 1 	 best= 4.724196	stackLen: 30 => 1.000000  i 1.000000  e r V2  a r * * empty: 0 1 1 1 1 0 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=3.16839 stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 0 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 1 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 2 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 3 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 4 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 5 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 6 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 7 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 8 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 9 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
restart = 10 	 best= 3.168392	stackLen: 30 => 1.000000  1.000000  e r V2  V3  - a * r * empty: 0 1 1 0 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 1 
BEST SOLUTION! cost=2.92685 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 0 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 1 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 2 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 3 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 4 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 5 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 6 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 7 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 8 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 9 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 10 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
restart = 11 	 best= 2.926851	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V2  / * * i a i V2  V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=2.79237 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 0 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 1 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 2 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 3 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 4 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 5 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 6 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 7 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 8 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 9 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
restart = 10 	 best= 2.792366	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  - 1.000000  + V1  * * * i a i V2  V2  - V2  + V3  - a + r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * 1.000000  i V1  V0  - * * i i a / V2  V2  - V2  + V3  - a + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * 1.000000  i V1  V0  - * * i i a / V2  V2  - V2  + V3  - a + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  1.000000  * 1.000000  i V1  V0  - * * i i a / V2  V2  - V2  + V3  - a + r * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((\sqrt{({(v3 - (v2 + (v2 - v2)))^2} + ({(((((v0 - v1) * (1)) * (1 * 1))))^2}/1))} * 1) * 1)
Tempo de execucao: 131.744 segundos
FIM
