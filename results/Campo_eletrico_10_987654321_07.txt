|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'C'
var unit: 'm'
out unit: 'N / C'
has_solution='HAS_SOLUTION' => ' c2 c0 c1 v1 a * * * v0 c3 * /'
SOLUTION IS: ' c2 c0 c1 v1 a * * * v0 c3 * /'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
const unit: 'C^2 * 1 / N * 1 / m * 1 / m'
const unit: '*'
const unit: '*'
3.5) SETUP UNITS
UNITS: C ; m ; N ; 
4) FINISHED READING PROBLEM
2 10 4
4884020000000000000.00	38.00	30399099999999998986027008.00
1666610000000000000.00	60.00	4160860000000000068157440.00
8647310000000000000.00	14.00	396530000000000017393778688.00
4899350000000000000.00	95.00	4879130000000000332922880.00
9543190000000000000.00	51.00	32976399999999998150311936.00
2271070000000000000.00	74.00	3727499999999999820693504.00
5560460000000000000.00	37.00	36505500000000001125122048.00
7380450000000000000.00	5.00	2653340000000000098087993344.00
5858950000000000000.00	89.00	6647989999999999981649920.00
6727310000000000000.00	7.00	1233949999999999945931227136.00
3.1416	3.1416
0.0885	0.0885
4.0000	4.0000
10000000000.0000	10000000000.0000
isSquared? 0
varUnits: C m 
outUnit: N / C
training=10
run_brkga:
best=inf
BEST SOLUTION! cost=2.33427e+24 stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 0 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 1 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 2 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 3 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 4 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 5 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 6 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 7 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 8 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 9 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
restart = 10 	 best= 2334266958705788696133632.000000	stackLen: 30 => 10000000000.000000  4.000000  0.088540  r V1  * r a 3.141593  3.141593  a / r r V1  * 0.088540  / / * * V0  * empty: 0 1 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=10000 stackLen: 30 => 10000000000.000000  4.000000  V1  0.088540  * i V1  V0  * / r a 4.000000  3.141593  * V1  a 4.000000  a r V1  * V1  / / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
COST2 IS BETTER!!!0
restart = 0 	 best= 0.000000	stackLen: 30 => 10000000000.000000  4.000000  V1  0.088540  * i V1  V0  * / r a 4.000000  3.141593  * V1  a 4.000000  a r V1  * V1  / / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 10000000000.000000  4.000000  V1  0.088540  * i V1  V0  * / r a 4.000000  3.141593  * V1  a 4.000000  a r V1  * V1  / / / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((((v1/(v1 * \sqrt{{4^2}}))/{v1^2})/(3.14159 * 4)) * {\sqrt{((v0 * v1)/((0.08854 * v1)))}^2}) * 4) * 1e+10)
Tempo de execucao: 132.624 segundos
FIM
