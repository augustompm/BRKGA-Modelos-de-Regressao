Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [46 64 68 48 97 24 28 57 92 98 ]
BEST SOLUTION! cost=36.6 stackLen: 30 => V3  V3  V0  + - V1  V3  + V1  - 1.000000  V3  / V1  i - - * empty: 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 0 0 
iteration = 0 	 best= 36.600000	stackLen: 30 => V3  V3  V0  + - V1  V3  + V1  - 1.000000  V3  / V1  i - - * empty: 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 0 0 
iteration = 1 	 best= 36.600000	stackLen: 30 => V3  V3  V0  + - V1  V3  + V1  - 1.000000  V3  / V1  i - - * empty: 0 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 1 0 1 0 0 0 0 1 0 1 0 0 0 
BEST SOLUTION! cost=32.3574 stackLen: 30 => 1.000000  V1  V0  V0  a V4  V2  - a + r V0  / * * * empty: 0 1 0 0 1 1 1 0 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 32.357376	stackLen: 30 => 1.000000  V1  V0  V0  a V4  V2  - a + r V0  / * * * empty: 0 1 0 0 1 1 1 0 1 1 0 1 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=18.4 stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 6 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 7 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 8 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 9 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 10 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 11 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 12 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 13 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 14 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 15 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 16 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 17 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 18 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 19 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 20 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 21 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 22 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 23 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 24 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 25 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 26 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 27 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 28 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 29 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 30 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 31 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 32 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 33 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 34 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 35 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 36 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 37 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 38 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 39 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
iteration = 40 	 best= 18.400000	stackLen: 30 => 1.000000  V4  V1  + 1.000000  V2  * V0  - * * empty: 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=15.2 stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 15.200000	stackLen: 30 => 1.000000  1.000000  * V4  V4  + V0  + V1  + 1.000000  1.000000  / V2  * V0  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.3 stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 16 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 17 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 18 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 19 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 20 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 21 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 22 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 23 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 24 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 25 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 26 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 27 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 28 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 29 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 30 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 31 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 32 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 33 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 34 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 35 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 36 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 37 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 38 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 39 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 40 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 41 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 42 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 43 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 44 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 45 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 46 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 47 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 48 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 49 	 best= 14.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + * V4  V4  + V4  + V0  + V1  V1  + + 1.000000  1.000000  / V2  * V0  - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [26 93 19 86 2 71 35 89 14 58 ]
BEST SOLUTION! cost=37.3402 stackLen: 30 => 1.000000  e V0  V3  + i i 1.000000  * a * r 1.000000  * V0  * empty: 0 1 1 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 37.340243	stackLen: 30 => 1.000000  e V0  V3  + i i 1.000000  * a * r 1.000000  * V0  * empty: 0 1 1 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 1 1 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=26.5398 stackLen: 30 => V2  V1  - 1.000000  e 1.000000  1.000000  1.000000  V5  V4  - * / / / * empty: 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 26.539802	stackLen: 30 => V2  V1  - 1.000000  e 1.000000  1.000000  1.000000  V5  V4  - * / / / * empty: 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 26.539802	stackLen: 30 => V2  V1  - 1.000000  e 1.000000  1.000000  1.000000  V5  V4  - * / / / * empty: 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 26.539802	stackLen: 30 => V2  V1  - 1.000000  e 1.000000  1.000000  1.000000  V5  V4  - * / / / * empty: 0 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=23.9 stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 0 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 1 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 2 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 3 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 4 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 5 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 6 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 7 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 8 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 9 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 10 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
iteration = 11 	 best= 23.900000	stackLen: 30 => V5  V1  V3  - 1.000000  1.000000  1.000000  / / * * empty: 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 
BEST SOLUTION! cost=22.45 stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 22.450000	stackLen: 30 => V5  V1  V3  V3  + V4  + - 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.75 stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 18.750000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 18.750000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 18.750000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 18.750000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 18.750000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 18.750000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=16.3 stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 16.300000	stackLen: 30 => V5  V1  V3  V3  V4  V4  - V3  V3  + + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  a / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.55 stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.550000	stackLen: 30 => V5  V1  V3  V3  V0  V4  - V4  V3  - + + - V2  + - 1.000000  1.000000  1.000000  + / 1.000000  1.000000  * 1.000000  / / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [57 80 88 54 38 18 79 35 68 28 ]
BEST SOLUTION! cost=39.4271 stackLen: 30 => V0  V4  V1  V2  V0  V3  - - a V5  a r 1.000000  1.000000  * V5  / - / * * * empty: 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 39.427091	stackLen: 30 => V0  V4  V1  V2  V0  V3  - - a V5  a r 1.000000  1.000000  * V5  / - / * * * empty: 0 0 0 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=34.8515 stackLen: 30 => 1.000000  a 1.000000  + r V1  V4  1.000000  V0  / + * / empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 34.851472	stackLen: 30 => 1.000000  a 1.000000  + r V1  V4  1.000000  V0  / + * / empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 34.851472	stackLen: 30 => 1.000000  a 1.000000  + r V1  V4  1.000000  V0  / + * / empty: 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=15.7 stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 0 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 1 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 2 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 3 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 4 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 5 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 6 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 7 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 8 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 9 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 10 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 11 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 12 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 13 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 14 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 15 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 16 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 17 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 18 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 19 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 20 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 21 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 22 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 23 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 24 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 25 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 26 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 27 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 28 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 29 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 30 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 31 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 32 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 33 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 34 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 35 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 36 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 37 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 38 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 39 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 40 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 41 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 42 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 43 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 44 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 45 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 46 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 47 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 48 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
iteration = 49 	 best= 15.700000	stackLen: 30 => V4  V5  * V0  1.000000  V1  / * + empty: 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [17 35 76 60 58 93 30 70 8 78 ]
BEST SOLUTION! cost=35.5 stackLen: 30 => 1.000000  V1  1.000000  V4  * + V2  * / empty: 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 
iteration = 0 	 best= 35.500000	stackLen: 30 => 1.000000  V1  1.000000  V4  * + V2  * / empty: 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 0 0 1 
BEST SOLUTION! cost=28.8 stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.800000	stackLen: 30 => 1.000000  V0  / a r V3  1.000000  1.000000  V5  1.000000  * / * * / V0  * empty: 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=27.9961 stackLen: 30 => 1.000000  V0  V0  + / a V5  V1  1.000000  r * 1.000000  V5  1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 27.996111	stackLen: 30 => 1.000000  V0  V0  + / a V5  V1  1.000000  r * 1.000000  V5  1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 27.996111	stackLen: 30 => 1.000000  V0  V0  + / a V5  V1  1.000000  r * 1.000000  V5  1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 27.996111	stackLen: 30 => 1.000000  V0  V0  + / a V5  V1  1.000000  r * 1.000000  V5  1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 27.996111	stackLen: 30 => 1.000000  V0  V0  + / a V5  V1  1.000000  r * 1.000000  V5  1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 27.996111	stackLen: 30 => 1.000000  V0  V0  + / a V5  V1  1.000000  r * 1.000000  V5  1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 27.996111	stackLen: 30 => 1.000000  V0  V0  + / a V5  V1  1.000000  r * 1.000000  V5  1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=26.8632 stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 26.863210	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V5  V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=25.6299 stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 25.629877	stackLen: 30 => 1.000000  V0  V0  V0  + + / a V5  V1  1.000000  r * 1.000000  V0  V5  - V5  + 1.000000  1.000000  / * / * * / V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [87 56 15 21 33 28 19 2 48 50 ]
BEST SOLUTION! cost=23.6 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * / + V5  * V4  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 
iteration = 0 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * / + V5  * V4  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 
iteration = 1 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  * / + V5  * V4  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 0 
BEST SOLUTION! cost=21.9213 stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 1 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 2 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 3 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 4 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 5 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 6 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 7 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 8 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 9 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 10 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 11 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 12 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 13 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 14 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 15 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
iteration = 16 	 best= 21.921278	stackLen: 30 => V4  V5  V5  1.000000  1.000000  e / * - * empty: 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=21.8469 stackLen: 30 => V4  V5  V5  - V5  1.000000  1.000000  1.000000  1.000000  + + r / * - * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.846926	stackLen: 30 => V4  V5  V5  - V5  1.000000  1.000000  1.000000  1.000000  + + r / * - * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.846926	stackLen: 30 => V4  V5  V5  - V5  1.000000  1.000000  1.000000  1.000000  + + r / * - * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.846926	stackLen: 30 => V4  V5  V5  - V5  1.000000  1.000000  1.000000  1.000000  + + r / * - * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=14.1 stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 2 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 3 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 4 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 5 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 6 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 7 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 8 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 9 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 10 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 11 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 12 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 13 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 14 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
iteration = 15 	 best= 14.100000	stackLen: 30 => 1.000000  V2  * V1  V4  + * V4  V5  V5  + * - empty: 0 1 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=12.9 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 12.900000	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=12.6333 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  V4  + + V1  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  V4  + + V1  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  V4  + + V1  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  V4  + + V1  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  V4  + + V1  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  V4  + + V1  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 12.633333	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V2  / V1  V1  + V4  V4  + + V1  + * V4  V5  1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=11.5667 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.566667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=11.3529 stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 11.352921	stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=11.3529
stackLen: 30 => 1.000000  1.000000  / 1.000000  e 1.000000  1.000000  * * V5  / V1  V1  + V4  V4  + + V0  + * V4  V5  V5  + 1.000000  * * - / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: ((((1 * (v5 + v5)) * v4) - ((v0 + ((v4 + v4) + (v1 + v1))) * (v5/((1 * 1) * \exp(1)))))/(1/1))
Tempo de execucao: 1207.7 segundos
FIM
