Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [21 31 69 93 47 72 91 50 49 10 ]
BEST SOLUTION! cost=37.3597 stackLen: 30 => 1.000000  V5  / V1  a V2  i a / e V3  a V3  V3  * V5  i / * / * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 37.359701	stackLen: 30 => 1.000000  V5  / V1  a V2  i a / e V3  a V3  V3  * V5  i / * / * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 1 0 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.275 stackLen: 30 => V1  V5  a V1  a V3  * a V1  / * V2  * V1  * V0  * V3  * * empty: 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 26.274952	stackLen: 30 => V1  V5  a V1  a V3  * a V1  / * V2  * V1  * V0  * V3  * * empty: 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 26.274952	stackLen: 30 => V1  V5  a V1  a V3  * a V1  / * V2  * V1  * V0  * V3  * * empty: 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 
iteration = 2 	 best= 26.274952	stackLen: 30 => V1  V5  a V1  a V3  * a V1  / * V2  * V1  * V0  * V3  * * empty: 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 
iteration = 3 	 best= 26.274952	stackLen: 30 => V1  V5  a V1  a V3  * a V1  / * V2  * V1  * V0  * V3  * * empty: 0 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=23.9 stackLen: 30 => V0  V2  * 1.000000  V3  * a r V0  V1  V4  + + * - empty: 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 
iteration = 0 	 best= 23.900000	stackLen: 30 => V0  V2  * 1.000000  V3  * a r V0  V1  V4  + + * - empty: 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 
iteration = 1 	 best= 23.900000	stackLen: 30 => V0  V2  * 1.000000  V3  * a r V0  V1  V4  + + * - empty: 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0 0 1 1 0 0 0 0 
BEST SOLUTION! cost=13.9388 stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 0 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 1 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 2 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 3 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 4 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 5 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 6 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 7 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 8 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 9 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 10 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 11 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 12 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 13 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 14 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 15 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 16 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 17 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 18 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 19 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 20 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 21 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 22 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 23 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 24 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 25 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 26 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 27 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 28 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 29 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 30 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 31 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 32 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 33 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 34 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 35 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 36 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 37 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 38 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 39 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 40 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 41 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 42 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 43 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 44 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 45 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 46 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 47 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 48 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
iteration = 49 	 best= 13.938846	stackLen: 30 => 1.000000  V2  / V0  1.000000  * - 1.000000  e V2  V3  - / V0  - * empty: 0 0 0 0 0 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [53 28 43 2 87 5 79 74 89 12 ]
BEST SOLUTION! cost=54.1 stackLen: 30 => 1.000000  r V5  / V2  1.000000  * V1  + * empty: 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 1 
iteration = 0 	 best= 54.100000	stackLen: 30 => 1.000000  r V5  / V2  1.000000  * V1  + * empty: 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 1 
iteration = 1 	 best= 54.100000	stackLen: 30 => 1.000000  r V5  / V2  1.000000  * V1  + * empty: 0 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 1 
BEST SOLUTION! cost=44.44 stackLen: 30 => V2  a V4  1.000000  * a 1.000000  r / V4  * V0  * * empty: 0 0 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 1 1 1 0 1 
iteration = 0 	 best= 44.440000	stackLen: 30 => V2  a V4  1.000000  * a 1.000000  r / V4  * V0  * * empty: 0 0 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 0 0 0 0 1 1 1 0 1 
BEST SOLUTION! cost=41.5058 stackLen: 30 => V0  1.000000  V4  a 1.000000  i V4  i / V3  i 1.000000  * a i * / / * empty: 0 0 0 1 0 1 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 
iteration = 0 	 best= 41.505833	stackLen: 30 => V0  1.000000  V4  a 1.000000  i V4  i / V3  i 1.000000  * a i * / / * empty: 0 0 0 1 0 1 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 
iteration = 1 	 best= 41.505833	stackLen: 30 => V0  1.000000  V4  a 1.000000  i V4  i / V3  i 1.000000  * a i * / / * empty: 0 0 0 1 0 1 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 
iteration = 2 	 best= 41.505833	stackLen: 30 => V0  1.000000  V4  a 1.000000  i V4  i / V3  i 1.000000  * a i * / / * empty: 0 0 0 1 0 1 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 1 1 
BEST SOLUTION! cost=40.2 stackLen: 30 => V0  a r 1.000000  V1  * V4  V5  - 1.000000  * - * empty: 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 
iteration = 0 	 best= 40.200000	stackLen: 30 => V0  a r 1.000000  V1  * V4  V5  - 1.000000  * - * empty: 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 
iteration = 1 	 best= 40.200000	stackLen: 30 => V0  a r 1.000000  V1  * V4  V5  - 1.000000  * - * empty: 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 
iteration = 2 	 best= 40.200000	stackLen: 30 => V0  a r 1.000000  V1  * V4  V5  - 1.000000  * - * empty: 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 1 1 0 0 0 1 0 0 1 0 1 0 0 
BEST SOLUTION! cost=36.1504 stackLen: 30 => 1.000000  V4  a V1  / V2  * a r V0  * * V3  * empty: 0 1 1 0 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 0 1 1 0 0 0 
iteration = 0 	 best= 36.150375	stackLen: 30 => 1.000000  V4  a V1  / V2  * a r V0  * * V3  * empty: 0 1 1 0 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 0 1 1 0 0 0 
iteration = 1 	 best= 36.150375	stackLen: 30 => 1.000000  V4  a V1  / V2  * a r V0  * * V3  * empty: 0 1 1 0 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 0 1 1 0 0 0 
iteration = 2 	 best= 36.150375	stackLen: 30 => 1.000000  V4  a V1  / V2  * a r V0  * * V3  * empty: 0 1 1 0 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 0 1 1 0 0 0 
iteration = 3 	 best= 36.150375	stackLen: 30 => 1.000000  V4  a V1  / V2  * a r V0  * * V3  * empty: 0 1 1 0 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 1 0 1 1 0 0 0 
BEST SOLUTION! cost=33.4 stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 3 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 4 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 5 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 6 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 7 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 8 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 9 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 10 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 11 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 12 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 13 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 14 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 15 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 16 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 17 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 18 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 19 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 20 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 21 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 22 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 23 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 24 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 25 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 26 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 27 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 28 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 29 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 30 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 31 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 32 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 33 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 34 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 35 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 36 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 37 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 38 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 39 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 40 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 41 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 42 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 43 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 44 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 45 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 46 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 47 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 48 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 49 	 best= 33.400000	stackLen: 30 => V0  V5  + 1.000000  V5  1.000000  V3  V2  + * - * * empty: 0 0 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [1 77 45 84 8 2 85 49 24 64 ]
BEST SOLUTION! cost=30.3 stackLen: 30 => V1  V4  + V2  - V4  V1  + V3  - V4  1.000000  * - V4  - V4  + * empty: 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 1 1 0 0 0 1 1 
iteration = 0 	 best= 30.300000	stackLen: 30 => V1  V4  + V2  - V4  V1  + V3  - V4  1.000000  * - V4  - V4  + * empty: 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 1 1 0 0 0 1 1 
iteration = 1 	 best= 30.300000	stackLen: 30 => V1  V4  + V2  - V4  V1  + V3  - V4  1.000000  * - V4  - V4  + * empty: 0 0 0 1 0 0 1 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 1 1 0 0 0 1 1 
BEST SOLUTION! cost=26.4565 stackLen: 30 => 1.000000  e V2  V5  1.000000  1.000000  V3  * * + * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 26.456543	stackLen: 30 => 1.000000  e V2  V5  1.000000  1.000000  V3  * * + * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 26.456543	stackLen: 30 => 1.000000  e V2  V5  1.000000  1.000000  V3  * * + * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 26.456543	stackLen: 30 => 1.000000  e V2  V5  1.000000  1.000000  V3  * * + * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 26.456543	stackLen: 30 => 1.000000  e V2  V5  1.000000  1.000000  V3  * * + * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 26.456543	stackLen: 30 => 1.000000  e V2  V5  1.000000  1.000000  V3  * * + * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 26.456543	stackLen: 30 => 1.000000  e V2  V5  1.000000  1.000000  V3  * * + * * empty: 0 0 1 1 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 
BEST SOLUTION! cost=22.24 stackLen: 30 => 1.000000  1.000000  + e r r V5  V5  + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 22.239974	stackLen: 30 => 1.000000  1.000000  + e r r V5  V5  + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 22.239974	stackLen: 30 => 1.000000  1.000000  + e r r V5  V5  + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 22.239974	stackLen: 30 => 1.000000  1.000000  + e r r V5  V5  + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 22.239974	stackLen: 30 => 1.000000  1.000000  + e r r V5  V5  + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 22.239974	stackLen: 30 => 1.000000  1.000000  + e r r V5  V5  + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 22.239974	stackLen: 30 => 1.000000  1.000000  + e r r V5  V5  + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=15.1089 stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 15.108852	stackLen: 30 => 1.000000  1.000000  * e r r V5  V5  V2  V5  - + + V5  V5  - + 1.000000  1.000000  1.000000  + * 1.000000  V3  * * + * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [27 48 31 62 54 22 6 93 92 69 ]
BEST SOLUTION! cost=22.3 stackLen: 30 => V4  V2  a 1.000000  / * V2  * V5  * 1.000000  * V2  * empty: 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0 0 0 
iteration = 0 	 best= 22.300000	stackLen: 30 => V4  V2  a 1.000000  / * V2  * V5  * 1.000000  * V2  * empty: 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0 0 0 
iteration = 1 	 best= 22.300000	stackLen: 30 => V4  V2  a 1.000000  / * V2  * V5  * 1.000000  * V2  * empty: 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0 0 0 
iteration = 2 	 best= 22.300000	stackLen: 30 => V4  V2  a 1.000000  / * V2  * V5  * 1.000000  * V2  * empty: 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0 0 0 
iteration = 3 	 best= 22.300000	stackLen: 30 => V4  V2  a 1.000000  / * V2  * V5  * 1.000000  * V2  * empty: 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0 0 0 
iteration = 4 	 best= 22.300000	stackLen: 30 => V4  V2  a 1.000000  / * V2  * V5  * 1.000000  * V2  * empty: 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 1 1 0 0 0 
BEST SOLUTION! cost=19.4 stackLen: 30 => V4  V1  V1  + * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 19.400000	stackLen: 30 => V4  V1  V1  + * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=16.5 stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 0 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 1 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 2 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 3 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 4 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 5 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 6 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
iteration = 7 	 best= 16.500000	stackLen: 30 => 1.000000  1.000000  r 1.000000  1.000000  V3  V2  * V4  V5  * 1.000000  * + / * * / empty: 0 1 1 1 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 0 0 1 1 0 0 1 
BEST SOLUTION! cost=13.0648 stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 13.064823	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + r V3  V2  V2  V2  + - * V4  V5  * 1.000000  * + / * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=11.9 stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.900000	stackLen: 30 => 1.000000  1.000000  1.000000  r 1.000000  1.000000  + i V3  V1  V2  - V2  V2  + - * V4  V5  V1  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=10.9003 stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 10.900331	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e i V3  V1  V2  - V2  V2  + - * V4  V5  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=10.2725 stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 10.272489	stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [0 7 76 68 60 25 42 27 50 59 ]
BEST SOLUTION! cost=16.9 stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 4 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 5 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 6 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 7 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 8 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 9 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 10 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
iteration = 11 	 best= 16.900000	stackLen: 30 => 1.000000  1.000000  a V3  a r / V1  * / empty: 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=13.6654 stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 13.665446	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  1.000000  r e a i V3  V5  + V3  + V5  + / * / V3  + a r / V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.2725
stackLen: 30 => 1.000000  1.000000  1.000000  * 1.000000  1.000000  e r V3  V1  V2  - V2  V2  + - * V4  V1  V5  + * 1.000000  * + / * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((((1 * ((v5 + v1) * v4)) + (((v2 + v2) - (v2 - v1)) * v3))/\sqrt{\exp(1)}) * 1)/(1 * 1))/1)
Tempo de execucao: 851.934 segundos
FIM
