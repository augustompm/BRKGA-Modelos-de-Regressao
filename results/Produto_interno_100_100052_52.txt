Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [58 10 66 8 76 13 21 96 57 59 ]
BEST SOLUTION! cost=27.9 stackLen: 30 => V5  1.000000  1.000000  a V4  * / * empty: 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 1 
iteration = 0 	 best= 27.900000	stackLen: 30 => V5  1.000000  1.000000  a V4  * / * empty: 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 1 
BEST SOLUTION! cost=15.6 stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 2 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 3 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 4 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 5 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 6 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 7 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 8 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 9 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 10 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 11 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 12 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 13 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 14 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 15 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 16 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 17 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 18 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 19 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 20 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 21 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 22 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 23 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 24 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 25 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 26 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 27 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 28 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 29 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 30 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 31 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 32 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 33 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 34 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 35 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 36 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 37 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 38 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 39 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 40 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 41 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 42 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 43 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 44 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 45 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 46 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 47 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 48 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
iteration = 49 	 best= 15.600000	stackLen: 30 => V4  V0  + V1  1.000000  * V2  - 1.000000  1.000000  / V4  * - * empty: 0 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [39 79 14 15 60 50 48 31 1 4 ]
BEST SOLUTION! cost=39.73 stackLen: 30 => V3  V5  V1  V0  * V0  * V4  * a r V4  a V2  a * / * * empty: 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 39.730050	stackLen: 30 => V3  V5  V1  V0  * V0  * V4  * a r V4  a V2  a * / * * empty: 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 39.730050	stackLen: 30 => V3  V5  V1  V0  * V0  * V4  * a r V4  a V2  a * / * * empty: 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 39.730050	stackLen: 30 => V3  V5  V1  V0  * V0  * V4  * a r V4  a V2  a * / * * empty: 0 1 0 1 0 1 1 1 1 1 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=39.5 stackLen: 30 => V5  1.000000  * 1.000000  * V4  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 
iteration = 0 	 best= 39.500000	stackLen: 30 => V5  1.000000  * 1.000000  * V4  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 
BEST SOLUTION! cost=39.1624 stackLen: 30 => V4  V5  V1  i a V2  V2  * / * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 39.162395	stackLen: 30 => V4  V5  V1  i a V2  V2  * / * * empty: 0 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 
BEST SOLUTION! cost=34 stackLen: 30 => 1.000000  1.000000  * V4  V2  V5  - * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 0 	 best= 34.000000	stackLen: 30 => 1.000000  1.000000  * V4  V2  V5  - * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 1 	 best= 34.000000	stackLen: 30 => 1.000000  1.000000  * V4  V2  V5  - * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 2 	 best= 34.000000	stackLen: 30 => 1.000000  1.000000  * V4  V2  V5  - * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 
iteration = 3 	 best= 34.000000	stackLen: 30 => 1.000000  1.000000  * V4  V2  V5  - * * empty: 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 0 0 0 
BEST SOLUTION! cost=31.5378 stackLen: 30 => 1.000000  V5  * V4  - 1.000000  r e r V5  / 1.000000  * * empty: 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 31.537796	stackLen: 30 => 1.000000  V5  * V4  - 1.000000  r e r V5  / 1.000000  * * empty: 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 31.537796	stackLen: 30 => 1.000000  V5  * V4  - 1.000000  r e r V5  / 1.000000  * * empty: 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 31.537796	stackLen: 30 => 1.000000  V5  * V4  - 1.000000  r e r V5  / 1.000000  * * empty: 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 31.537796	stackLen: 30 => 1.000000  V5  * V4  - 1.000000  r e r V5  / 1.000000  * * empty: 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 31.537796	stackLen: 30 => 1.000000  V5  * V4  - 1.000000  r e r V5  / 1.000000  * * empty: 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 31.537796	stackLen: 30 => 1.000000  V5  * V4  - 1.000000  r e r V5  / 1.000000  * * empty: 0 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=29.65 stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 29.650000	stackLen: 30 => 1.000000  1.000000  1.000000  / + 1.000000  / V5  * V4  - 1.000000  i r r V5  / 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=28.7862 stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 28.786190	stackLen: 30 => 1.000000  1.000000  * V1  1.000000  1.000000  + V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=28.773 stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 28.772978	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V0  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=28.5968 stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 28.596756	stackLen: 30 => 1.000000  1.000000  * V1  i 1.000000  e V4  / + V1  - i V3  + V0  a V2  V2  + V5  - / V0  V4  * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [34 60 28 22 13 65 25 32 14 17 ]
BEST SOLUTION! cost=29.7943 stackLen: 30 => 1.000000  e r 1.000000  V4  V5  * i 1.000000  * * * empty: 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 29.794348	stackLen: 30 => 1.000000  e r 1.000000  V4  V5  * i 1.000000  * * * empty: 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 1 1 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=26.1 stackLen: 30 => 1.000000  1.000000  / V5  * V2  1.000000  V0  * + * empty: 0 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 26.100000	stackLen: 30 => 1.000000  1.000000  / V5  * V2  1.000000  V0  * + * empty: 0 1 1 0 1 1 1 1 0 1 1 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=22.1883 stackLen: 30 => 1.000000  1.000000  V1  1.000000  e r V2  / i - V5  1.000000  1.000000  * * * * * empty: 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 22.188327	stackLen: 30 => 1.000000  1.000000  V1  1.000000  e r V2  / i - V5  1.000000  1.000000  * * * * * empty: 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 22.188327	stackLen: 30 => 1.000000  1.000000  V1  1.000000  e r V2  / i - V5  1.000000  1.000000  * * * * * empty: 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 22.188327	stackLen: 30 => 1.000000  1.000000  V1  1.000000  e r V2  / i - V5  1.000000  1.000000  * * * * * empty: 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 1 1 0 1 1 1 1 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=13.7 stackLen: 30 => 1.000000  V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 1 0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 0 0 0 0 0 0 1 
COST2 IS BETTER!!!11.8
iteration = 0 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 11.800000	stackLen: 30 => 1.000000  1.000000  + V2  V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=9.1 stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 7 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 8 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 9 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 10 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 11 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 12 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 13 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 14 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 15 	 best= 9.100000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + V2  V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=7.66136 stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 7.661365	stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [58 81 51 93 63 73 34 38 60 36 ]
BEST SOLUTION! cost=19.0104 stackLen: 30 => 1.000000  1.000000  e r r + V3  1.000000  i * V1  + V1  V1  - - / V3  * empty: 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.010365	stackLen: 30 => 1.000000  1.000000  e r r + V3  1.000000  i * V1  + V1  V1  - - / V3  * empty: 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.7 stackLen: 30 => 1.000000  V0  V4  V2  V1  - V1  - V4  - - * / empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 18.700000	stackLen: 30 => 1.000000  V0  V4  V2  V1  - V1  - V4  - - * / empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 18.700000	stackLen: 30 => 1.000000  V0  V4  V2  V1  - V1  - V4  - - * / empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 18.700000	stackLen: 30 => 1.000000  V0  V4  V2  V1  - V1  - V4  - - * / empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 18.700000	stackLen: 30 => 1.000000  V0  V4  V2  V1  - V1  - V4  - - * / empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 0 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=17.5715 stackLen: 30 => V5  a V5  / 1.000000  e V4  / * 1.000000  V4  / V5  + * V0  * empty: 0 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.571478	stackLen: 30 => V5  a V5  / 1.000000  e V4  / * 1.000000  V4  / V5  + * V0  * empty: 0 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.571478	stackLen: 30 => V5  a V5  / 1.000000  e V4  / * 1.000000  V4  / V5  + * V0  * empty: 0 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.571478	stackLen: 30 => V5  a V5  / 1.000000  e V4  / * 1.000000  V4  / V5  + * V0  * empty: 0 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.571478	stackLen: 30 => V5  a V5  / 1.000000  e V4  / * 1.000000  V4  / V5  + * V0  * empty: 0 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.571478	stackLen: 30 => V5  a V5  / 1.000000  e V4  / * 1.000000  V4  / V5  + * V0  * empty: 0 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.571478	stackLen: 30 => V5  a V5  / 1.000000  e V4  / * 1.000000  V4  / V5  + * V0  * empty: 0 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.3237 stackLen: 30 => V5  a V5  / 1.000000  1.000000  / 1.000000  1.000000  e V4  / * 1.000000  V4  * V0  + * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 0 
iteration = 0 	 best= 17.323670	stackLen: 30 => V5  a V5  / 1.000000  1.000000  / 1.000000  1.000000  e V4  / * 1.000000  V4  * V0  + * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 0 
iteration = 1 	 best= 17.323670	stackLen: 30 => V5  a V5  / 1.000000  1.000000  / 1.000000  1.000000  e V4  / * 1.000000  V4  * V0  + * V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 0 
BEST SOLUTION! cost=16.7381 stackLen: 30 => V1  a 1.000000  r i / V2  V5  V1  V0  * * * * empty: 0 0 0 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 16.738095	stackLen: 30 => V1  a 1.000000  r i / V2  V5  V1  V0  * * * * empty: 0 0 0 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 16.738095	stackLen: 30 => V1  a 1.000000  r i / V2  V5  V1  V0  * * * * empty: 0 0 0 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 16.738095	stackLen: 30 => V1  a 1.000000  r i / V2  V5  V1  V0  * * * * empty: 0 0 0 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 16.738095	stackLen: 30 => V1  a 1.000000  r i / V2  V5  V1  V0  * * * * empty: 0 0 0 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 16.738095	stackLen: 30 => V1  a 1.000000  r i / V2  V5  V1  V0  * * * * empty: 0 0 0 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 16.738095	stackLen: 30 => V1  a 1.000000  r i / V2  V5  V1  V0  * * * * empty: 0 0 0 1 1 1 1 0 1 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=11.5429 stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 11.542857	stackLen: 30 => V1  a 1.000000  r 1.000000  1.000000  + + 1.000000  1.000000  r r * V2  V5  V1  V3  V4  V0  V0  + + + * * * / / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [71 23 63 54 12 49 4 57 89 38 ]
BEST SOLUTION! cost=56.6349 stackLen: 30 => V2  i V1  a a r V2  i / * 1.000000  * V0  V1  * * empty: 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 0 1 1 0 0 1 
iteration = 0 	 best= 56.634921	stackLen: 30 => V2  i V1  a a r V2  i / * 1.000000  * V0  V1  * * empty: 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 1 0 0 1 0 0 1 0 1 0 1 1 0 0 1 
BEST SOLUTION! cost=46.6285 stackLen: 30 => V2  V1  V2  - * i r V0  a r * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 46.628532	stackLen: 30 => V2  V1  V2  - * i r V0  a r * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 46.628532	stackLen: 30 => V2  V1  V2  - * i r V0  a r * empty: 0 1 0 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=40.24 stackLen: 30 => V2  V4  a r 1.000000  1.000000  V0  * a a r * / * empty: 0 1 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 
iteration = 0 	 best= 40.240000	stackLen: 30 => V2  V4  a r 1.000000  1.000000  V0  * a a r * / * empty: 0 1 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 
iteration = 1 	 best= 40.240000	stackLen: 30 => V2  V4  a r 1.000000  1.000000  V0  * a a r * / * empty: 0 1 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 
iteration = 2 	 best= 40.240000	stackLen: 30 => V2  V4  a r 1.000000  1.000000  V0  * a a r * / * empty: 0 1 0 0 1 0 0 0 1 0 1 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 0 0 
BEST SOLUTION! cost=33.67 stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 5 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 6 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 7 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 8 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 9 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 10 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 11 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 12 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 13 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 14 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 15 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 16 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 17 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 18 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 19 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 20 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 21 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 22 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 23 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 24 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 25 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 26 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 27 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 28 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 29 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 30 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 31 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 32 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 33 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 34 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 35 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 36 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 37 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 38 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 39 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 40 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 41 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 42 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 43 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 44 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 45 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 46 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 47 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 48 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
iteration = 49 	 best= 33.670000	stackLen: 30 => V5  V5  V0  V1  V5  - * V4  a V4  / * - * empty: 0 0 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=7.66136
stackLen: 30 => 1.000000  1.000000  e i + V2  V2  + V1  + V2  + V3  * i / 1.000000  V5  / V1  V4  - 1.000000  1.000000  i * * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((1) * 1) * (v4 - v1)) * (v5/1)) + (((v3 * (v2 + (v1 + (v2 + v2)))))/((\exp(1)) + 1)))
Tempo de execucao: 1096.35 segundos
FIM
