Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [75 98 83 22 4 27 82 38 10 60 ]
BEST SOLUTION! cost=28.4 stackLen: 30 => 1.000000  i a V3  V2  * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 
iteration = 0 	 best= 28.400000	stackLen: 30 => 1.000000  i a V3  V2  * * empty: 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 1 
BEST SOLUTION! cost=25.6526 stackLen: 30 => V5  a i r 1.000000  e V1  / + a V0  / V2  V0  a * * empty: 0 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 
iteration = 0 	 best= 25.652550	stackLen: 30 => V5  a i r 1.000000  e V1  / + a V0  / V2  V0  a * * empty: 0 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 
iteration = 1 	 best= 25.652550	stackLen: 30 => V5  a i r 1.000000  e V1  / + a V0  / V2  V0  a * * empty: 0 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 
iteration = 2 	 best= 25.652550	stackLen: 30 => V5  a i r 1.000000  e V1  / + a V0  / V2  V0  a * * empty: 0 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 
iteration = 3 	 best= 25.652550	stackLen: 30 => V5  a i r 1.000000  e V1  / + a V0  / V2  V0  a * * empty: 0 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 
iteration = 4 	 best= 25.652550	stackLen: 30 => V5  a i r 1.000000  e V1  / + a V0  / V2  V0  a * * empty: 0 1 0 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 0 0 0 0 
BEST SOLUTION! cost=23.8468 stackLen: 30 => V0  V5  + V4  i + a 1.000000  * r V0  / V4  * V5  * empty: 0 1 1 0 1 1 0 0 1 1 1 0 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.846795	stackLen: 30 => V0  V5  + V4  i + a 1.000000  * r V0  / V4  * V5  * empty: 0 1 1 0 1 1 0 0 1 1 1 0 1 1 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=20.2 stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 1 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 2 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 3 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 4 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 5 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 6 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
iteration = 7 	 best= 20.200000	stackLen: 30 => V5  1.000000  V4  * a r 1.000000  / * V4  * V0  * empty: 0 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=19.6 stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.600000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.600000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.600000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 19.600000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 19.600000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 19.600000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 19.600000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=19.5 stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 19.500000	stackLen: 30 => V5  1.000000  V4  V4  + * a r 1.000000  1.000000  1.000000  1.000000  + 1.000000  / + + / * V4  * V0  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.8778 stackLen: 30 => V5  1.000000  V3  V4  V4  + V4  + + * a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / + + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.877773	stackLen: 30 => V5  1.000000  V3  V4  V4  + V4  + + * a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / + + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.877773	stackLen: 30 => V5  1.000000  V3  V4  V4  + V4  + + * a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / + + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.877773	stackLen: 30 => V5  1.000000  V3  V4  V4  + V4  + + * a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / + + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.877773	stackLen: 30 => V5  1.000000  V3  V4  V4  + V4  + + * a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / + + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.877773	stackLen: 30 => V5  1.000000  V3  V4  V4  + V4  + + * a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / + + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.877773	stackLen: 30 => V5  1.000000  V3  V4  V4  + V4  + + * a r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / + + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=16.653 stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 16.652965	stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [31 78 38 4 25 64 1 86 63 15 ]
BEST SOLUTION! cost=37.3 stackLen: 30 => V3  V3  1.000000  * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 37.300000	stackLen: 30 => V3  V3  1.000000  * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 37.300000	stackLen: 30 => V3  V3  1.000000  * * empty: 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=34.7 stackLen: 30 => V5  a 1.000000  a * 1.000000  / r i V0  a r / empty: 0 1 1 1 1 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 1 0 0 0 0 1 1 0 1 
iteration = 0 	 best= 34.700000	stackLen: 30 => V5  a 1.000000  a * 1.000000  / r i V0  a r / empty: 0 1 1 1 1 0 1 0 1 1 1 0 0 0 1 1 0 1 1 1 0 1 0 0 0 0 1 1 0 1 
BEST SOLUTION! cost=33.0383 stackLen: 30 => V3  a 1.000000  1.000000  / e 1.000000  / r * empty: 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 1 1 
iteration = 0 	 best= 33.038285	stackLen: 30 => V3  a 1.000000  1.000000  / e 1.000000  / r * empty: 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 1 1 
iteration = 1 	 best= 33.038285	stackLen: 30 => V3  a 1.000000  1.000000  / e 1.000000  / r * empty: 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 1 1 
iteration = 2 	 best= 33.038285	stackLen: 30 => V3  a 1.000000  1.000000  / e 1.000000  / r * empty: 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 0 0 1 1 
BEST SOLUTION! cost=29.8081 stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 5 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 6 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
iteration = 7 	 best= 29.808082	stackLen: 30 => V0  a 1.000000  V1  1.000000  e 1.000000  * r V0  / * * + empty: 0 0 0 1 1 1 1 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=29.6826 stackLen: 30 => V0  a 1.000000  V1  1.000000  1.000000  - e 1.000000  1.000000  + 1.000000  + * r V0  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 29.682606	stackLen: 30 => V0  a 1.000000  V1  1.000000  1.000000  - e 1.000000  1.000000  + 1.000000  + * r V0  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 29.682606	stackLen: 30 => V0  a 1.000000  V1  1.000000  1.000000  - e 1.000000  1.000000  + 1.000000  + * r V0  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 29.682606	stackLen: 30 => V0  a 1.000000  V1  1.000000  1.000000  - e 1.000000  1.000000  + 1.000000  + * r V0  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 29.682606	stackLen: 30 => V0  a 1.000000  V1  1.000000  1.000000  - e 1.000000  1.000000  + 1.000000  + * r V0  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 29.682606	stackLen: 30 => V0  a 1.000000  V1  1.000000  1.000000  - e 1.000000  1.000000  + 1.000000  + * r V0  / * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.9843 stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 0 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 1 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 2 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 3 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 4 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 5 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 6 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 7 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 8 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 9 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 10 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 11 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 12 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 13 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 14 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 15 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 16 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 17 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 18 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 19 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 20 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 21 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 22 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 23 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 24 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 25 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 26 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 27 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 28 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 29 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 30 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 31 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 32 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 33 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 34 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 35 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 36 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 37 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 38 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 39 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 40 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 41 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 42 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 43 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 44 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 45 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 46 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 47 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 48 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
iteration = 49 	 best= 27.984305	stackLen: 30 => V1  V5  a V1  / * e r V3  / 1.000000  * V3  * empty: 0 0 1 0 1 1 1 1 0 0 0 1 0 1 0 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [62 61 40 88 38 4 60 28 26 41 ]
BEST SOLUTION! cost=46.0568 stackLen: 30 => V4  V2  - V1  + V3  V5  * a 1.000000  e / r 1.000000  V2  * a V0  * * * empty: 0 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
iteration = 0 	 best= 46.056770	stackLen: 30 => V4  V2  - V1  + V3  V5  * a 1.000000  e / r 1.000000  V2  * a V0  * * * empty: 0 0 0 0 1 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 1 0 0 0 0 
BEST SOLUTION! cost=32.7409 stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
iteration = 0 	 best= 32.740859	stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
iteration = 1 	 best= 32.740859	stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
iteration = 2 	 best= 32.740859	stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
iteration = 3 	 best= 32.740859	stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
iteration = 4 	 best= 32.740859	stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
iteration = 5 	 best= 32.740859	stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
iteration = 6 	 best= 32.740859	stackLen: 30 => 1.000000  r 1.000000  e * r a V1  * V0  + V4  * empty: 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 0 0 
BEST SOLUTION! cost=32.573 stackLen: 30 => 1.000000  r 1.000000  + 1.000000  1.000000  1.000000  / / e * r r V1  V1  + * V0  + V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 32.573028	stackLen: 30 => 1.000000  r 1.000000  + 1.000000  1.000000  1.000000  / / e * r r V1  V1  + * V0  + V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 32.573028	stackLen: 30 => 1.000000  r 1.000000  + 1.000000  1.000000  1.000000  / / e * r r V1  V1  + * V0  + V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 32.573028	stackLen: 30 => 1.000000  r 1.000000  + 1.000000  1.000000  1.000000  / / e * r r V1  V1  + * V0  + V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.4086 stackLen: 30 => 1.000000  e a r 1.000000  * V1  V1  + V5  V5  + V0  + + / V4  * empty: 0 1 1 0 0 0 0 0 0 1 0 0 0 1 1 1 1 0 1 0 1 0 1 0 1 1 0 0 0 0 
COST2 IS BETTER!!!27.3892
iteration = 0 	 best= 27.389158	stackLen: 30 => 1.000000  e a r 1.000000  * V1  V1  + V5  V5  V5  + + V0  + + / V4  * empty: 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 27.389158	stackLen: 30 => 1.000000  e a r 1.000000  * V1  V1  + V5  V5  V5  + + V0  + + / V4  * empty: 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 27.389158	stackLen: 30 => 1.000000  e a r 1.000000  * V1  V1  + V5  V5  V5  + + V0  + + / V4  * empty: 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 27.389158	stackLen: 30 => 1.000000  e a r 1.000000  * V1  V1  + V5  V5  V5  + + V0  + + / V4  * empty: 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 27.389158	stackLen: 30 => 1.000000  e a r 1.000000  * V1  V1  + V5  V5  V5  + + V0  + + / V4  * empty: 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 27.389158	stackLen: 30 => 1.000000  e a r 1.000000  * V1  V1  + V5  V5  V5  + + V0  + + / V4  * empty: 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=20.0474 stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 20.047371	stackLen: 30 => 1.000000  e a r 1.000000  1.000000  * 1.000000  1.000000  * * * V1  V1  + V3  V0  + V5  V5  V5  + + + V4  + + / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [45 52 67 89 20 32 83 50 0 5 ]
BEST SOLUTION! cost=27.3 stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  V0  / / V5  V2  - V1  + V2  - - + - i * empty: 0 1 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 0 	 best= 27.300000	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  V0  / / V5  V2  - V1  + V2  - - + - i * empty: 0 1 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 1 	 best= 27.300000	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  V0  / / V5  V2  - V1  + V2  - - + - i * empty: 0 1 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 2 	 best= 27.300000	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  V0  / / V5  V2  - V1  + V2  - - + - i * empty: 0 1 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 3 	 best= 27.300000	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  V0  / / V5  V2  - V1  + V2  - - + - i * empty: 0 1 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 4 	 best= 27.300000	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  V0  / / V5  V2  - V1  + V2  - - + - i * empty: 0 1 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
iteration = 5 	 best= 27.300000	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  V0  / / V5  V2  - V1  + V2  - - + - i * empty: 0 1 1 0 0 1 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
BEST SOLUTION! cost=24.1667 stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 24.166667	stackLen: 30 => V2  1.000000  V4  * V1  1.000000  1.000000  1.000000  1.000000  + 1.000000  / + V0  / / V5  V2  - V1  + V2  - - + - i * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [75 76 24 39 67 71 23 30 49 22 ]
BEST SOLUTION! cost=41.3 stackLen: 30 => 1.000000  V5  * i a V1  V5  a V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 41.300000	stackLen: 30 => 1.000000  V5  * i a V1  V5  a V0  / * * empty: 0 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=38.5734 stackLen: 30 => 1.000000  r 1.000000  * a e r r V0  V1  * * empty: 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 0 0 0 
iteration = 0 	 best= 38.573356	stackLen: 30 => 1.000000  r 1.000000  * a e r r V0  V1  * * empty: 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 0 0 0 
iteration = 1 	 best= 38.573356	stackLen: 30 => 1.000000  r 1.000000  * a e r r V0  V1  * * empty: 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 0 0 0 
BEST SOLUTION! cost=38.4 stackLen: 30 => V4  1.000000  * V5  1.000000  * * empty: 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 0 	 best= 38.400000	stackLen: 30 => V4  1.000000  * V5  1.000000  * * empty: 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
iteration = 1 	 best= 38.400000	stackLen: 30 => V4  1.000000  * V5  1.000000  * * empty: 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1 
BEST SOLUTION! cost=29.3 stackLen: 30 => 1.000000  V1  1.000000  * 1.000000  V3  1.000000  V2  V1  V0  + + / - * * * empty: 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 29.300000	stackLen: 30 => 1.000000  V1  1.000000  * 1.000000  V3  1.000000  V2  V1  V0  + + / - * * * empty: 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 29.300000	stackLen: 30 => 1.000000  V1  1.000000  * 1.000000  V3  1.000000  V2  V1  V0  + + / - * * * empty: 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 29.300000	stackLen: 30 => 1.000000  V1  1.000000  * 1.000000  V3  1.000000  V2  V1  V0  + + / - * * * empty: 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 29.300000	stackLen: 30 => 1.000000  V1  1.000000  * 1.000000  V3  1.000000  V2  V1  V0  + + / - * * * empty: 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=24.3 stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 24.300000	stackLen: 30 => 1.000000  i V5  1.000000  V2  * V4  1.000000  * V3  - V4  - - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=17.95 stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 8 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 9 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 10 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 11 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 12 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 13 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 14 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 15 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 16 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 17 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 18 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 19 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 20 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 21 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 22 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 23 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 24 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 25 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 26 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 27 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 28 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 29 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 30 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 31 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 32 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 33 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 34 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 35 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 36 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 37 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 38 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 39 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 40 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 41 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 42 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 43 	 best= 17.950000	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  + 1.000000  * V3  / V4  V4  + - - * * * empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=17.8415 stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.841455	stackLen: 30 => 1.000000  1.000000  i V5  1.000000  V2  * 1.000000  1.000000  e 1.000000  * V0  V3  V3  - V3  - + / V4  V4  + - * - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=16.653
stackLen: 30 => V5  1.000000  V3  V3  * V4  V4  + V4  * + * r 1.000000  1.000000  1.000000  1.000000  / 1.000000  / * + / * V4  * V0  V0  + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: ((v0 + v0) * (v4 * (((((1/(1/1)) * 1) + 1)/\sqrt{(((v4 * (v4 + v4)) + (v3 * v3)) * 1)}) * v5)))
Tempo de execucao: 1117.58 segundos
FIM
