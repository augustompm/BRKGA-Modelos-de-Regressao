Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:37
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [94 20 10 45 39 70 98 68 21 35 ]
BEST SOLUTION! cost=13.8 stackLen: 10 => V4  V1  + V4  V0  - * empty: 0 1 1 0 0 0 0 1 0 0 
iteration = 0 	 best= 13.800000	stackLen: 10 => V4  V1  + V4  V0  - * empty: 0 1 1 0 0 0 0 1 0 0 
iteration = 1 	 best= 13.800000	stackLen: 10 => V4  V1  + V4  V0  - * empty: 0 1 1 0 0 0 0 1 0 0 
iteration = 2 	 best= 13.800000	stackLen: 10 => V4  V1  + V4  V0  - * empty: 0 1 1 0 0 0 0 1 0 0 
iteration = 3 	 best= 13.800000	stackLen: 10 => V4  V1  + V4  V0  - * empty: 0 1 1 0 0 0 0 1 0 0 
BEST SOLUTION! cost=13.4 stackLen: 10 => V0  V2  a r 1.000000  * * empty: 0 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 13.400000	stackLen: 10 => V0  V2  a r 1.000000  * * empty: 0 1 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 13.400000	stackLen: 10 => V0  V2  a r 1.000000  * * empty: 0 1 0 0 0 1 0 0 0 1 
iteration = 2 	 best= 13.400000	stackLen: 10 => V0  V2  a r 1.000000  * * empty: 0 1 0 0 0 1 0 0 0 1 
iteration = 3 	 best= 13.400000	stackLen: 10 => V0  V2  a r 1.000000  * * empty: 0 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=11.8 stackLen: 10 => 1.000000  V2  / V0  V5  + * empty: 0 0 0 0 1 1 0 1 0 0 
iteration = 0 	 best= 11.800000	stackLen: 10 => 1.000000  V2  / V0  V5  + * empty: 0 0 0 0 1 1 0 1 0 0 
iteration = 1 	 best= 11.800000	stackLen: 10 => 1.000000  V2  / V0  V5  + * empty: 0 0 0 0 1 1 0 1 0 0 
BEST SOLUTION! cost=11.6 stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 4 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 5 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 6 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 7 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 8 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 9 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 10 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 11 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 12 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 13 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 14 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 15 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 16 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 17 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 18 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 19 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 20 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 21 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 22 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 23 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 24 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 25 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 26 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 27 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 28 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 29 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 30 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 31 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 32 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 33 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 34 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 35 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 36 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 37 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 38 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 39 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 40 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 41 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 42 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 43 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 44 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 45 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 46 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 47 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 48 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
iteration = 49 	 best= 11.600000	stackLen: 10 => V2  V4  V2  - * empty: 0 1 1 0 1 1 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [53 80 0 84 72 2 54 41 73 37 ]
BEST SOLUTION! cost=32.2 stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 4 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 5 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 6 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 7 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 8 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 9 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 10 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
iteration = 11 	 best= 32.200000	stackLen: 15 => V1  V1  V0  V4  + + * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=25.8 stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 25.800000	stackLen: 15 => 1.000000  V5  / V3  + 1.000000  i r V5  V3  i - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=23.9 stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 0 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 1 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 2 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 3 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 4 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 5 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 6 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 7 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 8 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 9 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 10 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 11 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 12 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 13 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 14 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 15 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 16 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 17 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 18 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 19 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 20 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 21 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 22 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 23 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 24 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 25 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 26 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 27 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 28 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 29 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 30 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 31 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 32 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 33 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 34 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 35 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 36 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 37 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 38 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 39 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 40 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 41 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 42 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 43 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 44 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 45 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 46 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 47 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 48 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
iteration = 49 	 best= 23.900000	stackLen: 15 => 1.000000  V0  a V5  a V3  a - - / empty: 0 0 1 1 1 0 0 1 0 0 0 0 0 1 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [11 97 98 45 3 84 80 38 76 9 ]
BEST SOLUTION! cost=22.4 stackLen: 22 => V4  V5  V5  V4  1.000000  * - i i + * empty: 0 0 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 1 1 0 
iteration = 0 	 best= 22.400000	stackLen: 22 => V4  V5  V5  V4  1.000000  * - i i + * empty: 0 0 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 1 1 0 
BEST SOLUTION! cost=22.1824 stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 2 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 3 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 4 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 5 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 6 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 7 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 8 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 9 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 10 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 11 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
iteration = 12 	 best= 22.182433	stackLen: 22 => V0  1.000000  e 1.000000  V5  * 1.000000  * 1.000000  * / + V2  * empty: 0 1 0 0 1 1 0 1 1 0 1 0 1 0 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=21.0436 stackLen: 22 => V0  1.000000  1.000000  + e 1.000000  V5  V2  + V4  + * 1.000000  r * / + V2  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.043604	stackLen: 22 => V0  1.000000  1.000000  + e 1.000000  V5  V2  + V4  + * 1.000000  r * / + V2  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.043604	stackLen: 22 => V0  1.000000  1.000000  + e 1.000000  V5  V2  + V4  + * 1.000000  r * / + V2  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.043604	stackLen: 22 => V0  1.000000  1.000000  + e 1.000000  V5  V2  + V4  + * 1.000000  r * / + V2  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.043604	stackLen: 22 => V0  1.000000  1.000000  + e 1.000000  V5  V2  + V4  + * 1.000000  r * / + V2  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.7381 stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 4 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 5 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 6 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 7 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 8 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 9 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 10 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 11 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 12 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 13 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 14 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 15 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 16 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 17 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 18 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 19 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 20 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 21 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 22 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 23 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 24 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 25 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 26 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
iteration = 27 	 best= 18.738122	stackLen: 22 => V3  1.000000  e r 1.000000  V4  V3  - V5  + * / * empty: 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=17.6902 stackLen: 22 => V4  1.000000  e r 1.000000  V4  V4  - V4  + V3  V3  - - V5  - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 17.690204	stackLen: 22 => V4  1.000000  e r 1.000000  V4  V4  - V4  + V3  V3  - - V5  - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 17.690204	stackLen: 22 => V4  1.000000  e r 1.000000  V4  V4  - V4  + V3  V3  - - V5  - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 17.690204	stackLen: 22 => V4  1.000000  e r 1.000000  V4  V4  - V4  + V3  V3  - - V5  - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 17.690204	stackLen: 22 => V4  1.000000  e r 1.000000  V4  V4  - V4  + V3  V3  - - V5  - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 17.690204	stackLen: 22 => V4  1.000000  e r 1.000000  V4  V4  - V4  + V3  V3  - - V5  - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 17.690204	stackLen: 22 => V4  1.000000  e r 1.000000  V4  V4  - V4  + V3  V3  - - V5  - * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=16.2041 stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 0 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 1 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 2 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 3 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 4 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 5 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 6 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 7 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 8 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 9 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 10 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 11 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 12 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 13 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 14 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 15 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 16 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
iteration = 17 	 best= 16.204056	stackLen: 22 => V3  V2  * a i a r r r V4  V5  V0  - - * empty: 0 0 1 0 0 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 
BEST SOLUTION! cost=15.1375 stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.137464	stackLen: 22 => V1  V3  * V2  * i i V4  * a i r r i r V4  V5  V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [49 86 50 6 80 65 9 66 20 52 ]
BEST SOLUTION! cost=13.8 stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 11 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 12 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 13 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 14 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 15 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 16 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 17 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 18 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 19 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 20 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 21 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 22 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 23 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 24 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 25 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 26 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 27 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 28 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 29 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 30 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 31 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 32 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 33 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 34 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 35 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 36 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 37 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 38 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 39 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 40 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 41 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 42 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 43 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 44 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 45 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 46 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 47 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 48 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 49 	 best= 13.800000	stackLen: 30 => 1.000000  V4  1.000000  1.000000  * V2  i V2  V1  - - / * * empty: 0 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [62 41 84 21 90 87 89 55 19 8 ]
BEST SOLUTION! cost=43.9012 stackLen: 45 => V4  V1  V0  V3  a a V3  a 1.000000  * 1.000000  V3  V2  - * * / * * * empty: 0 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 43.901181	stackLen: 45 => V4  V1  V0  V3  a a V3  a 1.000000  * 1.000000  V3  V2  - * * / * * * empty: 0 0 1 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 0 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=24 stackLen: 45 => 1.000000  V4  V3  V3  V5  + - * * empty: 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0 0 1 
iteration = 0 	 best= 24.000000	stackLen: 45 => 1.000000  V4  V3  V3  V5  + - * * empty: 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0 0 1 
iteration = 1 	 best= 24.000000	stackLen: 45 => 1.000000  V4  V3  V3  V5  + - * * empty: 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0 0 1 
iteration = 2 	 best= 24.000000	stackLen: 45 => 1.000000  V4  V3  V3  V5  + - * * empty: 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0 0 1 
iteration = 3 	 best= 24.000000	stackLen: 45 => 1.000000  V4  V3  V3  V5  + - * * empty: 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0 0 1 
iteration = 4 	 best= 24.000000	stackLen: 45 => 1.000000  V4  V3  V3  V5  + - * * empty: 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0 0 1 
BEST SOLUTION! cost=19.7344 stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 0 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 1 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 2 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 3 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 4 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 5 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 6 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 7 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 8 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 9 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 10 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 11 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 12 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 13 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 14 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 15 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 16 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 17 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 18 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 19 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
iteration = 20 	 best= 19.734416	stackLen: 45 => 1.000000  1.000000  e * 1.000000  1.000000  + / V4  / V5  * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 
BEST SOLUTION! cost=19.5691 stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 19.569132	stackLen: 45 => 1.000000  1.000000  1.000000  / e / 1.000000  1.000000  1.000000  + 1.000000  + / V2  V4  + / V5  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=11.6
stackLen: 45 => 1.000000  V1  1.000000  * * 1.000000  V2  / V2  V4  + V2  a V4  * r r V4  V4  * r V4  V4  r V4  * V4  empty: 0 1 1 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 1 
trueStackSize=5
printSolution2: v4
Tempo de execucao: 786.036 segundos
FIM
