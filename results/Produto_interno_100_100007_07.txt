Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [69 91 71 65 63 38 97 37 41 72 ]
BEST SOLUTION! cost=35.4 stackLen: 30 => 1.000000  V4  / V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 35.400000	stackLen: 30 => 1.000000  V4  / V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 35.400000	stackLen: 30 => 1.000000  V4  / V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 35.400000	stackLen: 30 => 1.000000  V4  / V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 35.400000	stackLen: 30 => 1.000000  V4  / V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=35.3 stackLen: 30 => V1  V2  * 1.000000  a i V1  1.000000  V0  / V5  + * * + empty: 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 35.300000	stackLen: 30 => V1  V2  * 1.000000  a i V1  1.000000  V0  / V5  + * * + empty: 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 35.300000	stackLen: 30 => V1  V2  * 1.000000  a i V1  1.000000  V0  / V5  + * * + empty: 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 2 	 best= 35.300000	stackLen: 30 => V1  V2  * 1.000000  a i V1  1.000000  V0  / V5  + * * + empty: 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 3 	 best= 35.300000	stackLen: 30 => V1  V2  * 1.000000  a i V1  1.000000  V0  / V5  + * * + empty: 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 4 	 best= 35.300000	stackLen: 30 => V1  V2  * 1.000000  a i V1  1.000000  V0  / V5  + * * + empty: 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
iteration = 5 	 best= 35.300000	stackLen: 30 => V1  V2  * 1.000000  a i V1  1.000000  V0  / V5  + * * + empty: 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=35.2 stackLen: 30 => V1  V4  * 1.000000  a i V1  V1  V1  - + 1.000000  V0  / V5  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 35.200000	stackLen: 30 => V1  V4  * 1.000000  a i V1  V1  V1  - + 1.000000  V0  / V5  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 35.200000	stackLen: 30 => V1  V4  * 1.000000  a i V1  V1  V1  - + 1.000000  V0  / V5  + * * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=34.2 stackLen: 30 => 1.000000  V0  1.000000  * V2  V1  - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 
iteration = 0 	 best= 34.200000	stackLen: 30 => 1.000000  V0  1.000000  * V2  V1  - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 
iteration = 1 	 best= 34.200000	stackLen: 30 => 1.000000  V0  1.000000  * V2  V1  - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 
iteration = 2 	 best= 34.200000	stackLen: 30 => 1.000000  V0  1.000000  * V2  V1  - * * empty: 0 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 
BEST SOLUTION! cost=32.4 stackLen: 30 => 1.000000  1.000000  * V0  * V1  V5  1.000000  * + * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 32.400000	stackLen: 30 => 1.000000  1.000000  * V0  * V1  V5  1.000000  * + * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 32.400000	stackLen: 30 => 1.000000  1.000000  * V0  * V1  V5  1.000000  * + * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=29.6 stackLen: 30 => 1.000000  V0  V4  1.000000  V2  / - V1  - * / empty: 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 0 0 1 
iteration = 0 	 best= 29.600000	stackLen: 30 => 1.000000  V0  V4  1.000000  V2  / - V1  - * / empty: 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 0 0 1 
iteration = 1 	 best= 29.600000	stackLen: 30 => 1.000000  V0  V4  1.000000  V2  / - V1  - * / empty: 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 0 0 1 
iteration = 2 	 best= 29.600000	stackLen: 30 => 1.000000  V0  V4  1.000000  V2  / - V1  - * / empty: 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 0 0 1 
iteration = 3 	 best= 29.600000	stackLen: 30 => 1.000000  V0  V4  1.000000  V2  / - V1  - * / empty: 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 0 0 1 
iteration = 4 	 best= 29.600000	stackLen: 30 => 1.000000  V0  V4  1.000000  V2  / - V1  - * / empty: 0 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 0 0 1 1 0 0 1 
BEST SOLUTION! cost=20.7 stackLen: 30 => V5  i V4  V5  V5  a V1  / * i V0  i V1  + * i + * empty: 0 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 20.700000	stackLen: 30 => V5  i V4  V5  V5  a V1  / * i V0  i V1  + * i + * empty: 0 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 20.700000	stackLen: 30 => V5  i V4  V5  V5  a V1  / * i V0  i V1  + * i + * empty: 0 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 20.700000	stackLen: 30 => V5  i V4  V5  V5  a V1  / * i V0  i V1  + * i + * empty: 0 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 20.700000	stackLen: 30 => V5  i V4  V5  V5  a V1  / * i V0  i V1  + * i + * empty: 0 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 20.700000	stackLen: 30 => V5  i V4  V5  V5  a V1  / * i V0  i V1  + * i + * empty: 0 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 20.700000	stackLen: 30 => V5  i V4  V5  V5  a V1  / * i V0  i V1  + * i + * empty: 0 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=17.075 stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 7 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 8 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 9 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 10 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 11 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 12 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 13 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 14 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 15 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 16 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 17 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 18 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 19 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 20 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 21 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 22 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 23 	 best= 17.075000	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  + a V1  / * i V0  i 1.000000  V1  / + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=16.5333 stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 16.533333	stackLen: 30 => V5  i V4  V5  V5  + V5  + V5  V5  V5  + + a V1  V1  + / * i V0  i 1.000000  V1  * + * i + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [41 75 82 6 85 29 3 72 47 86 ]
BEST SOLUTION! cost=37.8837 stackLen: 30 => V1  V5  V5  a V2  a r V2  / a V1  / / * * V4  * empty: 0 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 
iteration = 0 	 best= 37.883651	stackLen: 30 => V1  V5  V5  a V2  a r V2  / a V1  / / * * V4  * empty: 0 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 
iteration = 1 	 best= 37.883651	stackLen: 30 => V1  V5  V5  a V2  a r V2  / a V1  / / * * V4  * empty: 0 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 
iteration = 2 	 best= 37.883651	stackLen: 30 => V1  V5  V5  a V2  a r V2  / a V1  / / * * V4  * empty: 0 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 0 1 0 1 0 0 0 0 0 1 0 0 0 0 
BEST SOLUTION! cost=27.6 stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 0 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 1 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 2 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 3 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 4 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 5 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 6 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 7 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 8 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 9 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 10 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 11 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 12 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 13 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 14 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 15 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 16 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 17 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 18 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 19 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 20 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 21 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 22 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 23 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 24 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 25 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 26 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 27 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 28 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 29 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 30 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 31 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 32 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 33 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 34 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 35 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 36 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 37 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 38 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 39 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 40 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 41 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 42 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 43 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 44 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 45 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 46 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 47 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 48 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
iteration = 49 	 best= 27.600000	stackLen: 30 => V2  1.000000  * 1.000000  a 1.000000  V3  * * * empty: 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 1 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [8 31 6 78 7 69 41 59 26 10 ]
BEST SOLUTION! cost=27.8 stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  + V4  - V5  * empty: 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 27.800000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  + V4  - V5  * empty: 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 0 0 0 
iteration = 1 	 best= 27.800000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  + V4  - V5  * empty: 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 0 0 0 
iteration = 2 	 best= 27.800000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  + V4  - V5  * empty: 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 0 0 0 
iteration = 3 	 best= 27.800000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  + V4  - V5  * empty: 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 0 0 0 
iteration = 4 	 best= 27.800000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  + V4  - V5  * empty: 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 0 0 0 
iteration = 5 	 best= 27.800000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  + V4  - V5  * empty: 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=20.5 stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.500000	stackLen: 30 => V5  a i r 1.000000  / V4  a * V0  V0  + + V4  V4  - - V5  * empty: 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.2 stackLen: 30 => V5  V5  + a i r 1.000000  1.000000  * / 1.000000  a * V0  V0  * * V4  V4  V4  + - - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 20.200000	stackLen: 30 => V5  V5  + a i r 1.000000  1.000000  * / 1.000000  a * V0  V0  * * V4  V4  V4  + - - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 20.200000	stackLen: 30 => V5  V5  + a i r 1.000000  1.000000  * / 1.000000  a * V0  V0  * * V4  V4  V4  + - - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 20.200000	stackLen: 30 => V5  V5  + a i r 1.000000  1.000000  * / 1.000000  a * V0  V0  * * V4  V4  V4  + - - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 20.200000	stackLen: 30 => V5  V5  + a i r 1.000000  1.000000  * / 1.000000  a * V0  V0  * * V4  V4  V4  + - - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 20.200000	stackLen: 30 => V5  V5  + a i r 1.000000  1.000000  * / 1.000000  a * V0  V0  * * V4  V4  V4  + - - V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=18.8 stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 1 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 2 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 3 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 4 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 5 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 6 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 7 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 8 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 9 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 10 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 11 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 12 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 13 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 14 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 15 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 16 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 17 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
iteration = 18 	 best= 18.800000	stackLen: 30 => 1.000000  1.000000  / V5  1.000000  * V0  a r V4  + + * V2  * empty: 0 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=16.6 stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 0 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 1 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 2 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 3 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 4 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 5 	 best= 16.600000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
BEST SOLUTION! cost=14.55 stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 0 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 1 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 2 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 3 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 4 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 5 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 6 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 7 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 8 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 9 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 10 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 11 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 12 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 13 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 14 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 15 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 16 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 17 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 18 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 19 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 20 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 21 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 22 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 23 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 24 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 25 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 26 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 27 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 28 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 29 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 30 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 31 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 32 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 33 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 34 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 35 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 36 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 37 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 38 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 39 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 40 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 41 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 42 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 43 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 44 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 45 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 46 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 47 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 48 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
iteration = 49 	 best= 14.550000	stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [28 60 75 86 37 4 59 90 88 42 ]
BEST SOLUTION! cost=37.5 stackLen: 30 => 1.000000  i V5  V3  1.000000  1.000000  i V4  * / - * / empty: 0 1 0 1 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 37.500000	stackLen: 30 => 1.000000  i V5  V3  1.000000  1.000000  i V4  * / - * / empty: 0 1 0 1 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=32.8266 stackLen: 30 => V1  V3  V1  1.000000  e r V5  * a V2  / 1.000000  V1  / * * - * empty: 0 0 0 1 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 32.826585	stackLen: 30 => V1  V3  V1  1.000000  e r V5  * a V2  / 1.000000  V1  / * * - * empty: 0 0 0 1 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=28.5033 stackLen: 30 => 1.000000  a 1.000000  e r * V3  1.000000  V1  / V2  - * / empty: 0 1 1 1 0 0 0 0 1 1 1 0 1 1 1 1 0 1 1 1 0 0 1 1 0 0 0 1 0 0 
COST2 IS BETTER!!!26.6731
iteration = 0 	 best= 26.673062	stackLen: 30 => 1.000000  a 1.000000  e r * V3  1.000000  V1  / V2  V2  + - * / empty: 0 1 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.673062	stackLen: 30 => 1.000000  a 1.000000  e r * V3  1.000000  V1  / V2  V2  + - * / empty: 0 1 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.673062	stackLen: 30 => 1.000000  a 1.000000  e r * V3  1.000000  V1  / V2  V2  + - * / empty: 0 1 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.673062	stackLen: 30 => 1.000000  a 1.000000  e r * V3  1.000000  V1  / V2  V2  + - * / empty: 0 1 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.673062	stackLen: 30 => 1.000000  a 1.000000  e r * V3  1.000000  V1  / V2  V2  + - * / empty: 0 1 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.673062	stackLen: 30 => 1.000000  a 1.000000  e r * V3  1.000000  V1  / V2  V2  + - * / empty: 0 1 0 0 0 0 1 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=23.4925 stackLen: 30 => 1.000000  e 1.000000  1.000000  1.000000  * / e r r V3  1.000000  V1  / V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
iteration = 0 	 best= 23.492489	stackLen: 30 => 1.000000  e 1.000000  1.000000  1.000000  * / e r r V3  1.000000  V1  / V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
iteration = 1 	 best= 23.492489	stackLen: 30 => 1.000000  e 1.000000  1.000000  1.000000  * / e r r V3  1.000000  V1  / V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
iteration = 2 	 best= 23.492489	stackLen: 30 => 1.000000  e 1.000000  1.000000  1.000000  * / e r r V3  1.000000  V1  / V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
iteration = 3 	 best= 23.492489	stackLen: 30 => 1.000000  e 1.000000  1.000000  1.000000  * / e r r V3  1.000000  V1  / V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
iteration = 4 	 best= 23.492489	stackLen: 30 => 1.000000  e 1.000000  1.000000  1.000000  * / e r r V3  1.000000  V1  / V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
iteration = 5 	 best= 23.492489	stackLen: 30 => 1.000000  e 1.000000  1.000000  1.000000  * / e r r V3  1.000000  V1  / V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 1 
BEST SOLUTION! cost=20.6581 stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 0 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 1 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 2 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 3 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 4 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 5 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 6 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 7 	 best= 20.658101	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  * / e r r V3  V4  V1  - V2  V2  + - * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
BEST SOLUTION! cost=20.2483 stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.248327	stackLen: 30 => 1.000000  e 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / / a r r V3  V4  V1  - V4  V2  V2  V2  + + + - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.8264 stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.826413	stackLen: 30 => 1.000000  e 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  / / a r r V3  V4  V1  - V4  V2  V4  V2  + + - - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [29 79 6 72 19 30 14 3 24 91 ]
BEST SOLUTION! cost=57.1 stackLen: 30 => V4  a a r V2  V2  * - 1.000000  * empty: 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 57.100000	stackLen: 30 => V4  a a r V2  V2  * - 1.000000  * empty: 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 57.100000	stackLen: 30 => V4  a a r V2  V2  * - 1.000000  * empty: 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=56.0275 stackLen: 30 => 1.000000  e V1  a V1  a / V0  V2  - V0  i + V0  + V1  + / a / empty: 0 0 1 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 1 1 0 0 0 
iteration = 0 	 best= 56.027526	stackLen: 30 => 1.000000  e V1  a V1  a / V0  V2  - V0  i + V0  + V1  + / a / empty: 0 0 1 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 1 1 0 0 0 
iteration = 1 	 best= 56.027526	stackLen: 30 => 1.000000  e V1  a V1  a / V0  V2  - V0  i + V0  + V1  + / a / empty: 0 0 1 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 1 1 0 0 0 
iteration = 2 	 best= 56.027526	stackLen: 30 => 1.000000  e V1  a V1  a / V0  V2  - V0  i + V0  + V1  + / a / empty: 0 0 1 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 1 1 0 1 1 0 0 0 
BEST SOLUTION! cost=40.8 stackLen: 30 => 1.000000  V4  1.000000  V5  * 1.000000  r a i 1.000000  / * * / empty: 0 1 0 1 0 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 40.800000	stackLen: 30 => 1.000000  V4  1.000000  V5  * 1.000000  r a i 1.000000  / * * / empty: 0 1 0 1 0 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 40.800000	stackLen: 30 => 1.000000  V4  1.000000  V5  * 1.000000  r a i 1.000000  / * * / empty: 0 1 0 1 0 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 
iteration = 2 	 best= 40.800000	stackLen: 30 => 1.000000  V4  1.000000  V5  * 1.000000  r a i 1.000000  / * * / empty: 0 1 0 1 0 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 0 0 0 
BEST SOLUTION! cost=37.1 stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 6 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 7 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 8 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 9 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 10 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 11 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
iteration = 12 	 best= 37.100000	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  V0  * / + - V4  * empty: 0 1 1 0 0 0 0 1 1 1 1 0 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=36.9667 stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  1.000000  + + 1.000000  V0  V0  + * / + - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 36.966667	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  1.000000  + + 1.000000  V0  V0  + * / + - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 36.966667	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  1.000000  + + 1.000000  V0  V0  + * / + - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 36.966667	stackLen: 30 => V2  V1  1.000000  V5  * - 1.000000  1.000000  1.000000  + + 1.000000  V0  V0  + * / + - V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=33.1 stackLen: 30 => 1.000000  V5  i V3  V4  V1  - V0  - - * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 33.100000	stackLen: 30 => 1.000000  V5  i V3  V4  V1  - V0  - - * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 33.100000	stackLen: 30 => 1.000000  V5  i V3  V4  V1  - V0  - - * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 33.100000	stackLen: 30 => 1.000000  V5  i V3  V4  V1  - V0  - - * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 33.100000	stackLen: 30 => 1.000000  V5  i V3  V4  V1  - V0  - - * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 33.100000	stackLen: 30 => 1.000000  V5  i V3  V4  V1  - V0  - - * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 33.100000	stackLen: 30 => 1.000000  V5  i V3  V4  V1  - V0  - - * / empty: 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=28.2 stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 28.200000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 28.200000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 28.200000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 28.200000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 28.200000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 28.200000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=27.35 stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  V4  + + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 27.350000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  V4  + + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 27.350000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  V4  + + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 27.350000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  V4  + + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 27.350000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  V4  + + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 27.350000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  V4  + + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 27.350000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  V5  * / 1.000000  * V5  i V3  - V4  V4  V4  + + - V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=23.25 stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 23.250000	stackLen: 30 => 1.000000  1.000000  1.000000  * + 1.000000  1.000000  * V5  * / 1.000000  V2  V5  i V3  - V4  - - V4  V4  + + / V1  - V0  - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=14.55
stackLen: 30 => 1.000000  1.000000  1.000000  + 1.000000  1.000000  / V5  V5  + 1.000000  * V0  V0  + V0  + a r V4  + + * V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 
trueStackSize=27
printSolution2: (((v2 * (((v4 + \sqrt{{(v0 + (v0 + v0))^2}}) + (1 * (v5 + v5))) * (1/1)))/(1 + 1))/1)
Tempo de execucao: 1049.02 segundos
FIM
