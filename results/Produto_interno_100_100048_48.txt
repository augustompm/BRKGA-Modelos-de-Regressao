Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [83 67 55 28 45 19 86 79 81 36 ]
BEST SOLUTION! cost=33 stackLen: 30 => 1.000000  1.000000  + V2  V5  * * 1.000000  1.000000  1.000000  / i 1.000000  / / * empty: 0 1 0 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 
iteration = 0 	 best= 33.000000	stackLen: 30 => 1.000000  1.000000  + V2  V5  * * 1.000000  1.000000  1.000000  / i 1.000000  / / * empty: 0 1 0 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 
iteration = 1 	 best= 33.000000	stackLen: 30 => 1.000000  1.000000  + V2  V5  * * 1.000000  1.000000  1.000000  / i 1.000000  / / * empty: 0 1 0 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 0 0 1 0 0 1 1 1 0 0 1 0 
BEST SOLUTION! cost=30.2167 stackLen: 30 => V1  a 1.000000  V0  1.000000  V3  1.000000  * a V1  a V2  a / a r a / r * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 30.216667	stackLen: 30 => V1  a 1.000000  V0  1.000000  V3  1.000000  * a V1  a V2  a / a r a / r * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 30.216667	stackLen: 30 => V1  a 1.000000  V0  1.000000  V3  1.000000  * a V1  a V2  a / a r a / r * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 30.216667	stackLen: 30 => V1  a 1.000000  V0  1.000000  V3  1.000000  * a V1  a V2  a / a r a / r * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 30.216667	stackLen: 30 => V1  a 1.000000  V0  1.000000  V3  1.000000  * a V1  a V2  a / a r a / r * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 30.216667	stackLen: 30 => V1  a 1.000000  V0  1.000000  V3  1.000000  * a V1  a V2  a / a r a / r * * * * empty: 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25.3 stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 3 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 4 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 5 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 6 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 7 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 8 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 9 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 10 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 11 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 12 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 13 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 14 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
iteration = 15 	 best= 25.300000	stackLen: 30 => 1.000000  V5  / V4  1.000000  V2  * + * empty: 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=23.35 stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 23.350000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  + + V2  * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=23.2 stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  1.000000  - + * V2  V0  + V2  V2  + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 23.200000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  1.000000  - + * V2  V0  + V2  V2  + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 23.200000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  1.000000  - + * V2  V0  + V2  V2  + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 23.200000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  1.000000  - + * V2  V0  + V2  V2  + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 23.200000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  1.000000  - + * V2  V0  + V2  V2  + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 23.200000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  1.000000  - + * V2  V0  + V2  V2  + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 23.200000	stackLen: 30 => 1.000000  1.000000  + V5  / V4  1.000000  1.000000  1.000000  1.000000  - + * V2  V0  + V2  V2  + + * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.9 stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.900000	stackLen: 30 => 1.000000  1.000000  + V5  / V2  V4  + 1.000000  1.000000  1.000000  1.000000  / / * V3  V0  + V0  V2  V2  V0  + + - + / + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [46 31 35 75 47 36 18 33 26 68 ]
BEST SOLUTION! cost=39.3121 stackLen: 30 => V1  a V5  V2  V3  * a 1.000000  1.000000  + r V3  V2  a * / / * * empty: 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 39.312055	stackLen: 30 => V1  a V5  V2  V3  * a 1.000000  1.000000  + r V3  V2  a * / / * * empty: 0 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=32.2 stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 4 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 5 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 6 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
iteration = 7 	 best= 32.200000	stackLen: 30 => 1.000000  V0  a V0  a r / V0  V1  V1  a r * * * * empty: 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=30.3779 stackLen: 30 => 1.000000  1.000000  1.000000  - + e r 1.000000  - 1.000000  i V1  1.000000  r r r a r a V1  V5  - V4  - / V5  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 30.377928	stackLen: 30 => 1.000000  1.000000  1.000000  - + e r 1.000000  - 1.000000  i V1  1.000000  r r r a r a V1  V5  - V4  - / V5  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 30.377928	stackLen: 30 => 1.000000  1.000000  1.000000  - + e r 1.000000  - 1.000000  i V1  1.000000  r r r a r a V1  V5  - V4  - / V5  - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=29.9316 stackLen: 30 => 1.000000  i i e V0  / 1.000000  * 1.000000  e V0  / + V0  * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 29.931643	stackLen: 30 => 1.000000  i i e V0  / 1.000000  * 1.000000  e V0  / + V0  * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 29.931643	stackLen: 30 => 1.000000  i i e V0  / 1.000000  * 1.000000  e V0  / + V0  * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 29.931643	stackLen: 30 => 1.000000  i i e V0  / 1.000000  * 1.000000  e V0  / + V0  * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 29.931643	stackLen: 30 => 1.000000  i i e V0  / 1.000000  * 1.000000  e V0  / + V0  * empty: 0 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=25.7 stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  - * * * empty: 0 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 25.700000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  - * * * empty: 0 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 25.700000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  - * * * empty: 0 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 25.700000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  - * * * empty: 0 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 25.700000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  - * * * empty: 0 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 25.700000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  - * * * empty: 0 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 25.700000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  - * * * empty: 0 1 1 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=20.9 stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.900000	stackLen: 30 => 1.000000  1.000000  V4  1.000000  * 1.000000  V5  V0  - * V3  V3  + - * * * empty: 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.7 stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 0 	 best= 20.700000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 1 	 best= 20.700000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 2 	 best= 20.700000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 3 	 best= 20.700000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 4 	 best= 20.700000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 5 	 best= 20.700000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
BEST SOLUTION! cost=20.2 stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 0 	 best= 20.200000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 1 	 best= 20.200000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 2 	 best= 20.200000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 3 	 best= 20.200000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 4 	 best= 20.200000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
iteration = 5 	 best= 20.200000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V0  V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 
BEST SOLUTION! cost=19.9 stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.900000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - 1.000000  V3  V3  + V3  + * - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.3 stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.300000	stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [98 96 35 60 62 46 2 11 85 54 ]
BEST SOLUTION! cost=37 stackLen: 30 => V3  V1  V4  V3  - i * * 1.000000  i V5  a * r 1.000000  1.000000  - / * empty: 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 1 0 0 0 
iteration = 0 	 best= 37.000000	stackLen: 30 => V3  V1  V4  V3  - i * * 1.000000  i V5  a * r 1.000000  1.000000  - / * empty: 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 1 0 0 0 
BEST SOLUTION! cost=24.3 stackLen: 30 => V4  a 1.000000  V2  V0  1.000000  V4  i V4  * * * * * / empty: 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 24.300000	stackLen: 30 => V4  a 1.000000  V2  V0  1.000000  V4  i V4  * * * * * / empty: 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 24.300000	stackLen: 30 => V4  a 1.000000  V2  V0  1.000000  V4  i V4  * * * * * / empty: 0 1 0 1 1 1 1 0 1 1 0 0 0 0 1 0 1 1 0 1 1 1 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=23.7 stackLen: 30 => V2  i a r V0  1.000000  * * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 
iteration = 0 	 best= 23.700000	stackLen: 30 => V2  i a r V0  1.000000  * * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 
iteration = 1 	 best= 23.700000	stackLen: 30 => V2  i a r V0  1.000000  * * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 
iteration = 2 	 best= 23.700000	stackLen: 30 => V2  i a r V0  1.000000  * * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 
iteration = 3 	 best= 23.700000	stackLen: 30 => V2  i a r V0  1.000000  * * empty: 0 1 1 1 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 
BEST SOLUTION! cost=23.6183 stackLen: 30 => V4  1.000000  * V2  1.000000  e e V4  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 
iteration = 0 	 best= 23.618287	stackLen: 30 => V4  1.000000  * V2  1.000000  e e V4  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 
iteration = 1 	 best= 23.618287	stackLen: 30 => V4  1.000000  * V2  1.000000  e e V4  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 
iteration = 2 	 best= 23.618287	stackLen: 30 => V4  1.000000  * V2  1.000000  e e V4  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 
iteration = 3 	 best= 23.618287	stackLen: 30 => V4  1.000000  * V2  1.000000  e e V4  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 
iteration = 4 	 best= 23.618287	stackLen: 30 => V4  1.000000  * V2  1.000000  e e V4  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 
iteration = 5 	 best= 23.618287	stackLen: 30 => V4  1.000000  * V2  1.000000  e e V4  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 1 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 0 0 1 0 0 0 1 1 
BEST SOLUTION! cost=23.2045 stackLen: 30 => V4  1.000000  * V2  1.000000  1.000000  / 1.000000  * e e V5  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 23.204462	stackLen: 30 => V4  1.000000  * V2  1.000000  1.000000  / 1.000000  * e e V5  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 23.204462	stackLen: 30 => V4  1.000000  * V2  1.000000  1.000000  / 1.000000  * e e V5  / V4  - * V4  a V0  / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=21.4319 stackLen: 30 => V1  1.000000  e r V4  1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.431861	stackLen: 30 => V1  1.000000  e r V4  1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.431861	stackLen: 30 => V1  1.000000  e r V4  1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.431861	stackLen: 30 => V1  1.000000  e r V4  1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.431861	stackLen: 30 => V1  1.000000  e r V4  1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.431861	stackLen: 30 => V1  1.000000  e r V4  1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.431861	stackLen: 30 => V1  1.000000  e r V4  1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.2172 stackLen: 30 => V1  1.000000  e V3  V4  V4  + V4  + - 1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.217177	stackLen: 30 => V1  1.000000  e V3  V4  V4  + V4  + - 1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.217177	stackLen: 30 => V1  1.000000  e V3  V4  V4  + V4  + - 1.000000  e V5  / - V1  1.000000  * 1.000000  * - / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.8675 stackLen: 30 => V1  V1  + a i V3  a / e V2  1.000000  a r V4  / V2  - * / empty: 0 0 1 0 0 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 20.867455	stackLen: 30 => V1  V1  + a i V3  a / e V2  1.000000  a r V4  / V2  - * / empty: 0 0 1 0 0 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=20.6 stackLen: 30 => V2  V0  + V0  - V2  V5  V5  a r + V0  + V0  - - * empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 20.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  a r + V0  + V0  - - * empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 20.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  a r + V0  + V0  - - * empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 
iteration = 2 	 best= 20.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  a r + V0  + V0  - - * empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 
iteration = 3 	 best= 20.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  a r + V0  + V0  - - * empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 
iteration = 4 	 best= 20.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  a r + V0  + V0  - - * empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 
iteration = 5 	 best= 20.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  a r + V0  + V0  - - * empty: 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=18.6 stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 18.600000	stackLen: 30 => V2  V0  + V0  - V2  V5  V5  + V5  V5  + a r + V0  + V0  - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.2 stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.200000	stackLen: 30 => V2  V0  + V0  - V4  V5  V5  + 1.000000  1.000000  1.000000  * V5  / * a r + V0  V0  + V0  V0  - - - - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [24 5 76 3 16 72 93 74 20 42 ]
BEST SOLUTION! cost=31.9 stackLen: 30 => 1.000000  1.000000  V1  V5  1.000000  i V3  a r r a / - * * / empty: 0 1 1 0 1 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 31.900000	stackLen: 30 => 1.000000  1.000000  V1  V5  1.000000  i V3  a r r a / - * * / empty: 0 1 1 0 1 1 0 1 0 1 1 0 0 0 1 1 0 0 0 0 1 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=24.6 stackLen: 30 => 1.000000  a V5  1.000000  a V2  1.000000  * / * * empty: 0 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 1 
iteration = 0 	 best= 24.600000	stackLen: 30 => 1.000000  a V5  1.000000  a V2  1.000000  * / * * empty: 0 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 1 
BEST SOLUTION! cost=19.0953 stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 6 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 7 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 8 	 best= 19.095268	stackLen: 30 => 1.000000  e r V1  V3  V3  + V0  V5  - + V5  a r - * / empty: 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=16.0691 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 16.069124	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / + r e r V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
BEST SOLUTION! cost=15.9 stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.900000	stackLen: 30 => 1.000000  1.000000  1.000000  a / 1.000000  * + i i i V1  V3  V3  + V0  V0  - V0  + V5  - + V5  a r - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [40 84 4 98 94 67 92 19 38 12 ]
BEST SOLUTION! cost=37.8229 stackLen: 30 => V3  V0  - V1  V2  - a i V5  / V5  V0  i V1  - - * * V5  * empty: 0 0 0 1 1 1 0 0 1 0 0 0 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 37.822929	stackLen: 30 => V3  V0  - V1  V2  - a i V5  / V5  V0  i V1  - - * * V5  * empty: 0 0 0 1 1 1 0 0 1 0 0 0 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=31.8545 stackLen: 30 => V0  V3  1.000000  1.000000  / 1.000000  + V3  V1  V3  a 1.000000  / * * + r * * empty: 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 1 
iteration = 0 	 best= 31.854498	stackLen: 30 => V0  V3  1.000000  1.000000  / 1.000000  + V3  V1  V3  a 1.000000  / * * + r * * empty: 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 1 
iteration = 1 	 best= 31.854498	stackLen: 30 => V0  V3  1.000000  1.000000  / 1.000000  + V3  V1  V3  a 1.000000  / * * + r * * empty: 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 1 
iteration = 2 	 best= 31.854498	stackLen: 30 => V0  V3  1.000000  1.000000  / 1.000000  + V3  V1  V3  a 1.000000  / * * + r * * empty: 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 1 
BEST SOLUTION! cost=27.7 stackLen: 30 => 1.000000  V0  V4  + 1.000000  V3  * * * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 27.700000	stackLen: 30 => 1.000000  V0  V4  + 1.000000  V3  * * * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 
iteration = 1 	 best= 27.700000	stackLen: 30 => 1.000000  V0  V4  + 1.000000  V3  * * * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 
iteration = 2 	 best= 27.700000	stackLen: 30 => 1.000000  V0  V4  + 1.000000  V3  * * * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 
iteration = 3 	 best= 27.700000	stackLen: 30 => 1.000000  V0  V4  + 1.000000  V3  * * * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 
iteration = 4 	 best= 27.700000	stackLen: 30 => 1.000000  V0  V4  + 1.000000  V3  * * * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 
iteration = 5 	 best= 27.700000	stackLen: 30 => 1.000000  V0  V4  + 1.000000  V3  * * * empty: 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=24 stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 24.000000	stackLen: 30 => 1.000000  1.000000  1.000000  / * V0  V4  V4  + + 1.000000  V0  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.5 stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 15.500000	stackLen: 30 => 1.000000  1.000000  / 1.000000  / 1.000000  1.000000  * * V4  V3  V4  + + * V0  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.3
stackLen: 30 => 1.000000  1.000000  1.000000  + V4  1.000000  * 1.000000  V5  V5  + V1  V0  - V0  + - V3  V3  V3  + V3  + + - * * / * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((((v3 + (v3 + v3)) + v3) - ((v0 + (v0 - v1)) - (v5 + v5))) * 1) * (1 * v4))/(1 + 1)) * 1)
Tempo de execucao: 1140.33 segundos
FIM
