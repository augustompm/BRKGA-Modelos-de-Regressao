Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm'
has_solution='HAS_SOLUTION' => ' v0 v1 - a v2 v3 - a + r'
SOLUTION IS: ' v0 v1 - a v2 v3 - a + r'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
4 40 1
-10.00	8.00	-9.00	9.00	25.46
-1.00	-5.00	-1.00	4.00	6.40
-3.00	-7.00	4.00	5.00	4.12
8.00	-5.00	-5.00	4.00	15.81
3.00	-5.00	1.00	-8.00	12.04
-5.00	-7.00	10.00	0.00	10.20
1.00	10.00	-10.00	1.00	14.21
6.00	-3.00	4.00	-3.00	11.40
-7.00	5.00	-3.00	-6.00	12.37
0.00	-6.00	-4.00	-1.00	6.71
10.00	6.00	-9.00	0.00	9.85
-7.00	5.00	-7.00	-10.00	12.37
4.00	-1.00	-5.00	-4.00	5.10
8.00	3.00	0.00	7.00	8.60
8.00	-1.00	3.00	0.00	9.49
-5.00	7.00	4.00	4.00	12.00
-6.00	-7.00	-2.00	1.00	3.16
1.00	0.00	-5.00	-5.00	1.00
3.00	-1.00	-3.00	-2.00	4.12
-1.00	5.00	6.00	-5.00	12.53
2.00	-6.00	3.00	8.00	9.43
-3.00	10.00	-10.00	7.00	21.40
-1.00	4.00	10.00	10.00	5.00
0.00	4.00	-1.00	-1.00	4.00
10.00	-6.00	6.00	6.00	16.00
-4.00	-2.00	3.00	-5.00	8.25
-2.00	-4.00	2.00	-2.00	4.47
-4.00	7.00	-5.00	5.00	14.87
2.00	-10.00	4.00	9.00	13.00
4.00	0.00	8.00	10.00	4.47
1.00	9.00	10.00	-9.00	20.62
-8.00	2.00	3.00	-1.00	10.77
1.00	-7.00	-8.00	1.00	12.04
8.00	8.00	4.00	-4.00	8.00
5.00	-7.00	2.00	-3.00	13.00
-10.00	-9.00	-9.00	-3.00	6.08
5.00	-3.00	-6.00	-7.00	8.06
-3.00	1.00	-4.00	-9.00	6.40
0.00	-3.00	7.00	1.00	6.71
0.00	-4.00	4.00	-2.00	7.21
1.0000	1.0000
isSquared? 0
varUnits: m m m m 
outUnit: m
training=40
run_brkga:
best=inf
BEST SOLUTION! cost=6.26841 stackLen: 30 => 1.000000  1.000000  V3  / V3  1.000000  * * r * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 0 0 0 1 
restart = 0 	 best= 6.268410	stackLen: 30 => 1.000000  1.000000  V3  / V3  1.000000  * * r * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 0 0 0 1 
restart = 1 	 best= 6.268410	stackLen: 30 => 1.000000  1.000000  V3  / V3  1.000000  * * r * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=3.98536 stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 0 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 1 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 2 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 3 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 4 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 5 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 6 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 7 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 8 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 9 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 10 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 11 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 12 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 13 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 14 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 15 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 16 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
restart = 17 	 best= 3.985363	stackLen: 30 => 1.000000  1.000000  * 1.000000  / e r 1.000000  V1  a r / * empty: 0 0 0 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 0 1 1 0 1 
BEST SOLUTION! cost=3.96342 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * * 1.000000  + r r r V1  V1  + a r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 0 	 best= 3.963417	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * * 1.000000  + r r r V1  V1  + a r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 1 	 best= 3.963417	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * * 1.000000  + r r r V1  V1  + a r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 2 	 best= 3.963417	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * * 1.000000  + r r r V1  V1  + a r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 3 	 best= 3.963417	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * * 1.000000  + r r r V1  V1  + a r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 4 	 best= 3.963417	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * * 1.000000  + r r r V1  V1  + a r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 5 	 best= 3.963417	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + * * 1.000000  + r r r V1  V1  + a r / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=2.9948 stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 0 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 1 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 2 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 3 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 4 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 5 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 6 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 7 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 8 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 9 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
restart = 10 	 best= 2.994799	stackLen: 30 => V3  i V0  i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 1 0 1 0 1 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 
BEST SOLUTION! cost=2.75417 stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 0 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 1 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 2 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 3 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 4 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 5 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 6 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 7 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 8 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 9 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 10 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 11 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 12 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 13 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
restart = 14 	 best= 2.754167	stackLen: 30 => V3  i V0  V0  - i V2  - V2  - - V2  + a V1  1.000000  * a + r empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=0 stackLen: 30 => V3  i V0  V0  i i - i V2  - V2  - - V2  1.000000  V2  * V2  - + + a V0  V1  - a + r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 0.000000	stackLen: 30 => V3  i V0  V0  i i - i V2  - V2  - - V2  1.000000  V2  * V2  - + + a V0  V1  - a + r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => V3  i V0  V0  i i - i V2  - V2  - - V2  1.000000  V2  * V2  - + + a V0  V1  - a + r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (1 * \sqrt{({(v1 - v0)^2} + {(((v2 - (v2 * 1)) + v2) + ((v2 - (v2 - ((((v0)) - v0)))) - (v3)))^2})})
Tempo de execucao: 147.074 segundos
FIM
