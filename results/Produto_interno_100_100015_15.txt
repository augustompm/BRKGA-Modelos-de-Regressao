Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:37
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [7 20 70 64 12 77 95 11 67 42 ]
BEST SOLUTION! cost=37.6 stackLen: 10 => V4  V1  * empty: 0 1 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 37.600000	stackLen: 10 => V4  V1  * empty: 0 1 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=37 stackLen: 10 => V3  V4  - V5  * empty: 0 0 1 1 1 0 1 0 0 1 
iteration = 0 	 best= 37.000000	stackLen: 10 => V3  V4  - V5  * empty: 0 0 1 1 1 0 1 0 0 1 
BEST SOLUTION! cost=22 stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 0 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 1 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 2 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 3 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 4 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 5 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 6 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 7 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 8 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 9 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 10 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 11 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 12 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 13 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 14 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 15 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 16 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 17 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 18 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 19 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 20 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 21 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 22 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 23 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 24 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 25 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 26 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 27 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 28 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 29 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 30 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 31 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 32 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 33 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 34 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 35 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 36 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 37 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 38 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 39 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 40 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 41 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 42 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 43 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 44 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 45 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 46 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 47 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 48 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
iteration = 49 	 best= 22.000000	stackLen: 10 => 1.000000  V0  / V2  V4  V1  + - * empty: 0 0 1 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [26 82 39 87 61 60 29 58 69 84 ]
BEST SOLUTION! cost=24.1 stackLen: 15 => V0  V5  + V4  * empty: 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 0 	 best= 24.100000	stackLen: 15 => V0  V5  + V4  * empty: 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 1 	 best= 24.100000	stackLen: 15 => V0  V5  + V4  * empty: 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 2 	 best= 24.100000	stackLen: 15 => V0  V5  + V4  * empty: 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 3 	 best= 24.100000	stackLen: 15 => V0  V5  + V4  * empty: 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 4 	 best= 24.100000	stackLen: 15 => V0  V5  + V4  * empty: 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
iteration = 5 	 best= 24.100000	stackLen: 15 => V0  V5  + V4  * empty: 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 
BEST SOLUTION! cost=24 stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 6 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 7 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 8 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 9 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 10 	 best= 24.000000	stackLen: 15 => 1.000000  V0  V1  * V4  V5  * + / empty: 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.5 stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 21.500000	stackLen: 15 => 1.000000  1.000000  / 1.000000  + V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=20.8821 stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 20.882093	stackLen: 15 => 1.000000  1.000000  e - V0  V1  * V3  V4  + V5  * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [59 29 1 4 10 53 2 5 40 52 ]
BEST SOLUTION! cost=31.3669 stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 0 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 1 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 2 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 3 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 4 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 5 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 6 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 7 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 8 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 9 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
iteration = 10 	 best= 31.366936	stackLen: 22 => 1.000000  V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 1 1 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 1 1 0 1 
BEST SOLUTION! cost=29.4824 stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 0 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 1 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 2 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 3 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 4 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 5 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 6 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 7 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 8 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
iteration = 9 	 best= 29.482368	stackLen: 22 => 1.000000  1.000000  + V5  V4  V1  1.000000  e V2  * + + * 1.000000  * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
BEST SOLUTION! cost=28.5 stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 6 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 7 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 8 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 9 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 10 	 best= 28.500000	stackLen: 22 => 1.000000  V4  V0  V2  V3  + V1  + - * * empty: 0 1 1 0 1 0 0 0 0 1 0 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=23.8 stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 23.800000	stackLen: 22 => 1.000000  V4  V0  V0  - V0  + V2  V3  + V0  V4  - V1  + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=19.2 stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 19.200000	stackLen: 22 => 1.000000  V4  V0  V0  - V3  + V2  V3  + V0  V5  - V1  V1  + + + - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [74 9 10 95 45 13 56 27 0 69 ]
BEST SOLUTION! cost=26.8 stackLen: 30 => 1.000000  1.000000  * V3  / 1.000000  1.000000  V1  * V4  V4  - - / * empty: 0 1 1 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 26.800000	stackLen: 30 => 1.000000  1.000000  * V3  / 1.000000  1.000000  V1  * V4  V4  - - / * empty: 0 1 1 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 26.800000	stackLen: 30 => 1.000000  1.000000  * V3  / 1.000000  1.000000  V1  * V4  V4  - - / * empty: 0 1 1 1 1 1 0 0 1 0 0 0 1 0 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.4194 stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 0 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 1 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 2 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 3 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 4 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 5 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 6 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 7 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
iteration = 8 	 best= 19.419401	stackLen: 30 => 1.000000  e 1.000000  i 1.000000  e - V4  a * * r V2  * 1.000000  * empty: 0 0 0 0 1 0 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 
BEST SOLUTION! cost=17.5907 stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 1 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 2 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 3 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 4 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 5 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 6 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 7 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 8 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 9 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
iteration = 10 	 best= 17.590665	stackLen: 30 => 1.000000  e V0  / V4  i * V2  1.000000  * V3  V0  + * - empty: 0 0 0 1 0 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=17.25 stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 0 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 1 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 2 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 3 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 4 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 5 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 6 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 7 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 8 	 best= 17.250000	stackLen: 30 => 1.000000  1.000000  + 1.000000  / 1.000000  V0  / V4  i * V2  1.000000  * V3  V3  + V0  + * - * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
BEST SOLUTION! cost=16.7 stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 0 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 1 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 2 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 3 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 4 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 5 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 6 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 7 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 8 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 9 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 10 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 11 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 12 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 13 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 14 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 15 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 16 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 17 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 18 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 19 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 20 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 21 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 22 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 23 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 24 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 25 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 26 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 27 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 28 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 29 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 30 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 31 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 32 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 33 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 34 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 35 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 36 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 37 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 38 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 39 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 40 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 41 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 42 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 43 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 44 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 45 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 46 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 47 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
iteration = 48 	 best= 16.700000	stackLen: 30 => V4  i V0  a r - V3  + V2  * empty: 0 1 1 1 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 1 1 1 0 0 1 
BEST SOLUTION! cost=16.4 stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 6 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 7 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 8 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 9 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 10 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 11 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 12 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 13 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 14 	 best= 16.400000	stackLen: 30 => V4  V4  * r V0  a r - V3  - V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=15.9 stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 0 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 1 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 2 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 3 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 4 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 5 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 6 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 7 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 8 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 9 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
iteration = 10 	 best= 15.900000	stackLen: 30 => V4  V4  + V4  V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 
BEST SOLUTION! cost=15.5631 stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 0 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 1 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 2 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 3 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 4 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 5 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 6 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 7 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 8 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 9 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 10 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
iteration = 11 	 best= 15.563112	stackLen: 30 => V4  V4  + V4  V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 
BEST SOLUTION! cost=15.0987 stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 15.098684	stackLen: 30 => V4  V4  V4  V4  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.8247 stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.824654	stackLen: 30 => V4  V4  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.714 stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.713961	stackLen: 30 => V4  V3  V4  V5  V4  + + - V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.6086 stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.608594	stackLen: 30 => V4  1.000000  V4  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.0596 stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 14.059601	stackLen: 30 => V4  1.000000  V0  V5  V4  + + / V4  + V4  + V4  + * r V0  V0  + a r - V5  - V0  + V0  + V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=13.9968 stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 13.996843	stackLen: 30 => V2  1.000000  V0  V5  V4  + + / V4  + V4  i V4  + * r V0  V0  + a r i V5  - V0  + V0  + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [65 6 46 35 10 76 99 26 8 12 ]
BEST SOLUTION! cost=64.6 stackLen: 45 => V4  V4  - V5  V5  a V5  * * V2  / * V3  a V5  V1  * * * empty: 0 0 0 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 64.600000	stackLen: 45 => V4  V4  - V5  V5  a V5  * * V2  / * V3  a V5  V1  * * * empty: 0 0 0 1 0 1 0 1 1 0 0 1 1 1 0 0 1 0 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 1 0 1 1 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=38.9651 stackLen: 45 => 1.000000  V1  / V3  V1  a V0  / V3  * * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 38.965079	stackLen: 45 => 1.000000  V1  / V3  V1  a V0  / V3  * * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 1 	 best= 38.965079	stackLen: 45 => 1.000000  V1  / V3  V1  a V0  / V3  * * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 2 	 best= 38.965079	stackLen: 45 => 1.000000  V1  / V3  V1  a V0  / V3  * * * empty: 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=35.2373 stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 5 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 6 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 7 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 8 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 9 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 10 	 best= 35.237302	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V1  V3  i * * i i / + * * empty: 0 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 1 1 1 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=34.5746 stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 34.574603	stackLen: 45 => 1.000000  V4  i V1  V1  a V0  V0  + V1  V3  i * * i i / + * * empty: 0 1 1 1 0 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=26.223 stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 26.223016	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a V4  i V1  V1  + V1  a V0  V0  - V0  + V1  + V1  V3  i * * i i / + * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=24.8 stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 0 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 1 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 2 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 3 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 4 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 5 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 6 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 7 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 8 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 9 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
iteration = 10 	 best= 24.800000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 0 
BEST SOLUTION! cost=21 stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 0 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 1 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 2 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 3 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 4 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 5 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 6 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 7 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 8 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 9 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
iteration = 10 	 best= 21.000000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  i V4  V0  + V1  V1  + a V1  V0  - V0  + V1  + V1  V3  V3  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 
BEST SOLUTION! cost=14.9778 stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.977778	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V1  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.3 stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 14.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * 1.000000  a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  V3  V2  - V1  V3  + - i * * i i / + * * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=14.2889 stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.288889	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V1  V0  - V0  + V0  + V1  1.000000  V2  / V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.8111 stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.811111	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + V0  + V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.3 stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.300000	stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.3
stackLen: 45 => 1.000000  1.000000  / 1.000000  * r a 1.000000  a V4  V0  + V1  V1  + V1  + a V5  V0  - V0  + 1.000000  * V1  1.000000  V2  * V1  V3  + - i * * i i / + * * V1  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=44
printSolution2: (v1 * (((((((((((v3 + v1) - (v2 * 1))) * v1) * (1 * (v0 + (v0 - v5))))))/{(v1 + (v1 + v1))^2}) + (v0 + v4)) * {1^2}) * {\sqrt{(1 * (1/1))}^2}))
Tempo de execucao: 1593.57 segundos
FIM
