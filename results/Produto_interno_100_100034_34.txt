Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [76 9 98 97 20 41 93 85 7 36 ]
BEST SOLUTION! cost=31.4 stackLen: 30 => V4  V2  V5  a V4  1.000000  1.000000  - r V1  * * / * * empty: 0 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 31.400000	stackLen: 30 => V4  V2  V5  a V4  1.000000  1.000000  - r V1  * * / * * empty: 0 1 0 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=21.2809 stackLen: 30 => 1.000000  1.000000  / V2  * V3  V0  - - 1.000000  e 1.000000  V4  1.000000  V1  * + / / * empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 21.280853	stackLen: 30 => 1.000000  1.000000  / V2  * V3  V0  - - 1.000000  e 1.000000  V4  1.000000  V1  * + / / * empty: 0 0 1 0 0 0 0 0 0 1 1 0 1 0 0 1 0 1 1 0 1 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=21 stackLen: 30 => V0  i V2  V0  1.000000  * a V5  V4  + / * * V0  * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.000000	stackLen: 30 => V0  i V2  V0  1.000000  * a V5  V4  + / * * V0  * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.000000	stackLen: 30 => V0  i V2  V0  1.000000  * a V5  V4  + / * * V0  * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.000000	stackLen: 30 => V0  i V2  V0  1.000000  * a V5  V4  + / * * V0  * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.000000	stackLen: 30 => V0  i V2  V0  1.000000  * a V5  V4  + / * * V0  * empty: 0 1 1 0 1 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.1629 stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  / + V5  / * V4  * empty: 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 0 	 best= 18.162869	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  / + V5  / * V4  * empty: 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 1 	 best= 18.162869	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  / + V5  / * V4  * empty: 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 2 	 best= 18.162869	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  / + V5  / * V4  * empty: 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 3 	 best= 18.162869	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  / + V5  / * V4  * empty: 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 4 	 best= 18.162869	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  / + V5  / * V4  * empty: 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 
iteration = 5 	 best= 18.162869	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  / + V5  / * V4  * empty: 0 1 0 0 1 0 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 
BEST SOLUTION! cost=17.8258 stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 17.825798	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  1.000000  / + r / + V5  / * V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=12.3407 stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.340708	stackLen: 30 => 1.000000  i 1.000000  r 1.000000  1.000000  * 1.000000  e 1.000000  + a + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=12.3339 stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.333867	stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [4 9 13 24 61 32 28 62 81 96 ]
BEST SOLUTION! cost=32.5 stackLen: 30 => V1  i 1.000000  V5  V1  a V4  / * + * V1  * empty: 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 
iteration = 0 	 best= 32.500000	stackLen: 30 => V1  i 1.000000  V5  V1  a V4  / * + * V1  * empty: 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 
iteration = 1 	 best= 32.500000	stackLen: 30 => V1  i 1.000000  V5  V1  a V4  / * + * V1  * empty: 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 
iteration = 2 	 best= 32.500000	stackLen: 30 => V1  i 1.000000  V5  V1  a V4  / * + * V1  * empty: 0 0 0 1 0 0 1 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 
BEST SOLUTION! cost=25.9 stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 0 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 1 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 2 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 3 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 4 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 5 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 6 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 7 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
iteration = 8 	 best= 25.900000	stackLen: 30 => V4  V2  V2  - - V5  * V2  V3  * - i empty: 0 0 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1 
BEST SOLUTION! cost=24.2 stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.200000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.200000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.200000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.200000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.200000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.200000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=23.7 stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 15 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 16 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 17 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 18 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 19 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 20 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 21 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 22 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 23 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 24 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 25 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 26 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 27 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 28 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 29 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 30 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 31 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 32 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 33 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 34 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 35 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 36 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 37 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 38 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 39 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 40 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 41 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 42 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 43 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 44 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 45 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 46 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 47 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 48 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 49 	 best= 23.700000	stackLen: 30 => V4  V2  + V2  V2  - V2  V2  - - - V5  V1  - V5  V5  - - * V4  V4  V4  + - V1  * - i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [10 17 29 82 98 64 84 68 30 15 ]
BEST SOLUTION! cost=31.4455 stackLen: 30 => V4  a 1.000000  / a r V1  a V3  / / V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 31.445494	stackLen: 30 => V4  a 1.000000  / a r V1  a V3  / / V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 31.445494	stackLen: 30 => V4  a 1.000000  / a r V1  a V3  / / V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 31.445494	stackLen: 30 => V4  a 1.000000  / a r V1  a V3  / / V5  * empty: 0 1 1 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=28.6 stackLen: 30 => 1.000000  V5  V0  V5  + 1.000000  * * / empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 28.600000	stackLen: 30 => 1.000000  V5  V0  V5  + 1.000000  * * / empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=24.6 stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 0 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 1 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 2 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 3 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 4 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 5 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 6 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
iteration = 7 	 best= 24.600000	stackLen: 30 => 1.000000  i i V4  V3  1.000000  * - V3  * * empty: 0 0 1 1 1 1 1 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 0 0 0 1 
BEST SOLUTION! cost=23.8686 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 23.868629	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  + 1.000000  * r V4  * V3  1.000000  * - V3  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=23.2553 stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V0  V4  + + 1.000000  * - V3  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 23.255311	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V0  V4  + + 1.000000  * - V3  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 23.255311	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V0  V4  + + 1.000000  * - V3  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 23.255311	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V0  V4  + + 1.000000  * - V3  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 23.255311	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V0  V4  + + 1.000000  * - V3  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 23.255311	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V0  V4  + + 1.000000  * - V3  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 23.255311	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V0  V4  + + 1.000000  * - V3  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.258 stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V4  V4  + + 1.000000  * - V4  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.257994	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V4  V4  + + 1.000000  * - V4  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.257994	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V4  V4  + + 1.000000  * - V4  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.257994	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V4  V4  + + 1.000000  * - V4  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.257994	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V4  V4  + + 1.000000  * - V4  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.257994	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V4  V4  + + 1.000000  * - V4  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.257994	stackLen: 30 => 1.000000  i 1.000000  1.000000  e 1.000000  e i V0  V4  + * V4  V4  V4  + + 1.000000  * - V4  * / V3  V2  * - / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=18.8053 stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.805302	stackLen: 30 => 1.000000  1.000000  1.000000  e 1.000000  1.000000  e r V0  V4  + * / V4  i V4  + 1.000000  * - V3  * / V3  V2  * - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [85 74 41 54 65 64 36 88 55 94 ]
BEST SOLUTION! cost=31.9 stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 6 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 7 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 8 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
iteration = 9 	 best= 31.900000	stackLen: 30 => 1.000000  V5  V3  V4  - * / empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=27.9 stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 27.900000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - - V3  + V2  V4  + - * * empty: 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.025 stackLen: 30 => 1.000000  V5  V3  V3  V3  - + V3  - V2  1.000000  1.000000  + 1.000000  1.000000  + + V4  / V4  - + - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 25.025000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - + V3  - V2  1.000000  1.000000  + 1.000000  1.000000  + + V4  / V4  - + - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 25.025000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - + V3  - V2  1.000000  1.000000  + 1.000000  1.000000  + + V4  / V4  - + - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 25.025000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - + V3  - V2  1.000000  1.000000  + 1.000000  1.000000  + + V4  / V4  - + - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 25.025000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - + V3  - V2  1.000000  1.000000  + 1.000000  1.000000  + + V4  / V4  - + - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 25.025000	stackLen: 30 => 1.000000  V5  V3  V3  V3  - + V3  - V2  1.000000  1.000000  + 1.000000  1.000000  + + V4  / V4  - + - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=21.5 stackLen: 30 => 1.000000  V1  V2  - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 1 0 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 21.500000	stackLen: 30 => 1.000000  V1  V2  - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 1 0 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 21.500000	stackLen: 30 => 1.000000  V1  V2  - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 1 0 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 21.500000	stackLen: 30 => 1.000000  V1  V2  - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 1 0 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 21.500000	stackLen: 30 => 1.000000  V1  V2  - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 1 0 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 
iteration = 4 	 best= 21.500000	stackLen: 30 => 1.000000  V1  V2  - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 1 0 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 
iteration = 5 	 best= 21.500000	stackLen: 30 => 1.000000  V1  V2  - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 1 0 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=19.9 stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 19.900000	stackLen: 30 => 1.000000  V1  V2  V2  - - V0  * / V5  V3  1.000000  V4  * - * - empty: 0 0 1 1 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.25 stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.250000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.250000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.250000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.250000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.250000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.250000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.250000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  + / V3  / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18 stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 18.000000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  + + / V3  V3  + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=12.8 stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.800000	stackLen: 30 => 1.000000  V1  V0  V0  - - V0  * / V5  1.000000  1.000000  1.000000  1.000000  * + + V3  V2  V0  - + / 1.000000  V4  * - * - empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [18 81 44 26 27 11 19 20 47 7 ]
BEST SOLUTION! cost=34.7 stackLen: 30 => 1.000000  1.000000  V4  / V5  - V1  1.000000  * * * 1.000000  1.000000  - * empty: 0 0 1 0 1 0 0 0 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 
iteration = 0 	 best= 34.700000	stackLen: 30 => 1.000000  1.000000  V4  / V5  - V1  1.000000  * * * 1.000000  1.000000  - * empty: 0 0 1 0 1 0 0 0 1 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 0 0 0 0 
BEST SOLUTION! cost=20.386 stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 0 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 1 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 2 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 3 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 4 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 5 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 6 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
iteration = 7 	 best= 20.386002	stackLen: 30 => 1.000000  1.000000  e + V3  / 1.000000  * V1  + 1.000000  1.000000  V4  * / * empty: 0 0 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 0 1 
BEST SOLUTION! cost=18.2275 stackLen: 30 => 1.000000  1.000000  - 1.000000  e + V3  / 1.000000  1.000000  * * V1  + 1.000000  V3  V4  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.227453	stackLen: 30 => 1.000000  1.000000  - 1.000000  e + V3  / 1.000000  1.000000  * * V1  + 1.000000  V3  V4  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.227453	stackLen: 30 => 1.000000  1.000000  - 1.000000  e + V3  / 1.000000  1.000000  * * V1  + 1.000000  V3  V4  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.227453	stackLen: 30 => 1.000000  1.000000  - 1.000000  e + V3  / 1.000000  1.000000  * * V1  + 1.000000  V3  V4  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.227453	stackLen: 30 => 1.000000  1.000000  - 1.000000  e + V3  / 1.000000  1.000000  * * V1  + 1.000000  V3  V4  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.227453	stackLen: 30 => 1.000000  1.000000  - 1.000000  e + V3  / 1.000000  1.000000  * * V1  + 1.000000  V3  V4  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.227453	stackLen: 30 => 1.000000  1.000000  - 1.000000  e + V3  / 1.000000  1.000000  * * V1  + 1.000000  V3  V4  + / * empty: 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.5917 stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.591694	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.591694	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.591694	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.591694	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.591694	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.591694	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.591694	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i / r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.4779 stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.477945	stackLen: 30 => 1.000000  1.000000  - 1.000000  - 1.000000  e a i - r 1.000000  V3  V1  V1  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.1153 stackLen: 30 => 1.000000  1.000000  + 1.000000  - 1.000000  e i i - r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.115293	stackLen: 30 => 1.000000  1.000000  + 1.000000  - 1.000000  e i i - r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.115293	stackLen: 30 => 1.000000  1.000000  + 1.000000  - 1.000000  e i i - r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.115293	stackLen: 30 => 1.000000  1.000000  + 1.000000  - 1.000000  e i i - r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.115293	stackLen: 30 => 1.000000  1.000000  + 1.000000  - 1.000000  e i i - r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.115293	stackLen: 30 => 1.000000  1.000000  + 1.000000  - 1.000000  e i i - r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.115293	stackLen: 30 => 1.000000  1.000000  + 1.000000  - 1.000000  e i i - r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.1098 stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.109792	stackLen: 30 => 1.000000  1.000000  e 1.000000  - 1.000000  e i - / r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=14.9395 stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.939474	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i - a r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=14.9288 stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 14.928820	stackLen: 30 => 1.000000  1.000000  e r - 1.000000  e i / i r 1.000000  V3  V1  V5  + + 1.000000  V3  V4  V4  - V4  - + * * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.3339
stackLen: 30 => 1.000000  e 1.000000  r 1.000000  1.000000  * 1.000000  a 1.000000  / i + r / * V5  / V4  V4  + i V5  V2  V4  + - + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((v4 + v2) - v5) + ((v4 + v4))) * (v5/((\sqrt{(((1/{1^2})) + (1 * 1))}/\sqrt{1}) * \exp(1))))
Tempo de execucao: 1353.25 segundos
FIM
