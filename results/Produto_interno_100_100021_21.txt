Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [55 98 74 29 31 86 58 87 38 48 ]
BEST SOLUTION! cost=28 stackLen: 30 => V2  i V1  1.000000  V3  V1  a V1  i / * / * * empty: 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 
iteration = 0 	 best= 28.000000	stackLen: 30 => V2  i V1  1.000000  V3  V1  a V1  i / * / * * empty: 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 
iteration = 1 	 best= 28.000000	stackLen: 30 => V2  i V1  1.000000  V3  V1  a V1  i / * / * * empty: 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 
iteration = 2 	 best= 28.000000	stackLen: 30 => V2  i V1  1.000000  V3  V1  a V1  i / * / * * empty: 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 
iteration = 3 	 best= 28.000000	stackLen: 30 => V2  i V1  1.000000  V3  V1  a V1  i / * / * * empty: 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 
iteration = 4 	 best= 28.000000	stackLen: 30 => V2  i V1  1.000000  V3  V1  a V1  i / * / * * empty: 0 0 1 1 1 1 0 1 1 0 1 1 1 0 1 0 0 1 0 1 0 1 0 1 1 0 0 0 1 0 
BEST SOLUTION! cost=22.1081 stackLen: 30 => V5  1.000000  1.000000  e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 22.108078	stackLen: 30 => V5  1.000000  1.000000  e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 0 
iteration = 1 	 best= 22.108078	stackLen: 30 => V5  1.000000  1.000000  e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 0 
iteration = 2 	 best= 22.108078	stackLen: 30 => V5  1.000000  1.000000  e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 0 
iteration = 3 	 best= 22.108078	stackLen: 30 => V5  1.000000  1.000000  e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 0 
iteration = 4 	 best= 22.108078	stackLen: 30 => V5  1.000000  1.000000  e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 0 
iteration = 5 	 best= 22.108078	stackLen: 30 => V5  1.000000  1.000000  e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 1 1 1 0 1 1 0 1 0 0 1 1 0 0 1 1 1 1 1 0 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=22.0664 stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 22.066446	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  - e 1.000000  / e V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.0544 stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 22.054416	stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 22.054416	stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 22.054416	stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 22.054416	stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 22.054416	stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 22.054416	stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 22.054416	stackLen: 30 => V5  V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  - e 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=20.7837 stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 20.783705	stackLen: 30 => V5  V5  - V4  + V5  V5  - + 1.000000  1.000000  * 1.000000  1.000000  / 1.000000  / r 1.000000  + r V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=19.325 stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 19.325000	stackLen: 30 => 1.000000  V5  / V4  + V5  + 1.000000  * i 1.000000  * 1.000000  1.000000  / 1.000000  a r 1.000000  + a V4  / * * V2  V3  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [22 76 72 45 20 23 68 74 33 54 ]
BEST SOLUTION! cost=36.5 stackLen: 30 => V3  V3  a 1.000000  a / i i r V5  i * V0  * i i * empty: 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 1 0 1 
iteration = 0 	 best= 36.500000	stackLen: 30 => V3  V3  a 1.000000  a / i i r V5  i * V0  * i i * empty: 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 1 0 1 
iteration = 1 	 best= 36.500000	stackLen: 30 => V3  V3  a 1.000000  a / i i r V5  i * V0  * i i * empty: 0 1 1 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 0 0 0 1 1 0 1 1 0 1 0 1 
BEST SOLUTION! cost=28.9 stackLen: 30 => 1.000000  V0  V5  - / V4  * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 
iteration = 0 	 best= 28.900000	stackLen: 30 => 1.000000  V0  V5  - / V4  * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 
iteration = 1 	 best= 28.900000	stackLen: 30 => 1.000000  V0  V5  - / V4  * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 
iteration = 2 	 best= 28.900000	stackLen: 30 => 1.000000  V0  V5  - / V4  * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 
iteration = 3 	 best= 28.900000	stackLen: 30 => 1.000000  V0  V5  - / V4  * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 
iteration = 4 	 best= 28.900000	stackLen: 30 => 1.000000  V0  V5  - / V4  * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 
iteration = 5 	 best= 28.900000	stackLen: 30 => 1.000000  V0  V5  - / V4  * empty: 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 
BEST SOLUTION! cost=25.5 stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 25.500000	stackLen: 30 => 1.000000  1.000000  + 1.000000  V0  * V5  V5  + - / V4  * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=21.4 stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 21.400000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  * V0  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=19.7 stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  V1  V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  V1  V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  V1  V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  V1  V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  V1  V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  V1  V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 19.700000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / 1.000000  + 1.000000  1.000000  * V1  V1  V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=16.1585 stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.158471	stackLen: 30 => 1.000000  r 1.000000  1.000000  / * e 1.000000  1.000000  * V5  V3  V1  + V1  + - * V0  + V2  + V5  V5  + - / V4  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [62 74 99 63 10 75 67 58 37 89 ]
BEST SOLUTION! cost=33.7887 stackLen: 30 => V5  a V4  a r a / V0  a r V1  - V1  - V3  * * empty: 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 0 
iteration = 0 	 best= 33.788658	stackLen: 30 => V5  a V4  a r a / V0  a r V1  - V1  - V3  * * empty: 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 0 
iteration = 1 	 best= 33.788658	stackLen: 30 => V5  a V4  a r a / V0  a r V1  - V1  - V3  * * empty: 0 0 0 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 0 
BEST SOLUTION! cost=18.5 stackLen: 30 => 1.000000  1.000000  1.000000  / a / V2  1.000000  V3  * i * / empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 18.500000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V2  1.000000  V3  * i * / empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 18.500000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V2  1.000000  V3  * i * / empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 2 	 best= 18.500000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V2  1.000000  V3  * i * / empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 3 	 best= 18.500000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V2  1.000000  V3  * i * / empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 4 	 best= 18.500000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V2  1.000000  V3  * i * / empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 
iteration = 5 	 best= 18.500000	stackLen: 30 => 1.000000  1.000000  1.000000  / a / V2  1.000000  V3  * i * / empty: 0 1 1 1 1 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=18.3571 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 18.357111	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / e / V2  V2  - 1.000000  1.000000  / V3  / - / i V2  * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=17.9273 stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.927305	stackLen: 30 => 1.000000  r r 1.000000  * a 1.000000  1.000000  1.000000  * V1  * i i i * a i V3  a / r r i V2  * V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=17.0394 stackLen: 30 => 1.000000  r r V3  * a 1.000000  1.000000  1.000000  * V1  * i a i * a / V5  a / r r i r V2  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.039404	stackLen: 30 => 1.000000  r r V3  * a 1.000000  1.000000  1.000000  * V1  * i a i * a / V5  a / r r i r V2  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.039404	stackLen: 30 => 1.000000  r r V3  * a 1.000000  1.000000  1.000000  * V1  * i a i * a / V5  a / r r i r V2  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.039404	stackLen: 30 => 1.000000  r r V3  * a 1.000000  1.000000  1.000000  * V1  * i a i * a / V5  a / r r i r V2  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.039404	stackLen: 30 => 1.000000  r r V3  * a 1.000000  1.000000  1.000000  * V1  * i a i * a / V5  a / r r i r V2  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.039404	stackLen: 30 => 1.000000  r r V3  * a 1.000000  1.000000  1.000000  * V1  * i a i * a / V5  a / r r i r V2  V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.5913 stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 0 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 1 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 2 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 3 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 4 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 5 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 6 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 7 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
iteration = 8 	 best= 15.591307	stackLen: 30 => V1  a r 1.000000  e V3  / V2  * / a V3  V2  * + empty: 0 1 1 0 1 0 1 0 1 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 0 0 1 
BEST SOLUTION! cost=15.5736 stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 15.573648	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 15.573648	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 15.573648	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 15.573648	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 15.573648	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 15.573648	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 6 	 best= 15.573648	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  1.000000  + * e V3  V3  + / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=15.5625 stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.562522	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.562522	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.562522	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.562522	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.562522	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.562522	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.562522	stackLen: 30 => V1  V1  + V3  + a r 1.000000  1.000000  * 1.000000  1.000000  e / + * 1.000000  V3  1.000000  * / V2  * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.1312 stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.131165	stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [99 27 7 55 2 89 91 64 50 94 ]
BEST SOLUTION! cost=33.1 stackLen: 30 => V2  V3  1.000000  i 1.000000  / 1.000000  * * i * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 
iteration = 0 	 best= 33.100000	stackLen: 30 => V2  V3  1.000000  i 1.000000  / 1.000000  * * i * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 
iteration = 1 	 best= 33.100000	stackLen: 30 => V2  V3  1.000000  i 1.000000  / 1.000000  * * i * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 
iteration = 2 	 best= 33.100000	stackLen: 30 => V2  V3  1.000000  i 1.000000  / 1.000000  * * i * empty: 0 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 0 0 1 0 1 
BEST SOLUTION! cost=30.0598 stackLen: 30 => 1.000000  V2  i a a 1.000000  / r r V0  a V0  * * * empty: 0 1 0 0 0 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 30.059841	stackLen: 30 => 1.000000  V2  i a a 1.000000  / r r V0  a V0  * * * empty: 0 1 0 0 0 1 0 0 1 1 1 0 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=27.5008 stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 0 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 1 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 2 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 3 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 4 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 5 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 6 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 7 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 8 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 9 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 10 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 11 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
iteration = 12 	 best= 27.500806	stackLen: 30 => V5  V0  1.000000  1.000000  e r V4  * * + * empty: 0 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 0 1 1 1 0 0 1 0 1 1 
BEST SOLUTION! cost=27.2244 stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 27.224427	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  + + 1.000000  / r r V4  V4  + * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=27.1751 stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  - / 1.000000  e + 1.000000  / r r V4  V4  + * * + * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
iteration = 0 	 best= 27.175118	stackLen: 30 => V5  V0  1.000000  1.000000  1.000000  1.000000  - / 1.000000  e + 1.000000  / r r V4  V4  + * * + * i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 
BEST SOLUTION! cost=26.9 stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 0 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 1 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 2 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 3 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 4 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 5 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 6 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
iteration = 7 	 best= 26.900000	stackLen: 30 => 1.000000  V3  / V0  a r V0  V0  V0  V2  - - + - * empty: 0 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 1 1 0 1 0 1 0 1 0 1 
BEST SOLUTION! cost=25.3 stackLen: 30 => 1.000000  V3  / V0  V0  * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 25.300000	stackLen: 30 => 1.000000  V3  / V0  V0  * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 25.300000	stackLen: 30 => 1.000000  V3  / V0  V0  * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 25.300000	stackLen: 30 => 1.000000  V3  / V0  V0  * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 25.300000	stackLen: 30 => 1.000000  V3  / V0  V0  * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 25.300000	stackLen: 30 => 1.000000  V3  / V0  V0  * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 25.300000	stackLen: 30 => 1.000000  V3  / V0  V0  * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=21.9 stackLen: 30 => 1.000000  V3  / V0  V0  V0  - * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 0 	 best= 21.900000	stackLen: 30 => 1.000000  V3  / V0  V0  V0  - * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 1 	 best= 21.900000	stackLen: 30 => 1.000000  V3  / V0  V0  V0  - * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 2 	 best= 21.900000	stackLen: 30 => 1.000000  V3  / V0  V0  V0  - * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 3 	 best= 21.900000	stackLen: 30 => 1.000000  V3  / V0  V0  V0  - * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 4 	 best= 21.900000	stackLen: 30 => 1.000000  V3  / V0  V0  V0  - * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
iteration = 5 	 best= 21.900000	stackLen: 30 => 1.000000  V3  / V0  V0  V0  - * r i V0  V0  V0  V0  - V2  - - + - * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 1 
BEST SOLUTION! cost=17.1345 stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 17.134524	stackLen: 30 => 1.000000  V3  / V0  V0  V0  + V0  * V0  / * r i V0  V0  V0  V0  - V2  - - + / * V0  V0  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [60 31 63 5 84 3 69 93 82 26 ]
BEST SOLUTION! cost=30.2833 stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 3 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 4 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 5 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 6 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 7 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 8 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 9 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
iteration = 10 	 best= 30.283333	stackLen: 30 => 1.000000  V3  V2  V1  a 1.000000  / * * V0  * a r / V1  1.000000  * * empty: 0 0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=29 stackLen: 30 => 1.000000  1.000000  * 1.000000  / V3  V1  V1  a 1.000000  / * * V5  * a r / V1  1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 29.000000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V3  V1  V1  a 1.000000  / * * V5  * a r / V1  1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 29.000000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V3  V1  V1  a 1.000000  / * * V5  * a r / V1  1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 29.000000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V3  V1  V1  a 1.000000  / * * V5  * a r / V1  1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 29.000000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V3  V1  V1  a 1.000000  / * * V5  * a r / V1  1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 29.000000	stackLen: 30 => 1.000000  1.000000  * 1.000000  / V3  V1  V1  a 1.000000  / * * V5  * a r / V1  1.000000  1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=28.8 stackLen: 30 => 1.000000  V1  * a r r a V5  V4  * / V1  * empty: 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 
iteration = 0 	 best= 28.800000	stackLen: 30 => 1.000000  V1  * a r r a V5  V4  * / V1  * empty: 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 
iteration = 1 	 best= 28.800000	stackLen: 30 => 1.000000  V1  * a r r a V5  V4  * / V1  * empty: 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 
iteration = 2 	 best= 28.800000	stackLen: 30 => 1.000000  V1  * a r r a V5  V4  * / V1  * empty: 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 
iteration = 3 	 best= 28.800000	stackLen: 30 => 1.000000  V1  * a r r a V5  V4  * / V1  * empty: 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 
iteration = 4 	 best= 28.800000	stackLen: 30 => 1.000000  V1  * a r r a V5  V4  * / V1  * empty: 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 
iteration = 5 	 best= 28.800000	stackLen: 30 => 1.000000  V1  * a r r a V5  V4  * / V1  * empty: 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 0 1 0 0 0 
BEST SOLUTION! cost=26.8 stackLen: 30 => 1.000000  V1  V1  - V1  + * a r r a V5  V5  + V5  - V1  - - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 
iteration = 0 	 best= 26.800000	stackLen: 30 => 1.000000  V1  V1  - V1  + * a r r a V5  V5  + V5  - V1  - - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 
iteration = 1 	 best= 26.800000	stackLen: 30 => 1.000000  V1  V1  - V1  + * a r r a V5  V5  + V5  - V1  - - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 
iteration = 2 	 best= 26.800000	stackLen: 30 => 1.000000  V1  V1  - V1  + * a r r a V5  V5  + V5  - V1  - - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 
iteration = 3 	 best= 26.800000	stackLen: 30 => 1.000000  V1  V1  - V1  + * a r r a V5  V5  + V5  - V1  - - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 
iteration = 4 	 best= 26.800000	stackLen: 30 => 1.000000  V1  V1  - V1  + * a r r a V5  V5  + V5  - V1  - - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 
iteration = 5 	 best= 26.800000	stackLen: 30 => 1.000000  V1  V1  - V1  + * a r r a V5  V5  + V5  - V1  - - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 1 1 0 
BEST SOLUTION! cost=21.8093 stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 21.809346	stackLen: 30 => 1.000000  V5  / V1  V1  - V1  - * a r r i V5  V5  + V5  - V1  - - V3  - V3  - V4  * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=15.1312
stackLen: 30 => V1  V1  + V1  + a 1.000000  V2  1.000000  * 1.000000  1.000000  e / * * 1.000000  V3  1.000000  * / a * / a V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((v2 * v3) + {(({((1 * v3)/1)^2} * (((\exp(1)/1) * (1 * v2)) * 1))/{(v1 + (v1 + v1))^2})^2})
Tempo de execucao: 1368.98 segundos
FIM
