|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 40 1
9.00	-2.00	-8.00	-4.00	3.00	-9.00	-13.00
9.00	-2.00	7.00	3.00	1.00	-10.00	-7.00
5.00	1.00	-4.00	7.00	-8.00	1.00	-31.00
-2.00	9.00	3.00	4.00	9.00	5.00	39.00
-5.00	-6.00	5.00	-8.00	7.00	-7.00	-59.00
1.00	1.00	4.00	7.00	9.00	4.00	65.00
-8.00	9.00	-4.00	2.00	2.00	-7.00	-94.00
4.00	10.00	-5.00	9.00	-1.00	-4.00	-1.00
-10.00	5.00	-9.00	6.00	-4.00	9.00	-140.00
-10.00	-4.00	4.00	0.00	2.00	-4.00	32.00
-1.00	5.00	9.00	6.00	8.00	8.00	113.00
5.00	-9.00	-4.00	0.00	3.00	10.00	-15.00
5.00	6.00	8.00	2.00	7.00	-1.00	39.00
8.00	2.00	-10.00	0.00	-5.00	3.00	1.00
6.00	3.00	10.00	-9.00	4.00	9.00	-36.00
-1.00	-9.00	1.00	-7.00	-5.00	6.00	-28.00
1.00	4.00	-2.00	-8.00	3.00	9.00	47.00
-2.00	-9.00	-10.00	5.00	-2.00	-6.00	-20.00
9.00	-4.00	-3.00	-7.00	-3.00	3.00	-24.00
10.00	-9.00	-5.00	-3.00	-9.00	-2.00	-57.00
10.00	-9.00	7.00	8.00	-4.00	-10.00	6.00
-1.00	10.00	-3.00	3.00	-5.00	10.00	-69.00
9.00	8.00	-3.00	6.00	-3.00	2.00	48.00
-9.00	-2.00	-4.00	5.00	2.00	10.00	18.00
1.00	-6.00	10.00	6.00	-2.00	-7.00	68.00
-7.00	0.00	9.00	3.00	-2.00	-4.00	35.00
-4.00	2.00	-2.00	-3.00	5.00	-1.00	-7.00
5.00	-6.00	8.00	0.00	6.00	0.00	-30.00
-6.00	-8.00	7.00	-10.00	-5.00	3.00	-37.00
3.00	7.00	10.00	3.00	-4.00	-9.00	87.00
0.00	-10.00	3.00	-10.00	1.00	8.00	-22.00
2.00	4.00	0.00	-6.00	2.00	7.00	22.00
-4.00	1.00	-1.00	-10.00	9.00	3.00	33.00
1.00	4.00	3.00	-3.00	0.00	-3.00	-5.00
2.00	-1.00	9.00	-1.00	-7.00	-7.00	38.00
-4.00	-1.00	10.00	6.00	8.00	-2.00	48.00
-5.00	3.00	-8.00	2.00	-5.00	8.00	-71.00
-8.00	-4.00	8.00	1.00	-3.00	-3.00	49.00
-4.00	-6.00	4.00	2.00	-3.00	4.00	20.00
-10.00	7.00	2.00	8.00	-7.00	9.00	-117.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=40
run_brkga:
best=inf
BEST SOLUTION! cost=31.55 stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 0 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 1 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 2 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 3 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 4 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 5 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 6 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 7 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 8 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 9 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 10 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 11 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 12 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
restart = 13 	 best= 31.550000	stackLen: 30 => 1.000000  V4  1.000000  * * V5  * empty: 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 
BEST SOLUTION! cost=31.0565 stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 0 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 1 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 2 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 3 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 4 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 5 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 6 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
restart = 7 	 best= 31.056549	stackLen: 30 => 1.000000  1.000000  * V4  1.000000  1.000000  1.000000  + / r * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=25.725 stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 0 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 1 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 2 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 3 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 4 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 5 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 6 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 7 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 8 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 9 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 10 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 11 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
restart = 12 	 best= 25.725000	stackLen: 30 => 1.000000  r V5  / V4  * V2  V3  * + empty: 0 0 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 1 
BEST SOLUTION! cost=25.5955 stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 0 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 1 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 2 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 3 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 4 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 5 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 6 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 7 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 8 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 9 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
restart = 10 	 best= 25.595532	stackLen: 30 => 1.000000  1.000000  1.000000  + / 1.000000  / 1.000000  1.000000  / / r r V5  V4  * V2  V3  * + i / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
BEST SOLUTION! cost=25.3112 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 0 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 1 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 2 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 3 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 4 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 5 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 6 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 7 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 8 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 9 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 10 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 11 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 12 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 13 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 14 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 15 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 16 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
restart = 17 	 best= 25.311175	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  + + / 1.000000  * 1.000000  / 1.000000  - r r V5  V4  * V2  V3  * + 1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 
BEST SOLUTION! cost=22.925 stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 0 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 1 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 2 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 3 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 4 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 5 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 6 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 7 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 8 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 9 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 10 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 11 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 12 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 13 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 14 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 15 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 16 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 17 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 18 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 19 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 20 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 21 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 22 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 23 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 24 	 best= 22.925000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  + V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=22.25 stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 0 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 1 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 2 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 3 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 4 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 5 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 6 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 7 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 8 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 9 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 10 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 11 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 12 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 13 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 14 	 best= 22.250000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V3  V4  V4  - * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.975 stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 0 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 1 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 2 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 3 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 4 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 5 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 6 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 7 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 8 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 9 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 10 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 11 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 12 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 13 	 best= 21.975000	stackLen: 30 => 1.000000  1.000000  i i V4  V1  V1  - - * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  1.000000  i i 1.000000  V1  V1  - / * V0  - V1  * 1.000000  V5  1.000000  V4  / * * + 1.000000  V3  V2  * * + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: ((((v2 * v3) * 1) + ((((v4/1) * v5) * 1) + (v1 * (v0 - (((v1 - v1)/1) * ((1))))))) * 1)
Tempo de execucao: 316.372 segundos
FIM
