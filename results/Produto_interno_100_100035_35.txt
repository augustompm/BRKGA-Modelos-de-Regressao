Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [37 50 71 0 99 38 52 67 10 40 ]
BEST SOLUTION! cost=29.1949 stackLen: 30 => V1  V0  V3  * V3  V5  + V1  a 1.000000  / * * * empty: 0 1 0 1 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 29.194921	stackLen: 30 => V1  V0  V3  * V3  V5  + V1  a 1.000000  / * * * empty: 0 1 0 1 1 1 1 0 1 0 1 0 1 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=28.9333 stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 28.933263	stackLen: 30 => V5  V2  1.000000  1.000000  i V1  / * a 1.000000  / V5  * * * V5  * empty: 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=28.4313 stackLen: 30 => V5  V2  1.000000  1.000000  e V1  V1  + / / a 1.000000  1.000000  + 1.000000  * 1.000000  / / V5  * * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 28.431283	stackLen: 30 => V5  V2  1.000000  1.000000  e V1  V1  + / / a 1.000000  1.000000  + 1.000000  * 1.000000  / / V5  * * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 28.431283	stackLen: 30 => V5  V2  1.000000  1.000000  e V1  V1  + / / a 1.000000  1.000000  + 1.000000  * 1.000000  / / V5  * * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 28.431283	stackLen: 30 => V5  V2  1.000000  1.000000  e V1  V1  + / / a 1.000000  1.000000  + 1.000000  * 1.000000  / / V5  * * * V5  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=28.2 stackLen: 30 => V3  V0  V2  + V0  + * empty: 0 0 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 
iteration = 0 	 best= 28.200000	stackLen: 30 => V3  V0  V2  + V0  + * empty: 0 0 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 
iteration = 1 	 best= 28.200000	stackLen: 30 => V3  V0  V2  + V0  + * empty: 0 0 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 
iteration = 2 	 best= 28.200000	stackLen: 30 => V3  V0  V2  + V0  + * empty: 0 0 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 
BEST SOLUTION! cost=27.1134 stackLen: 30 => V1  a V3  / a V5  V3  i 1.000000  i * V2  * V5  * * * empty: 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 27.113431	stackLen: 30 => V1  a V3  / a V5  V3  i 1.000000  i * V2  * V5  * * * empty: 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 27.113431	stackLen: 30 => V1  a V3  / a V5  V3  i 1.000000  i * V2  * V5  * * * empty: 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 27.113431	stackLen: 30 => V1  a V3  / a V5  V3  i 1.000000  i * V2  * V5  * * * empty: 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 27.113431	stackLen: 30 => V1  a V3  / a V5  V3  i 1.000000  i * V2  * V5  * * * empty: 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 27.113431	stackLen: 30 => V1  a V3  / a V5  V3  i 1.000000  i * V2  * V5  * * * empty: 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 1 
iteration = 5 	 best= 27.113431	stackLen: 30 => V1  a V3  / a V5  V3  i 1.000000  i * V2  * V5  * * * empty: 0 1 0 0 1 1 1 1 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=21.8935 stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 21.893464	stackLen: 30 => V1  V1  * V1  * a V5  i / i V3  1.000000  V3  V4  i 1.000000  V1  * V3  * 1.000000  * * V3  a * * / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [57 94 15 67 37 69 88 56 40 22 ]
BEST SOLUTION! cost=20 stackLen: 30 => V4  V3  1.000000  V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 0 	 best= 20.000000	stackLen: 30 => V4  V3  1.000000  V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 1 	 best= 20.000000	stackLen: 30 => V4  V3  1.000000  V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 2 	 best= 20.000000	stackLen: 30 => V4  V3  1.000000  V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 3 	 best= 20.000000	stackLen: 30 => V4  V3  1.000000  V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 4 	 best= 20.000000	stackLen: 30 => V4  V3  1.000000  V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
iteration = 5 	 best= 20.000000	stackLen: 30 => V4  V3  1.000000  V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 1 1 0 1 0 1 1 1 1 0 1 0 0 1 0 0 1 1 1 1 0 1 0 0 0 0 0 0 
BEST SOLUTION! cost=18.55 stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.550000	stackLen: 30 => V4  V3  1.000000  1.000000  + V4  / V5  V3  V0  V2  - + - + + * empty: 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.7333 stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  * V4  V4  V1  + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 0 	 best= 16.733333	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  * V4  V4  V1  + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 1 	 best= 16.733333	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  * V4  V4  V1  + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 2 	 best= 16.733333	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  * V4  V4  V1  + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 3 	 best= 16.733333	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  * V4  V4  V1  + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 4 	 best= 16.733333	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  * V4  V4  V1  + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
iteration = 5 	 best= 16.733333	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  * V4  V4  V1  + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 
BEST SOLUTION! cost=16.3667 stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.366667	stackLen: 30 => V4  V3  1.000000  1.000000  + 1.000000  + 1.000000  1.000000  / V1  / V2  V1  V4  - + + / V5  V3  V0  V2  - + - + + * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [33 84 4 57 35 77 95 19 68 66 ]
BEST SOLUTION! cost=20.5 stackLen: 30 => V5  V3  * a r 1.000000  1.000000  * * empty: 0 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 
iteration = 0 	 best= 20.500000	stackLen: 30 => V5  V3  * a r 1.000000  1.000000  * * empty: 0 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 
iteration = 1 	 best= 20.500000	stackLen: 30 => V5  V3  * a r 1.000000  1.000000  * * empty: 0 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 0 1 
BEST SOLUTION! cost=17.0617 stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 0 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 1 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 2 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 3 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 4 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 5 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 6 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 7 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 8 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 9 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
iteration = 10 	 best= 17.061705	stackLen: 30 => 1.000000  i V4  1.000000  e V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
BEST SOLUTION! cost=16.6333 stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 10 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 11 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 12 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 13 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 14 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 15 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 16 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 17 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 18 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 19 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 20 	 best= 16.633333	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  + + i V5  V1  + / 1.000000  * V0  V5  - - * / empty: 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.1667 stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  1.000000  / + + i V5  V1  + / 1.000000  * V0  V2  + V5  - - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 16.166667	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  1.000000  / + + i V5  V1  + / 1.000000  * V0  V2  + V5  - - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 16.166667	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  1.000000  / + + i V5  V1  + / 1.000000  * V0  V2  + V5  - - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 16.166667	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  1.000000  / + + i V5  V1  + / 1.000000  * V0  V2  + V5  - - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 16.166667	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  1.000000  / + + i V5  V1  + / 1.000000  * V0  V2  + V5  - - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 16.166667	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  1.000000  / + + i V5  V1  + / 1.000000  * V0  V2  + V5  - - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 16.166667	stackLen: 30 => 1.000000  i i V4  1.000000  1.000000  1.000000  1.000000  / + + i V5  V1  + / 1.000000  * V0  V2  + V5  - - * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=15.9592 stackLen: 30 => 1.000000  1.000000  + 1.000000  r e V4  1.000000  1.000000  V1  / * * i V5  a V1  / * / 1.000000  * V0  V2  + V5  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.959182	stackLen: 30 => 1.000000  1.000000  + 1.000000  r e V4  1.000000  1.000000  V1  / * * i V5  a V1  / * / 1.000000  * V0  V2  + V5  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.959182	stackLen: 30 => 1.000000  1.000000  + 1.000000  r e V4  1.000000  1.000000  V1  / * * i V5  a V1  / * / 1.000000  * V0  V2  + V5  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.959182	stackLen: 30 => 1.000000  1.000000  + 1.000000  r e V4  1.000000  1.000000  V1  / * * i V5  a V1  / * / 1.000000  * V0  V2  + V5  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.959182	stackLen: 30 => 1.000000  1.000000  + 1.000000  r e V4  1.000000  1.000000  V1  / * * i V5  a V1  / * / 1.000000  * V0  V2  + V5  - * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=15.9 stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 0 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 1 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 2 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 3 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 4 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 5 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 6 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 7 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 8 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 9 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 10 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 11 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 12 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 13 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 14 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 15 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 16 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 17 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 18 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 19 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 20 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 21 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 22 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 23 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 24 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 25 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 26 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 27 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 28 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 29 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 30 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 31 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 32 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 33 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
iteration = 34 	 best= 15.900000	stackLen: 30 => 1.000000  V4  / V5  + V5  * empty: 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 0 1 
BEST SOLUTION! cost=15.2667 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  * 1.000000  * V2  V4  - i V5  + V5  V5  + * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 15.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  * 1.000000  * V2  V4  - i V5  + V5  V5  + * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 15.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  * 1.000000  * V2  V4  - i V5  + V5  V5  + * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 15.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  * 1.000000  * V2  V4  - i V5  + V5  V5  + * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 15.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  * 1.000000  * V2  V4  - i V5  + V5  V5  + * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 15.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  * 1.000000  * V2  V4  - i V5  + V5  V5  + * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 15.266667	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  * 1.000000  * V2  V4  - i V5  + V5  V5  + * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.125 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  1.000000  V2  * V3  * V2  V4  - i V5  + V5  V5  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 
iteration = 0 	 best= 15.125000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  1.000000  V2  * V3  * V2  V4  - i V5  + V5  V5  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 
iteration = 1 	 best= 15.125000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  1.000000  V2  * V3  * V2  V4  - i V5  + V5  V5  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 
iteration = 2 	 best= 15.125000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  1.000000  V2  * V3  * V2  V4  - i V5  + V5  V5  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 
iteration = 3 	 best= 15.125000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  1.000000  V2  * V3  * V2  V4  - i V5  + V5  V5  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 
iteration = 4 	 best= 15.125000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  1.000000  V2  * V3  * V2  V4  - i V5  + V5  V5  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 
iteration = 5 	 best= 15.125000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  1.000000  V2  * V3  * V2  V4  - i V5  + V5  V5  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 
BEST SOLUTION! cost=13.2 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 13.200000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V0  V2  + V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=10.925 stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 10.925000	stackLen: 30 => 1.000000  1.000000  + 1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  V5  V0  - V4  - - i V5  + V5  V4  + * + / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=10.8 stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 10.800000	stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [64 27 81 44 29 41 61 51 33 97 ]
BEST SOLUTION! cost=28.3 stackLen: 30 => V4  1.000000  1.000000  1.000000  * V3  V5  V4  + + * * * empty: 0 1 0 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 28.300000	stackLen: 30 => V4  1.000000  1.000000  1.000000  * V3  V5  V4  + + * * * empty: 0 1 0 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 28.300000	stackLen: 30 => V4  1.000000  1.000000  1.000000  * V3  V5  V4  + + * * * empty: 0 1 0 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 28.300000	stackLen: 30 => V4  1.000000  1.000000  1.000000  * V3  V5  V4  + + * * * empty: 0 1 0 0 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=24.9613 stackLen: 30 => V4  V0  i a V5  a V5  / * * empty: 0 1 0 1 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 0 	 best= 24.961310	stackLen: 30 => V4  V0  i a V5  a V5  / * * empty: 0 1 0 1 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 1 	 best= 24.961310	stackLen: 30 => V4  V0  i a V5  a V5  / * * empty: 0 1 0 1 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 2 	 best= 24.961310	stackLen: 30 => V4  V0  i a V5  a V5  / * * empty: 0 1 0 1 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 3 	 best= 24.961310	stackLen: 30 => V4  V0  i a V5  a V5  / * * empty: 0 1 0 1 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 
iteration = 4 	 best= 24.961310	stackLen: 30 => V4  V0  i a V5  a V5  / * * empty: 0 1 0 1 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 
BEST SOLUTION! cost=22.6558 stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 0 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 1 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 2 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 3 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 4 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 5 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 6 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 7 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 8 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 9 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 10 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 11 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 12 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 13 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 14 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 15 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 16 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 17 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 18 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 19 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 20 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 21 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 22 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 23 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 24 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 25 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 26 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 27 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 28 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 29 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 30 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 31 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 32 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 33 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 34 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 35 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 36 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 37 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 38 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 39 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 40 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 41 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
iteration = 42 	 best= 22.655833	stackLen: 30 => V5  a V4  V2  + V5  * V0  1.000000  * a * / empty: 0 0 1 1 0 0 0 1 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 1 0 1 
BEST SOLUTION! cost=21.9746 stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 21.974613	stackLen: 30 => V5  V5  + a V4  V4  V4  + + V5  V2  + + V5  * V0  1.000000  * a * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=21.6941 stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 21.694074	stackLen: 30 => V5  V5  V5  + + a V4  V4  - V4  V4  + + V2  V2  + + V5  * V0  V0  + 1.000000  * a * / i i empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [82 47 20 77 51 31 15 76 98 0 ]
BEST SOLUTION! cost=37.3 stackLen: 30 => V2  1.000000  * V4  V4  a 1.000000  V4  a * / * * empty: 0 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 37.300000	stackLen: 30 => V2  1.000000  * V4  V4  a 1.000000  V4  a * / * * empty: 0 1 1 1 1 1 1 0 0 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=33.1341 stackLen: 30 => V0  1.000000  V5  / a V3  a i 1.000000  1.000000  + V3  / / * * empty: 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 0 0 1 0 1 1 1 0 0 0 0 0 1 0 1 
iteration = 0 	 best= 33.134127	stackLen: 30 => V0  1.000000  V5  / a V3  a i 1.000000  1.000000  + V3  / / * * empty: 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 0 0 1 0 1 1 1 0 0 0 0 0 1 0 1 
iteration = 1 	 best= 33.134127	stackLen: 30 => V0  1.000000  V5  / a V3  a i 1.000000  1.000000  + V3  / / * * empty: 0 1 0 0 0 1 1 1 1 1 0 0 0 1 1 0 0 1 0 1 1 1 0 0 0 0 0 1 0 1 
BEST SOLUTION! cost=31.3 stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * r * / 1.000000  V2  V2  + a i r / * 1.000000  * empty: 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * r * / 1.000000  V2  V2  + a i r / * 1.000000  * empty: 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 1 
iteration = 1 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * r * / 1.000000  V2  V2  + a i r / * 1.000000  * empty: 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 1 
iteration = 2 	 best= 31.300000	stackLen: 30 => 1.000000  1.000000  V0  a 1.000000  * r * / 1.000000  V2  V2  + a i r / * 1.000000  * empty: 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=22.5976 stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 0 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 1 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 2 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 3 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 4 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 5 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 6 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 7 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 8 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 9 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 10 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 11 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 12 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 13 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 14 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 15 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 16 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 17 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 18 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 19 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 20 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 21 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 22 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 23 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 24 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 25 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 26 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 27 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 28 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 29 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 30 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 31 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 32 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 33 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 34 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 35 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 36 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 37 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 38 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 39 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 40 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 41 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 42 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 43 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 44 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 45 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 46 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 47 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 48 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
iteration = 49 	 best= 22.597597	stackLen: 30 => V5  V2  V0  - + V4  - a i r V2  / V4  V3  + * V5  * empty: 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 0 0 1 0 1 1 1 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=10.8
stackLen: 30 => 1.000000  i 1.000000  1.000000  + 1.000000  + 1.000000  r V2  * V3  * V2  1.000000  V0  / V4  - - i V5  + V5  V4  + * + / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=30
printSolution2: (((((v4 + v5) * (v5 + (((v4 - (v0/1)) - v2)))) + (v3 * (v2 * \sqrt{1})))/(1 + (1 + 1)))/(1))
Tempo de execucao: 1149.3 segundos
FIM
