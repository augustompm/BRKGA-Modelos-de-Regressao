Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [87 52 32 16 72 67 78 28 47 57 ]
BEST SOLUTION! cost=49.5 stackLen: 30 => V3  V0  a 1.000000  / r V0  * V3  * * empty: 0 0 1 0 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 
iteration = 0 	 best= 49.500000	stackLen: 30 => V3  V0  a 1.000000  / r V0  * V3  * * empty: 0 0 1 0 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 
BEST SOLUTION! cost=37.3864 stackLen: 30 => 1.000000  1.000000  e r / V2  * V5  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 
iteration = 0 	 best= 37.386407	stackLen: 30 => 1.000000  1.000000  e r / V2  * V5  * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 0 0 0 
BEST SOLUTION! cost=36.9536 stackLen: 30 => V2  V1  V0  * a r V2  V0  + / V0  * V5  * * empty: 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 36.953571	stackLen: 30 => V2  V1  V0  * a r V2  V0  + / V0  * V5  * * empty: 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 36.953571	stackLen: 30 => V2  V1  V0  * a r V2  V0  + / V0  * V5  * * empty: 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 36.953571	stackLen: 30 => V2  V1  V0  * a r V2  V0  + / V0  * V5  * * empty: 0 0 0 0 0 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=36.9513 stackLen: 30 => 1.000000  e e V5  1.000000  i e a V2  / * * empty: 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 36.951254	stackLen: 30 => 1.000000  e e V5  1.000000  i e a V2  / * * empty: 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 1 	 best= 36.951254	stackLen: 30 => 1.000000  e e V5  1.000000  i e a V2  / * * empty: 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 2 	 best= 36.951254	stackLen: 30 => 1.000000  e e V5  1.000000  i e a V2  / * * empty: 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 3 	 best= 36.951254	stackLen: 30 => 1.000000  e e V5  1.000000  i e a V2  / * * empty: 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 4 	 best= 36.951254	stackLen: 30 => 1.000000  e e V5  1.000000  i e a V2  / * * empty: 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=23.6 stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 0 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 1 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 2 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 3 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 4 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 5 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 6 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 7 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 8 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 9 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 10 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 11 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 12 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 13 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 14 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
iteration = 15 	 best= 23.600000	stackLen: 30 => 1.000000  1.000000  V5  V1  + V3  + / V2  * * empty: 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 1 0 0 0 0 
BEST SOLUTION! cost=18.95 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 18.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  / V5  1.000000  1.000000  + V4  / V1  + + V3  + / V2  * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=15.95 stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.950000	stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [21 24 11 67 10 3 30 41 61 49 ]
BEST SOLUTION! cost=39.7 stackLen: 30 => V1  1.000000  1.000000  / 1.000000  / * 1.000000  V5  V4  - / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 0 0 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 39.700000	stackLen: 30 => V1  1.000000  1.000000  / 1.000000  / * 1.000000  V5  V4  - / * empty: 0 1 1 0 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 0 0 0 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=38.0283 stackLen: 30 => V0  V5  a V1  V5  i + V0  + V3  * a r r a V3  / * * empty: 0 1 0 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 1 
iteration = 0 	 best= 38.028333	stackLen: 30 => V0  V5  a V1  V5  i + V0  + V3  * a r r a V3  / * * empty: 0 1 0 0 1 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 1 0 0 0 1 
BEST SOLUTION! cost=35.6439 stackLen: 30 => 1.000000  e r V3  * V5  i 1.000000  1.000000  * V2  / - + i V0  * empty: 0 1 1 0 0 0 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 1 
iteration = 0 	 best= 35.643875	stackLen: 30 => 1.000000  e r V3  * V5  i 1.000000  1.000000  * V2  / - + i V0  * empty: 0 1 1 0 0 0 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 1 
iteration = 1 	 best= 35.643875	stackLen: 30 => 1.000000  e r V3  * V5  i 1.000000  1.000000  * V2  / - + i V0  * empty: 0 1 1 0 0 0 0 0 1 1 0 1 0 0 0 1 0 1 1 1 0 0 0 0 1 1 1 0 0 1 
BEST SOLUTION! cost=30.1798 stackLen: 30 => V2  a r 1.000000  / V5  V2  V4  1.000000  e V1  i / - * * * empty: 0 1 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 30.179750	stackLen: 30 => V2  a r 1.000000  / V5  V2  V4  1.000000  e V1  i / - * * * empty: 0 1 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 30.179750	stackLen: 30 => V2  a r 1.000000  / V5  V2  V4  1.000000  e V1  i / - * * * empty: 0 1 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 30.179750	stackLen: 30 => V2  a r 1.000000  / V5  V2  V4  1.000000  e V1  i / - * * * empty: 0 1 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 30.179750	stackLen: 30 => V2  a r 1.000000  / V5  V2  V4  1.000000  e V1  i / - * * * empty: 0 1 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 30.179750	stackLen: 30 => V2  a r 1.000000  / V5  V2  V4  1.000000  e V1  i / - * * * empty: 0 1 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 30.179750	stackLen: 30 => V2  a r 1.000000  / V5  V2  V4  1.000000  e V1  i / - * * * empty: 0 1 0 1 0 0 0 1 1 0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=21.9 stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 0 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 1 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 2 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 3 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 4 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 5 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 6 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 7 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
iteration = 8 	 best= 21.900000	stackLen: 30 => V2  V2  + a r 1.000000  / V5  V2  V4  1.000000  1.000000  + 1.000000  / i V1  i / - * * * 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 
BEST SOLUTION! cost=18.6502 stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 18.650192	stackLen: 30 => V2  V2  + V5  + a r 1.000000  1.000000  / / V5  V4  V4  1.000000  1.000000  + 1.000000  / i V1  i / - - * * V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [12 78 93 46 64 41 47 90 28 49 ]
BEST SOLUTION! cost=43 stackLen: 30 => 1.000000  V0  * V0  + 1.000000  V0  * 1.000000  * * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 0 0 1 0 0 1 
iteration = 0 	 best= 43.000000	stackLen: 30 => 1.000000  V0  * V0  + 1.000000  V0  * 1.000000  * * empty: 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 0 0 1 0 0 1 
BEST SOLUTION! cost=35.5 stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 4 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 5 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 6 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 7 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
iteration = 8 	 best= 35.500000	stackLen: 30 => 1.000000  1.000000  V0  V4  * V0  a + 1.000000  * / * empty: 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=35.4 stackLen: 30 => 1.000000  1.000000  1.000000  / V0  V4  + V4  * V0  a + 1.000000  * * * empty: 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 35.400000	stackLen: 30 => 1.000000  1.000000  1.000000  / V0  V4  + V4  * V0  a + 1.000000  * * * empty: 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=22.9 stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 0 	 best= 22.900000	stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 1 	 best= 22.900000	stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 2 	 best= 22.900000	stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 3 	 best= 22.900000	stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 4 	 best= 22.900000	stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 5 	 best= 22.900000	stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
iteration = 6 	 best= 22.900000	stackLen: 30 => V1  V3  V1  + - V4  V2  - - V0  - V4  * empty: 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 0 
BEST SOLUTION! cost=22.75 stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 22.750000	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - V4  * 1.000000  1.000000  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=21.2667 stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 21.266667	stackLen: 30 => V1  V1  + V3  V1  V1  + + - 1.000000  1.000000  + 1.000000  + 1.000000  / 1.000000  + V4  * V2  - - V0  - 1.000000  V4  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [92 48 4 19 25 76 47 38 32 52 ]
BEST SOLUTION! cost=52.7 stackLen: 30 => V0  V1  i i V3  V2  + a V0  / * V5  V5  - * * empty: 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 
iteration = 0 	 best= 52.700000	stackLen: 30 => V0  V1  i i V3  V2  + a V0  / * V5  V5  - * * empty: 0 1 0 1 1 0 1 0 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 1 0 1 0 0 0 1 
BEST SOLUTION! cost=33.2 stackLen: 30 => V0  1.000000  1.000000  1.000000  / * V3  / * empty: 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1 0 1 
iteration = 0 	 best= 33.200000	stackLen: 30 => V0  1.000000  1.000000  1.000000  / * V3  / * empty: 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 1 0 1 0 1 
BEST SOLUTION! cost=27.1708 stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 0 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 1 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 2 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 3 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 4 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 5 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 6 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 7 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 8 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
iteration = 9 	 best= 27.170794	stackLen: 30 => 1.000000  1.000000  V5  / a V3  / * a V5  a V3  / V0  * / empty: 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 0 1 0 0 0 1 0 0 1 
BEST SOLUTION! cost=19.9382 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 19.938214	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - 1.000000  + 1.000000  / V5  a i V3  / * a V5  a V3  / V0  V0  V4  + + * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [45 14 28 16 55 86 10 61 73 75 ]
BEST SOLUTION! cost=32.9059 stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 0 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 1 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 2 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 3 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 4 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 5 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 6 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 7 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 8 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 9 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 10 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 11 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 12 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
iteration = 13 	 best= 32.905921	stackLen: 30 => 1.000000  1.000000  e / r 1.000000  / V2  1.000000  * V5  * / empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 1 1 0 0 1 0 0 0 0 1 
BEST SOLUTION! cost=32.8295 stackLen: 30 => 1.000000  1.000000  + 1.000000  e 1.000000  + 1.000000  * i / V2  V2  V2  + + 1.000000  * V5  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 32.829500	stackLen: 30 => 1.000000  1.000000  + 1.000000  e 1.000000  + 1.000000  * i / V2  V2  V2  + + 1.000000  * V5  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 32.829500	stackLen: 30 => 1.000000  1.000000  + 1.000000  e 1.000000  + 1.000000  * i / V2  V2  V2  + + 1.000000  * V5  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 32.829500	stackLen: 30 => 1.000000  1.000000  + 1.000000  e 1.000000  + 1.000000  * i / V2  V2  V2  + + 1.000000  * V5  * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=30.2 stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 0 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 1 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 2 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 3 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 4 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 5 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 6 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 7 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 8 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 9 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 10 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 11 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 12 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 13 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 14 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 15 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 16 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 17 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 18 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
iteration = 19 	 best= 30.200000	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  * a r / * empty: 0 0 1 0 0 0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 0 1 0 0 1 0 0 0 1 
BEST SOLUTION! cost=28.2035 stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 0 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 1 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 2 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 3 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 4 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 5 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 6 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
iteration = 7 	 best= 28.203528	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  V2  V5  V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 1 1 1 
BEST SOLUTION! cost=27.2636 stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 0 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 1 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 2 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 3 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 4 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 5 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 6 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 7 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 8 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 9 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 10 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 11 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 12 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 13 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 14 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 15 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 16 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 17 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 18 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 19 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 20 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 21 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 22 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 23 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 24 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 25 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 26 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 27 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 28 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 29 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 30 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 31 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 32 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 33 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 34 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 35 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 36 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 37 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 38 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 39 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 40 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 41 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 42 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 43 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 44 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 45 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 46 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 47 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 48 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
iteration = 49 	 best= 27.263583	stackLen: 30 => V5  a i V5  / V4  V2  + * 1.000000  1.000000  + 1.000000  + V2  V5  V5  + V5  * V5  * * a r / r * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=15.95
stackLen: 30 => 1.000000  1.000000  1.000000  1.000000  V5  * 1.000000  1.000000  + V5  V2  - / V1  V1  + - + V1  V4  V3  + - + / V2  * / / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((v2 * ((((v3 + v4) - v1) + (((v1 + v1) - ((v2 - v5)/(1 + 1))) + (v5 * 1)))/1))/1)/1)
Tempo de execucao: 1032.43 segundos
FIM
