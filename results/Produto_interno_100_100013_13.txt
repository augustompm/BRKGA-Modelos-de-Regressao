Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [66 31 53 34 10 82 26 98 3 65 ]
BEST SOLUTION! cost=36.5 stackLen: 30 => 1.000000  r 1.000000  / a 1.000000  * 1.000000  * a V5  V4  * / empty: 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 36.500000	stackLen: 30 => 1.000000  r 1.000000  / a 1.000000  * 1.000000  * a V5  V4  * / empty: 0 1 1 1 1 1 1 0 1 0 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=31.6325 stackLen: 30 => 1.000000  e V3  / 1.000000  V2  i V0  + V2  + / * 1.000000  * empty: 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 0 	 best= 31.632525	stackLen: 30 => 1.000000  e V3  / 1.000000  V2  i V0  + V2  + / * 1.000000  * empty: 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 1 	 best= 31.632525	stackLen: 30 => 1.000000  e V3  / 1.000000  V2  i V0  + V2  + / * 1.000000  * empty: 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 2 	 best= 31.632525	stackLen: 30 => 1.000000  e V3  / 1.000000  V2  i V0  + V2  + / * 1.000000  * empty: 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 3 	 best= 31.632525	stackLen: 30 => 1.000000  e V3  / 1.000000  V2  i V0  + V2  + / * 1.000000  * empty: 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 4 	 best= 31.632525	stackLen: 30 => 1.000000  e V3  / 1.000000  V2  i V0  + V2  + / * 1.000000  * empty: 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
iteration = 5 	 best= 31.632525	stackLen: 30 => 1.000000  e V3  / 1.000000  V2  i V0  + V2  + / * 1.000000  * empty: 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.9169 stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  + V2  V2  + + / * 1.000000  * / empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 0 	 best= 30.916943	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  + V2  V2  + + / * 1.000000  * / empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 1 	 best= 30.916943	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  + V2  V2  + + / * 1.000000  * / empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 2 	 best= 30.916943	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  + V2  V2  + + / * 1.000000  * / empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 3 	 best= 30.916943	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  + V2  V2  + + / * 1.000000  * / empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 4 	 best= 30.916943	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  + V2  V2  + + / * 1.000000  * / empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
iteration = 5 	 best= 30.916943	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  + V2  V2  + + / * 1.000000  * / empty: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 
BEST SOLUTION! cost=24.7734 stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 0 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 1 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 2 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 3 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 4 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 5 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 6 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 7 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 8 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 9 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 10 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 11 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 12 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 13 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 14 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 15 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 16 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 17 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 18 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 19 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 20 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 21 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 22 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 23 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 24 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 25 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 26 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 27 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 28 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 29 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 30 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 31 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 32 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 33 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 34 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 35 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 36 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 37 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 38 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 39 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 40 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 41 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 42 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 43 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 44 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 45 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 46 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 47 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 48 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
iteration = 49 	 best= 24.773356	stackLen: 30 => 1.000000  1.000000  e V3  / 1.000000  V1  i V0  V0  + + V2  V2  + + / * 1.000000  * / empty: 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 1 1 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [28 79 99 42 22 30 76 46 43 61 ]
BEST SOLUTION! cost=32.9 stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 0 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 1 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 2 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 3 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 4 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 5 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 6 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
iteration = 7 	 best= 32.900000	stackLen: 30 => V5  a V4  V5  a V5  / * * empty: 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 1 0 0 1 
BEST SOLUTION! cost=32.6 stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 0 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 1 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 2 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 3 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 4 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 5 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 6 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 7 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 8 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 9 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 10 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 11 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 12 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 13 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
iteration = 14 	 best= 32.600000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  * / * a V1  V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 
BEST SOLUTION! cost=31.85 stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 31.850000	stackLen: 30 => V5  1.000000  1.000000  + 1.000000  1.000000  / / * 1.000000  * a V3  V1  - V1  + V4  V4  + - V5  a V5  V5  + / * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [66 31 49 45 26 78 76 12 2 59 ]
BEST SOLUTION! cost=36.3759 stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r 1.000000  V2  / 1.000000  * * * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 
iteration = 0 	 best= 36.375908	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r 1.000000  V2  / 1.000000  * * * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 
iteration = 1 	 best= 36.375908	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r 1.000000  V2  / 1.000000  * * * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 
iteration = 2 	 best= 36.375908	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r 1.000000  V2  / 1.000000  * * * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 
iteration = 3 	 best= 36.375908	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r 1.000000  V2  / 1.000000  * * * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 
iteration = 4 	 best= 36.375908	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r 1.000000  V2  / 1.000000  * * * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 
iteration = 5 	 best= 36.375908	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r 1.000000  V2  / 1.000000  * * * empty: 0 1 0 1 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 
BEST SOLUTION! cost=36.2325 stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r a 1.000000  1.000000  + 1.000000  * V2  / 1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 36.232467	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r a 1.000000  1.000000  + 1.000000  * V2  / 1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 36.232467	stackLen: 30 => 1.000000  V0  * a r 1.000000  e i r a 1.000000  1.000000  + 1.000000  * V2  / 1.000000  * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=28.1049 stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 28.104866	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 28.104866	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 28.104866	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 28.104866	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 28.104866	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 28.104866	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 28.104866	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V0  i 1.000000  V5  1.000000  e V2  / + / - * * * * empty: 0 0 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=26.8966 stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V5  + V0  i 1.000000  V5  1.000000  1.000000  + e V2  / + * - * * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 26.896640	stackLen: 30 => V1  V4  V5  a 1.000000  / V5  V5  + V0  i 1.000000  V5  1.000000  1.000000  + e V2  / + * - * * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=24.9 stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 0 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 1 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 2 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 3 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 4 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 5 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 6 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 7 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 8 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 9 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 10 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 11 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 12 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 13 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 14 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 15 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 16 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 17 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 18 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 19 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 20 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 21 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 22 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 23 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 24 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 25 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 26 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 27 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 28 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 29 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 30 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 31 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 32 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 33 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 34 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 35 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 36 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 37 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 38 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 39 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 40 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 41 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 42 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 43 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 44 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 45 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 46 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 47 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 48 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
iteration = 49 	 best= 24.900000	stackLen: 30 => 1.000000  V0  a V5  a - 1.000000  V0  a / - * empty: 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [38 47 31 66 4 15 26 34 44 50 ]
BEST SOLUTION! cost=24.4 stackLen: 30 => V2  V2  V2  V2  a V5  / a r * * * empty: 0 1 1 1 0 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 0 	 best= 24.400000	stackLen: 30 => V2  V2  V2  V2  a V5  / a r * * * empty: 0 1 1 1 0 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 1 	 best= 24.400000	stackLen: 30 => V2  V2  V2  V2  a V5  / a r * * * empty: 0 1 1 1 0 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 
iteration = 2 	 best= 24.400000	stackLen: 30 => V2  V2  V2  V2  a V5  / a r * * * empty: 0 1 1 1 0 1 1 0 0 1 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 
BEST SOLUTION! cost=21.7576 stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 3 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 4 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 5 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 6 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 7 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 8 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 9 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 10 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 11 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 12 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 13 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 14 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 15 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 16 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 17 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 18 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 19 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 20 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 21 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 22 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 23 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 24 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 25 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 26 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 27 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 28 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 29 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
iteration = 30 	 best= 21.757619	stackLen: 30 => 1.000000  i V2  V3  a r V0  / 1.000000  V5  V0  1.000000  * - * * * * empty: 0 0 1 1 1 0 1 0 0 1 0 0 1 0 0 0 1 1 0 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=21.6 stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 21.600000	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=19.7819 stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 19.781905	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 19.781905	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 19.781905	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 19.781905	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 19.781905	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 5 	 best= 19.781905	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
iteration = 6 	 best= 19.781905	stackLen: 30 => 1.000000  1.000000  / i V2  V3  a r V0  / 1.000000  V5  V5  - V3  V0  V0  + + 1.000000  * - * * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=12.9257 stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 12.925714	stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [46 30 61 18 95 20 81 92 76 48 ]
BEST SOLUTION! cost=31.4 stackLen: 30 => 1.000000  V4  V0  a r V0  / V2  V1  V1  - + * * / empty: 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 0 	 best= 31.400000	stackLen: 30 => 1.000000  V4  V0  a r V0  / V2  V1  V1  - + * * / empty: 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 1 	 best= 31.400000	stackLen: 30 => 1.000000  V4  V0  a r V0  / V2  V1  V1  - + * * / empty: 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
iteration = 2 	 best= 31.400000	stackLen: 30 => 1.000000  V4  V0  a r V0  / V2  V1  V1  - + * * / empty: 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 1 0 0 1 0 0 0 0 0 1 
BEST SOLUTION! cost=30.6793 stackLen: 30 => V3  a V3  / V0  V5  1.000000  r 1.000000  * V5  * V1  + * * * empty: 0 0 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
iteration = 0 	 best= 30.679286	stackLen: 30 => V3  a V3  / V0  V5  1.000000  r 1.000000  * V5  * V1  + * * * empty: 0 0 1 0 0 1 0 0 1 0 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 0 0 0 0 1 
BEST SOLUTION! cost=21.405 stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 0 	 best= 21.405000	stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 1 	 best= 21.405000	stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 2 	 best= 21.405000	stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 3 	 best= 21.405000	stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 4 	 best= 21.405000	stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 5 	 best= 21.405000	stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
iteration = 6 	 best= 21.405000	stackLen: 30 => V2  i V0  V4  V0  a 1.000000  V1  V0  V4  - - / / * * * empty: 0 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 
BEST SOLUTION! cost=20.0225 stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 21 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 22 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 23 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 24 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 25 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 26 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 27 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 28 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 29 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 30 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 31 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 32 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 33 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 34 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 35 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 36 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 37 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 38 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 39 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 40 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 41 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 42 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 43 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 44 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 45 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 46 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 47 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 48 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 49 	 best= 20.022500	stackLen: 30 => V2  V2  + i V0  V4  V0  V0  + a 1.000000  V1  V1  V4  - - / / * * * empty: 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=12.9257
stackLen: 30 => 1.000000  1.000000  1.000000  * / i V2  V3  a r V0  / 1.000000  V5  V5  i - / V0  V0  V2  + + 1.000000  * - * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
trueStackSize=29
printSolution2: (((((1 * ((v2 + v0) + v0)) - (((v5) - v5)/1)) * (v0/\sqrt{{v3^2}})) * v2) * (((1 * 1)/1)))
Tempo de execucao: 858.879 segundos
FIM
