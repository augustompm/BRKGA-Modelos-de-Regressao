Bi T1: 2:+-
Bi T2: 2:*/
U T1: 1:e
U T2: 3:ira
|ARGS| = 3
individualLen:37
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 100 1
-3.00	7.00	1.00	-5.00	8.00	-7.00	64.00
-6.00	10.00	3.00	3.00	-5.00	-10.00	-98.00
5.00	-1.00	6.00	3.00	-8.00	1.00	29.00
-7.00	6.00	-10.00	-9.00	-9.00	-9.00	99.00
7.00	-9.00	2.00	8.00	-1.00	-7.00	51.00
2.00	-6.00	-3.00	-9.00	3.00	4.00	-48.00
-2.00	-4.00	3.00	-9.00	-3.00	-5.00	15.00
-6.00	-7.00	-8.00	7.00	8.00	-7.00	-42.00
-1.00	-7.00	-6.00	3.00	-10.00	-9.00	121.00
1.00	3.00	5.00	2.00	4.00	-8.00	-26.00
2.00	10.00	-6.00	-5.00	-1.00	-7.00	22.00
0.00	-8.00	-10.00	6.00	-7.00	1.00	46.00
-10.00	-7.00	8.00	-10.00	-5.00	7.00	191.00
-1.00	7.00	-6.00	8.00	-6.00	3.00	-68.00
-4.00	8.00	-8.00	-3.00	-6.00	9.00	-108.00
-8.00	9.00	2.00	-10.00	-5.00	-6.00	23.00
2.00	6.00	4.00	-9.00	10.00	10.00	82.00
-2.00	-9.00	10.00	2.00	-4.00	-2.00	12.00
-4.00	-8.00	8.00	-2.00	-9.00	-2.00	64.00
0.00	2.00	-7.00	-10.00	-3.00	-2.00	8.00
10.00	2.00	1.00	-6.00	-3.00	3.00	5.00
-3.00	-9.00	2.00	-6.00	0.00	0.00	15.00
2.00	0.00	-9.00	2.00	-7.00	-8.00	38.00
10.00	-1.00	-3.00	8.00	8.00	-7.00	-90.00
8.00	10.00	-3.00	3.00	-4.00	-10.00	111.00
-9.00	-1.00	3.00	2.00	4.00	-1.00	11.00
-2.00	4.00	-9.00	-3.00	-10.00	9.00	-71.00
-1.00	2.00	1.00	9.00	-5.00	-3.00	22.00
-7.00	-1.00	6.00	-7.00	7.00	-6.00	-77.00
9.00	10.00	-7.00	5.00	8.00	-9.00	-17.00
-1.00	-10.00	-10.00	-10.00	1.00	7.00	117.00
-9.00	3.00	2.00	-7.00	10.00	10.00	59.00
1.00	-5.00	9.00	9.00	-2.00	5.00	66.00
10.00	7.00	-1.00	-2.00	-7.00	-6.00	114.00
6.00	-7.00	1.00	9.00	-2.00	-2.00	-29.00
10.00	9.00	7.00	-7.00	-2.00	-7.00	55.00
7.00	-3.00	-2.00	3.00	8.00	8.00	37.00
-2.00	-8.00	7.00	9.00	2.00	-5.00	69.00
0.00	-7.00	8.00	4.00	-6.00	4.00	8.00
-9.00	-1.00	-1.00	-2.00	3.00	-1.00	8.00
-4.00	-5.00	-8.00	-6.00	-7.00	-7.00	117.00
1.00	0.00	-7.00	6.00	-2.00	9.00	-60.00
-8.00	0.00	-6.00	-3.00	-5.00	-4.00	38.00
9.00	-1.00	-3.00	-1.00	-2.00	-10.00	14.00
-1.00	-8.00	-3.00	9.00	-2.00	-4.00	-11.00
6.00	10.00	1.00	3.00	-7.00	5.00	28.00
8.00	8.00	3.00	-7.00	-2.00	-1.00	45.00
6.00	7.00	4.00	5.00	3.00	2.00	68.00
5.00	5.00	9.00	-8.00	-1.00	9.00	-56.00
0.00	-6.00	9.00	-5.00	2.00	5.00	-35.00
2.00	-9.00	-3.00	1.00	-6.00	-5.00	9.00
3.00	6.00	4.00	4.00	9.00	-8.00	-38.00
-10.00	6.00	-8.00	7.00	-9.00	10.00	-206.00
-3.00	-6.00	-8.00	-10.00	-4.00	-3.00	110.00
0.00	5.00	-3.00	-1.00	-10.00	10.00	-97.00
4.00	6.00	-9.00	-3.00	-9.00	-6.00	105.00
0.00	2.00	0.00	-3.00	5.00	0.00	0.00
7.00	9.00	0.00	6.00	-5.00	8.00	23.00
6.00	-4.00	0.00	-6.00	0.00	8.00	-24.00
-6.00	1.00	-2.00	-10.00	4.00	-2.00	6.00
9.00	-2.00	0.00	6.00	1.00	-2.00	-20.00
6.00	-4.00	-3.00	-10.00	10.00	-7.00	-64.00
10.00	-4.00	5.00	6.00	-7.00	-8.00	46.00
-7.00	6.00	8.00	5.00	-7.00	-7.00	47.00
6.00	8.00	3.00	0.00	6.00	5.00	78.00
7.00	3.00	4.00	1.00	0.00	-2.00	25.00
-7.00	7.00	10.00	8.00	-2.00	-3.00	37.00
-6.00	7.00	-2.00	6.00	0.00	8.00	-54.00
4.00	1.00	3.00	3.00	2.00	1.00	15.00
9.00	4.00	4.00	5.00	5.00	-2.00	46.00
-4.00	0.00	-3.00	-8.00	-8.00	5.00	-16.00
9.00	-9.00	-9.00	-9.00	-10.00	3.00	-30.00
2.00	-8.00	9.00	2.00	9.00	-6.00	-52.00
-6.00	-9.00	2.00	10.00	9.00	-6.00	20.00
-2.00	7.00	-9.00	8.00	3.00	8.00	-62.00
4.00	-8.00	-1.00	-3.00	5.00	-5.00	-54.00
6.00	-2.00	0.00	-6.00	-4.00	9.00	-48.00
3.00	-4.00	-5.00	-8.00	2.00	4.00	36.00
-6.00	-3.00	7.00	10.00	9.00	-3.00	61.00
4.00	3.00	-1.00	8.00	10.00	-10.00	-96.00
6.00	-6.00	0.00	7.00	3.00	6.00	-18.00
-5.00	-9.00	2.00	5.00	-5.00	9.00	10.00
0.00	3.00	10.00	-6.00	-7.00	1.00	-67.00
-6.00	7.00	1.00	-1.00	-4.00	-2.00	-35.00
-1.00	10.00	-1.00	-10.00	-8.00	-7.00	56.00
-5.00	6.00	-1.00	6.00	-5.00	-7.00	-1.00
10.00	1.00	-9.00	-10.00	2.00	-6.00	88.00
5.00	-6.00	7.00	8.00	5.00	7.00	61.00
8.00	-9.00	0.00	-9.00	4.00	-3.00	-84.00
-1.00	4.00	-10.00	-4.00	-2.00	-8.00	52.00
-5.00	9.00	8.00	9.00	-5.00	-4.00	47.00
9.00	8.00	-5.00	-4.00	4.00	8.00	124.00
-4.00	0.00	1.00	-7.00	3.00	4.00	5.00
-2.00	-4.00	6.00	-7.00	0.00	-6.00	-34.00
-5.00	-4.00	6.00	-8.00	7.00	-2.00	-42.00
10.00	0.00	1.00	-3.00	0.00	3.00	-3.00
6.00	4.00	-2.00	0.00	1.00	-8.00	16.00
-8.00	-2.00	-4.00	10.00	-7.00	-10.00	46.00
-2.00	10.00	-5.00	-9.00	-5.00	2.00	15.00
-3.00	7.00	7.00	-8.00	-6.00	-4.00	-53.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=100
run_brkga:
best=inf
SELECTED: [66 31 53 34 10 82 26 98 3 65 ]
BEST SOLUTION! cost=35.7 stackLen: 10 => 1.000000  V3  * V2  * empty: 0 1 1 1 1 0 1 0 0 0 
iteration = 0 	 best= 35.700000	stackLen: 10 => 1.000000  V3  * V2  * empty: 0 1 1 1 1 0 1 0 0 0 
BEST SOLUTION! cost=32.2 stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 0 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 1 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 2 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 3 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 4 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 5 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 6 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 7 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 8 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 9 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 10 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 11 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 12 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 13 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 14 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 15 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 16 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 17 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 18 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
iteration = 19 	 best= 32.200000	stackLen: 10 => V2  V5  V3  + * empty: 0 1 0 0 1 1 1 1 0 0 
BEST SOLUTION! cost=24.1 stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 24.100000	stackLen: 10 => V2  V5  V5  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=23.6 stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 23.600000	stackLen: 10 => V2  V0  V0  * r V5  V4  + + * empty: 0 0 0 0 0 0 0 0 0 0 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 4)
SELECTED: [37 23 48 34 98 19 15 95 81 69 ]
BEST SOLUTION! cost=27.9 stackLen: 15 => V3  1.000000  1.000000  + V2  / * empty: 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
iteration = 0 	 best= 27.900000	stackLen: 15 => V3  1.000000  1.000000  + V2  / * empty: 0 0 1 1 1 1 1 0 1 1 0 0 0 0 1 
BEST SOLUTION! cost=22.6 stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 0 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 1 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 2 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 3 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 4 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 5 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 6 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 7 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 8 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 9 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 10 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 11 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 12 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 13 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 14 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
iteration = 15 	 best= 22.600000	stackLen: 15 => V2  V5  V4  - * empty: 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 
BEST SOLUTION! cost=21.6 stackLen: 15 => V2  V5  V4  V4  + V1  + - * empty: 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 
iteration = 0 	 best= 21.600000	stackLen: 15 => V2  V5  V4  V4  + V1  + - * empty: 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 
iteration = 1 	 best= 21.600000	stackLen: 15 => V2  V5  V4  V4  + V1  + - * empty: 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 
iteration = 2 	 best= 21.600000	stackLen: 15 => V2  V5  V4  V4  + V1  + - * empty: 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 
iteration = 3 	 best= 21.600000	stackLen: 15 => V2  V5  V4  V4  + V1  + - * empty: 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 
iteration = 4 	 best= 21.600000	stackLen: 15 => V2  V5  V4  V4  + V1  + - * empty: 0 0 1 1 0 0 0 0 0 0 0 1 1 1 1 
BEST SOLUTION! cost=19.2 stackLen: 15 => V3  V4  a r + V2  * empty: 0 0 1 1 0 0 1 0 1 1 1 1 1 0 0 
COST2 IS BETTER!!!18.1
iteration = 0 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 1 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 2 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 3 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 4 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 5 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 6 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 7 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 8 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 9 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 10 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 11 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
iteration = 12 	 best= 18.100000	stackLen: 15 => V3  V4  V4  + a r + V2  * empty: 0 0 0 0 1 0 0 0 1 1 0 0 1 1 1 
BEST SOLUTION! cost=17.2899 stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 17.289949	stackLen: 15 => V3  V4  V4  1.000000  V4  * + * i r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
BEST SOLUTION! cost=16.9 stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.900000	stackLen: 15 => V3  V5  V4  1.000000  V4  * + + a r + i V2  * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 3)
SELECTED: [34 56 3 82 19 31 25 29 93 40 ]
BEST SOLUTION! cost=22.6 stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 0 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 1 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 2 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 3 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 4 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 5 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 6 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
iteration = 7 	 best= 22.600000	stackLen: 22 => V4  1.000000  V2  i / * empty: 0 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 0 1 
BEST SOLUTION! cost=19.2 stackLen: 22 => 1.000000  V2  / V5  V4  + * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 
iteration = 0 	 best= 19.200000	stackLen: 22 => 1.000000  V2  / V5  V4  + * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 
iteration = 1 	 best= 19.200000	stackLen: 22 => 1.000000  V2  / V5  V4  + * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 
iteration = 2 	 best= 19.200000	stackLen: 22 => 1.000000  V2  / V5  V4  + * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 
iteration = 3 	 best= 19.200000	stackLen: 22 => 1.000000  V2  / V5  V4  + * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 0 0 
BEST SOLUTION! cost=18.6 stackLen: 22 => V4  V5  * V0  1.000000  V2  V1  + / * + empty: 0 1 0 1 1 1 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 
iteration = 0 	 best= 18.600000	stackLen: 22 => V4  V5  * V0  1.000000  V2  V1  + / * + empty: 0 1 0 1 1 1 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 
iteration = 1 	 best= 18.600000	stackLen: 22 => V4  V5  * V0  1.000000  V2  V1  + / * + empty: 0 1 0 1 1 1 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 
iteration = 2 	 best= 18.600000	stackLen: 22 => V4  V5  * V0  1.000000  V2  V1  + / * + empty: 0 1 0 1 1 1 1 1 0 1 0 1 0 1 1 0 1 0 0 0 0 0 
BEST SOLUTION! cost=16.9373 stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 1 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 2 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 3 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 4 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 5 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 6 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 7 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 8 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 9 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 10 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 11 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 12 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
iteration = 13 	 best= 16.937266	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  e / 1.000000  V5  a / / + empty: 0 0 0 1 0 1 1 1 1 0 0 0 0 1 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=16.8358 stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 16.835823	stackLen: 22 => V2  V4  * 1.000000  a 1.000000  1.000000  + 1.000000  / e + 1.000000  V5  V5  V5  - - a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=16.7 stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 16.700000	stackLen: 22 => V2  V4  * 1.000000  1.000000  1.000000  i 1.000000  + 1.000000  + 1.000000  V5  V0  - / / a / / + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 2)
SELECTED: [69 86 30 59 96 93 31 98 34 95 ]
BEST SOLUTION! cost=21.9 stackLen: 30 => 1.000000  i V5  V1  * * 1.000000  V4  / a - empty: 0 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 
iteration = 0 	 best= 21.900000	stackLen: 30 => 1.000000  i V5  V1  * * 1.000000  V4  / a - empty: 0 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 
iteration = 1 	 best= 21.900000	stackLen: 30 => 1.000000  i V5  V1  * * 1.000000  V4  / a - empty: 0 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 0 0 1 1 0 1 1 1 0 0 0 1 
BEST SOLUTION! cost=21.464 stackLen: 30 => V2  a V5  a r V5  V1  - * * a r r 1.000000  * empty: 0 1 0 0 0 0 0 0 0 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 0 0 1 0 0 1 
COST2 IS BETTER!!!21.0257
iteration = 0 	 best= 21.025679	stackLen: 30 => V2  a V5  a r V5  V5  + V1  - * * a r r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 21.025679	stackLen: 30 => V2  a V5  a r V5  V5  + V1  - * * a r r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 21.025679	stackLen: 30 => V2  a V5  a r V5  V5  + V1  - * * a r r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 21.025679	stackLen: 30 => V2  a V5  a r V5  V5  + V1  - * * a r r 1.000000  * empty: 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.1492 stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 0 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 1 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 2 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 3 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 4 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 5 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 6 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 7 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 8 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 9 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 10 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 11 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 12 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 13 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 14 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 15 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 16 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 17 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 18 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 19 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 20 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 21 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 22 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 23 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 24 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 25 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
iteration = 26 	 best= 18.149238	stackLen: 30 => 1.000000  V2  a V4  a / e i V2  / V3  * * empty: 0 1 1 1 1 0 1 1 0 0 1 1 0 1 0 0 1 1 1 0 1 1 0 0 0 0 1 1 0 1 
BEST SOLUTION! cost=17.3909 stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 17.390878	stackLen: 30 => 1.000000  1.000000  1.000000  / 1.000000  1.000000  + / + V2  a V3  a / e i V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=16.5424 stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 0 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 1 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 2 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 3 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 4 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 5 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 6 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 7 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 8 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 9 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 10 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 11 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 12 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 13 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 14 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 15 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 16 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
iteration = 17 	 best= 16.542367	stackLen: 30 => 1.000000  1.000000  + 1.000000  1.000000  - / 1.000000  1.000000  1.000000  + / + V2  V2  + a V3  a / e a V2  / V3  * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 
BEST SOLUTION! cost=15.2146 stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 0 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 1 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 2 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 3 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 4 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 5 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 6 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 7 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 8 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 9 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 10 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 11 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 12 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 13 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 14 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 15 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 16 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 17 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 18 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 19 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 20 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 21 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 22 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 23 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 24 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 25 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 26 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 27 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 28 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 29 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 30 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 31 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 32 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 33 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 34 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 35 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 36 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 37 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 38 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 39 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 40 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 41 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 42 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 43 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 44 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 45 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 46 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 47 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 48 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
iteration = 49 	 best= 15.214643	stackLen: 30 => 1.000000  1.000000  / 1.000000  1.000000  / 1.000000  1.000000  V4  V3  + V3  + / * V2  V2  + a V3  a / e a V2  / * * * empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
RESET TRIGGERED! TRYING AGAIN... (remaining resets: 1)
SELECTED: [43 71 38 64 13 76 62 61 96 53 ]
BEST SOLUTION! cost=36.3848 stackLen: 45 => V0  1.000000  1.000000  V3  V1  V4  * a 1.000000  i V2  V1  * a * / * * / * empty: 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 
iteration = 0 	 best= 36.384776	stackLen: 45 => V0  1.000000  1.000000  V3  V1  V4  * a 1.000000  i V2  V1  * a * / * * / * empty: 0 1 0 0 1 1 1 1 0 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 0 0 0 0 0 0 
BEST SOLUTION! cost=31.2 stackLen: 45 => V4  V1  - 1.000000  V0  V2  + / * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 
iteration = 0 	 best= 31.200000	stackLen: 45 => V4  V1  - 1.000000  V0  V2  + / * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 
iteration = 1 	 best= 31.200000	stackLen: 45 => V4  V1  - 1.000000  V0  V2  + / * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 
iteration = 2 	 best= 31.200000	stackLen: 45 => V4  V1  - 1.000000  V0  V2  + / * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 
iteration = 3 	 best= 31.200000	stackLen: 45 => V4  V1  - 1.000000  V0  V2  + / * empty: 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=26.3 stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 0 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 1 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 2 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 3 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 4 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 5 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 6 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 7 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 8 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 9 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
iteration = 10 	 best= 26.300000	stackLen: 45 => V4  a r V5  V4  V3  a r * * / empty: 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 0 1 
BEST SOLUTION! cost=24.2224 stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 24.222381	stackLen: 45 => V4  V4  + a V5  V4  V3  V3  + a a r * * / empty: 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=22.136 stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 22.135952	stackLen: 45 => V4  V4  + a V5  V1  + V4  V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.6792 stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 20.679167	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=20.3915 stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 20.391548	stackLen: 45 => V4  V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.948 stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 0 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 1 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 2 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 3 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 4 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 5 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 6 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 7 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 8 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 9 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 10 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 11 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 12 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 13 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 14 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 15 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 16 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 17 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 18 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 19 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
iteration = 20 	 best= 18.948042	stackLen: 45 => V4  V4  + V4  + a V5  V5  V5  + + V1  V1  + + V4  V4  - V4  V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 
BEST SOLUTION! cost=18.7604 stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 0 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 1 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 2 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 3 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 4 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 5 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 6 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 7 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 8 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 9 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 10 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 11 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 12 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 13 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 14 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
iteration = 15 	 best= 18.760357	stackLen: 45 => V4  V4  V4  + + V4  + a V5  V5  + V5  V5  V1  + V1  + + + V4  V4  - V4  V4  + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 
BEST SOLUTION! cost=18.1418 stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 18.141794	stackLen: 45 => V4  V4  V4  + + V4  + a V1  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=17.4285 stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 17.428507	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V4  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=17.2069 stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 0 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 1 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 2 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 3 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 4 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 5 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 6 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 7 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 8 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 9 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 10 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 11 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 12 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 13 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 14 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 15 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 16 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 17 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 18 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 19 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 20 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 21 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 22 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 23 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 24 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 25 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 26 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 27 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 28 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 29 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 30 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 31 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 32 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 33 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 34 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 35 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 36 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 37 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 38 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 39 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 40 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 41 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 42 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 43 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 44 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 45 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 46 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 47 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 48 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
iteration = 49 	 best= 17.206875	stackLen: 45 => V4  V4  V4  + + V4  + a V2  V5  - V5  + V5  V5  V5  + V1  + + + V4  V4  - V5  - V4  V4  V2  + + V4  + + V3  V3  - V3  + a a r * * / empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
NO MORE RESETS LEFT. FINISHING.
FINISHED BRKGP!
best=15.2146
stackLen: 45 => V2  V2  * 1.000000  V3  + V2  V5  V3  V2  - V3  + / + V0  V1  / e V5  e / r i V4  - - - * + + + + + + - / V5  V1  / V4  V2  V3  V5  empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=29
